<?php
$topdir = "../../../..";
# Note that we must use the PHP "$$" indirection to assign to the
# "title" variable, because if we list "$ title" (without the space)
# in this file, Doxygen will replace it with a string title.
$ver = basename(getcwd());
$thwarting_doxygen_preprocessor = "title";
$$thwarting_doxygen_preprocessor = "Portable Hardware Locality (hwloc) Documentation: $ver";
$header_include_file = "$topdir/projects/hwloc/doc/$ver/www.open-mpi.org-css.inc";

include_once("$topdir/projects/hwloc/nav.inc");
include_once("$topdir/includes/header.inc");
include_once("$topdir/includes/code.inc");
?>
<!-- Generated by Doxygen 1.7.4 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.php"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.php"><span>Modules</span></a></li>
      <li><a href="annotated.php"><span>Data&#160;Structures</span></a></li>
      <li><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">Advanced I/O object traversal helpers</div>  </div>
</div>
<div class="contents">
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#gad7ecce015a75d8edafb4669fba702859">hwloc_get_non_io_ancestor_obj</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology , <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> ioobj)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the first non-I/O ancestor object.  <a href="#gad7ecce015a75d8edafb4669fba702859"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#gab17568d759c3a99abe12e3edd4731172">hwloc_get_next_pcidev</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> prev)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the next PCI device in the system.  <a href="#gab17568d759c3a99abe12e3edd4731172"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#ga080ae4c731eb1276e8a7cdaad0b8db16">hwloc_get_pcidev_by_busid</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, unsigned domain, unsigned bus, unsigned dev, unsigned func)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Find the PCI device object matching the PCI bus id given domain, bus device and function PCI bus id.  <a href="#ga080ae4c731eb1276e8a7cdaad0b8db16"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#gaafa3ac0b038c73d533dd5446e71f7d48">hwloc_get_pcidev_by_busidstring</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, const char *busid)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Find the PCI device object matching the PCI bus id given as a string xxxx:yy:zz.t or yy:zz.t.  <a href="#gaafa3ac0b038c73d533dd5446e71f7d48"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#ga04b37de10aacb8a2aa48c8c27d7ba1d9">hwloc_get_next_osdev</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> prev)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the next OS device in the system.  <a href="#ga04b37de10aacb8a2aa48c8c27d7ba1d9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#gafa52d147ce3062344ca2a3f02670fd4c">hwloc_get_next_bridge</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> prev)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the next bridge in the system.  <a href="#gafa52d147ce3062344ca2a3f02670fd4c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#gae83076026dd1a60b1db99fe8c3811697">hwloc_bridge_covers_pcibus</a> (<a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> bridge, unsigned domain, unsigned bus)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#ga5004b66c2c3a0e390accec96324bd5e9">hwloc_get_hostbridge_by_pcibus</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, unsigned domain, unsigned bus)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Find the hostbridge that covers the given PCI bus.  <a href="#ga5004b66c2c3a0e390accec96324bd5e9"></a><br/></td></tr>
</table>
<hr/><h2>Function Documentation</h2>
<a class="anchor" id="gae83076026dd1a60b1db99fe8c3811697"></a><!-- doxytag: member="helper.h::hwloc_bridge_covers_pcibus" ref="gae83076026dd1a60b1db99fe8c3811697" args="(hwloc_obj_t bridge, unsigned domain, unsigned bus)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline int hwloc_bridge_covers_pcibus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td>
          <td class="paramname"><em>bridge</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>domain</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>bus</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

</div>
</div>
<a class="anchor" id="ga5004b66c2c3a0e390accec96324bd5e9"></a><!-- doxytag: member="helper.h::hwloc_get_hostbridge_by_pcibus" ref="ga5004b66c2c3a0e390accec96324bd5e9" args="(hwloc_topology_t topology, unsigned domain, unsigned bus)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> hwloc_get_hostbridge_by_pcibus </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>domain</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>bus</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Find the hostbridge that covers the given PCI bus. </p>
<p>This is useful for finding the locality of a bus because it is the hostbridge parent cpuset. </p>

</div>
</div>
<a class="anchor" id="gafa52d147ce3062344ca2a3f02670fd4c"></a><!-- doxytag: member="helper.h::hwloc_get_next_bridge" ref="gafa52d147ce3062344ca2a3f02670fd4c" args="(hwloc_topology_t topology, hwloc_obj_t prev)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> hwloc_get_next_bridge </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td>
          <td class="paramname"><em>prev</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get the next bridge in the system. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>the first bridge if <code>prev</code> is <code>NULL</code>. </dd></dl>

</div>
</div>
<a class="anchor" id="ga04b37de10aacb8a2aa48c8c27d7ba1d9"></a><!-- doxytag: member="helper.h::hwloc_get_next_osdev" ref="ga04b37de10aacb8a2aa48c8c27d7ba1d9" args="(hwloc_topology_t topology, hwloc_obj_t prev)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> hwloc_get_next_osdev </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td>
          <td class="paramname"><em>prev</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get the next OS device in the system. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>the first OS device if <code>prev</code> is <code>NULL</code>. </dd></dl>

</div>
</div>
<a class="anchor" id="gab17568d759c3a99abe12e3edd4731172"></a><!-- doxytag: member="helper.h::hwloc_get_next_pcidev" ref="gab17568d759c3a99abe12e3edd4731172" args="(hwloc_topology_t topology, hwloc_obj_t prev)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> hwloc_get_next_pcidev </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td>
          <td class="paramname"><em>prev</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get the next PCI device in the system. </p>
<dl class="return"><dt><b>Returns:</b></dt><dd>the first PCI device if <code>prev</code> is <code>NULL</code>. </dd></dl>

</div>
</div>
<a class="anchor" id="gad7ecce015a75d8edafb4669fba702859"></a><!-- doxytag: member="helper.h::hwloc_get_non_io_ancestor_obj" ref="gad7ecce015a75d8edafb4669fba702859" args="(hwloc_topology_t topology , hwloc_obj_t ioobj)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> hwloc_get_non_io_ancestor_obj </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology&#160;</td>
          <td class="paramname"><em></em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td>
          <td class="paramname"><em>ioobj</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Get the first non-I/O ancestor object. </p>
<p>Given the I/O object <code>ioobj</code>, find the smallest non-I/O ancestor object. This regular object may then be used for binding because its locality is the same as <code>ioobj</code>. </p>

</div>
</div>
<a class="anchor" id="ga080ae4c731eb1276e8a7cdaad0b8db16"></a><!-- doxytag: member="helper.h::hwloc_get_pcidev_by_busid" ref="ga080ae4c731eb1276e8a7cdaad0b8db16" args="(hwloc_topology_t topology, unsigned domain, unsigned bus, unsigned dev, unsigned func)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> hwloc_get_pcidev_by_busid </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>domain</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>bus</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>dev</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&#160;</td>
          <td class="paramname"><em>func</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Find the PCI device object matching the PCI bus id given domain, bus device and function PCI bus id. </p>

</div>
</div>
<a class="anchor" id="gaafa3ac0b038c73d533dd5446e71f7d48"></a><!-- doxytag: member="helper.h::hwloc_get_pcidev_by_busidstring" ref="gaafa3ac0b038c73d533dd5446e71f7d48" args="(hwloc_topology_t topology, const char *busid)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> hwloc_get_pcidev_by_busidstring </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&#160;</td>
          <td class="paramname"><em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *&#160;</td>
          <td class="paramname"><em>busid</em>&#160;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td><code> [static]</code></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>Find the PCI device object matching the PCI bus id given as a string xxxx:yy:zz.t or yy:zz.t. </p>

</div>
</div>
</div>
<?php
include_once("$topdir/includes/footer.inc");
