<?php
$topdir = "../../../..";
# Note that we must use the PHP "$$" indirection to assign to the
# "title" variable, because if we list "$ title" (without the space)
# in this file, Doxygen will replace it with a string title.
$ver = basename(getcwd());
$thwarting_doxygen_preprocessor = "title";
$$thwarting_doxygen_preprocessor = "Portable Hardware Locality (hwloc) Documentation: $ver";
$header_include_file = "$topdir/projects/hwloc/doc/$ver/www.open-mpi.org-css.inc";

include_once("$topdir/projects/hwloc/nav.inc");
include_once("$topdir/includes/header.inc");
include_once("$topdir/includes/code.inc");
?>
<!-- Generated by Doxygen 1.7.4 -->
  <div id="navrow1" class="tabs">
    <ul class="tablist">
      <li><a href="index.php"><span>Main&#160;Page</span></a></li>
      <li><a href="pages.php"><span>Related&#160;Pages</span></a></li>
      <li><a href="modules.php"><span>Modules</span></a></li>
      <li><a href="annotated.php"><span>Data&#160;Structures</span></a></li>
      <li class="current"><a href="files.php"><span>Files</span></a></li>
    </ul>
  </div>
  <div id="navrow2" class="tabs2">
    <ul class="tablist">
      <li><a href="files.php"><span>File&#160;List</span></a></li>
      <li><a href="globals.php"><span>Globals</span></a></li>
    </ul>
  </div>
</div>
<div class="header">
  <div class="summary">
<a href="#func-members">Functions</a>  </div>
  <div class="headertitle">
<div class="title">helper.h File Reference</div>  </div>
</div>
<div class="contents">

<p>High-level hwloc traversal helpers.  
<a href="#details">More...</a></p>
<div class="textblock"><code>#include &lt;stdlib.h&gt;</code><br/>
<code>#include &lt;errno.h&gt;</code><br/>
</div>
<p><a href="helper_8h_source.php">Go to the source code of this file.</a></p>
<table class="memberdecls">
<tr><td colspan="2"><h2><a name="func-members"></a>
Functions</h2></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline int <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__types.php#ga0ffafb4c0ae13b9a7541ca820ca34883">hwloc_get_type_or_below_depth</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__types.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the depth of objects of type <code>type</code> or below.  <a href="group__hwlocality__helper__types.php#ga0ffafb4c0ae13b9a7541ca820ca34883"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline int <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__types.php#ga24b9cd5917fcebac6e45ae38d0a6cda4">hwloc_get_type_or_above_depth</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__types.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the depth of objects of type <code>type</code> or above.  <a href="group__hwlocality__helper__types.php#ga24b9cd5917fcebac6e45ae38d0a6cda4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__traversal__basic.php#ga632edae4a651996895ebde85ea2c1264">hwloc_get_root_obj</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the top-object of the topology-tree.  <a href="group__hwlocality__helper__traversal__basic.php#ga632edae4a651996895ebde85ea2c1264"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__traversal__basic.php#gafa813c4ff8d610b3e158224a56386b2f">hwloc_get_ancestor_obj_by_depth</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology , unsigned depth, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> obj)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the ancestor object of <code>obj</code> at depth <code>depth</code>.  <a href="group__hwlocality__helper__traversal__basic.php#gafa813c4ff8d610b3e158224a56386b2f"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__traversal__basic.php#ga20ade151cb33991b4cd960924a830764">hwloc_get_ancestor_obj_by_type</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology , <a class="el" href="group__hwlocality__types.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> obj)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the ancestor object of <code>obj</code> with type <code>type</code>.  <a href="group__hwlocality__helper__traversal__basic.php#ga20ade151cb33991b4cd960924a830764"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__traversal__basic.php#gab7c1dce3f42ece5bfa621e87cf332418">hwloc_get_next_obj_by_depth</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, unsigned depth, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> prev)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the next object at depth <code>depth</code>.  <a href="group__hwlocality__helper__traversal__basic.php#gab7c1dce3f42ece5bfa621e87cf332418"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__traversal__basic.php#ga5f08ceb69375341e73563cfe2e77534e">hwloc_get_next_obj_by_type</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__types.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> prev)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the next object of type <code>type</code>.  <a href="group__hwlocality__helper__traversal__basic.php#ga5f08ceb69375341e73563cfe2e77534e"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__traversal__basic.php#ga61e00b83e7e0a1a946dc1bb29c49ccba">hwloc_get_pu_obj_by_os_index</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, unsigned os_index)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the object of type <a class="el" href="group__hwlocality__types.php#ggacd37bb612667dc437d66bfb175a8dc55abca6887e80cb291353b0a0c1da83f661" title="Processing Unit, or (Logical) Processor. An execution unit (may share a core with some other logical ...">HWLOC_OBJ_PU</a> with <code>os_index</code>.  <a href="group__hwlocality__helper__traversal__basic.php#ga61e00b83e7e0a1a946dc1bb29c49ccba"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__traversal__basic.php#gae5ef1af636849f77714e1584ba78cf9c">hwloc_get_next_child</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology , <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> parent, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> prev)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the next child.  <a href="group__hwlocality__helper__traversal__basic.php#gae5ef1af636849f77714e1584ba78cf9c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__traversal__basic.php#gac574b7b06d2d937002dd538e08dbd554">hwloc_get_common_ancestor_obj</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology , <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> obj1, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> obj2)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns the common parent object to objects lvl1 and lvl2.  <a href="group__hwlocality__helper__traversal__basic.php#gac574b7b06d2d937002dd538e08dbd554"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline int <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__traversal__basic.php#ga38d9bd3a7566d0e6b0ab95d652557707">hwloc_obj_is_in_subtree</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology , <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> obj, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> subtree_root)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Returns true if <code>obj</code> is inside the subtree beginning with <code>subtree_root</code>.  <a href="group__hwlocality__helper__traversal__basic.php#ga38d9bd3a7566d0e6b0ab95d652557707"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__find__inside.php#gabcd5fa81a95fa5335950cae092277d5b">hwloc_get_first_largest_obj_inside_cpuset</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the first largest object included in the given cpuset <code>set</code>.  <a href="group__hwlocality__helper__find__inside.php#gabcd5fa81a95fa5335950cae092277d5b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"> int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__find__inside.php#gaab04c89623662e63a48ed2cd48eb601c">hwloc_get_largest_objs_inside_cpuset</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> *restrict objs, int max)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the set of largest objects covering exactly a given cpuset <code>set</code>.  <a href="group__hwlocality__helper__find__inside.php#gaab04c89623662e63a48ed2cd48eb601c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__find__inside.php#ga8af256c2572f16520f95440b884c1bd6">hwloc_get_next_obj_inside_cpuset_by_depth</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, unsigned depth, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> prev)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the next object at depth <code>depth</code> included in CPU set <code>set</code>.  <a href="group__hwlocality__helper__find__inside.php#ga8af256c2572f16520f95440b884c1bd6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__find__inside.php#ga934e7ecd68b33403e0c0be779d9ed1e6">hwloc_get_next_obj_inside_cpuset_by_type</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, <a class="el" href="group__hwlocality__types.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> prev)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the next object of type <code>type</code> included in CPU set <code>set</code>.  <a href="group__hwlocality__helper__find__inside.php#ga934e7ecd68b33403e0c0be779d9ed1e6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__find__inside.php#ga20703980008f82379f98f56857611a1a">hwloc_get_obj_inside_cpuset_by_depth</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, unsigned depth, unsigned idx)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the (logically) <code>idx</code> -th object at depth <code>depth</code> included in CPU set <code>set</code>.  <a href="group__hwlocality__helper__find__inside.php#ga20703980008f82379f98f56857611a1a"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__find__inside.php#ga50a80a0021e5843d968c3b97aebaad9b">hwloc_get_obj_inside_cpuset_by_type</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, <a class="el" href="group__hwlocality__types.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type, unsigned idx)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the <code>idx</code> -th object of type <code>type</code> included in CPU set <code>set</code>.  <a href="group__hwlocality__helper__find__inside.php#ga50a80a0021e5843d968c3b97aebaad9b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline unsigned <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__find__inside.php#ga6807db0012369efe19b8d3dcee235493">hwloc_get_nbobjs_inside_cpuset_by_depth</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, unsigned depth)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the number of objects at depth <code>depth</code> included in CPU set <code>set</code>.  <a href="group__hwlocality__helper__find__inside.php#ga6807db0012369efe19b8d3dcee235493"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline int <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__find__inside.php#ga72c5bc4317a4c3938e32447b769813a0">hwloc_get_nbobjs_inside_cpuset_by_type</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, <a class="el" href="group__hwlocality__types.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Return the number of objects of type <code>type</code> included in CPU set <code>set</code>.  <a href="group__hwlocality__helper__find__inside.php#ga72c5bc4317a4c3938e32447b769813a0"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__find__covering.php#gab56b99460194bbcb36016d36d55132a7">hwloc_get_child_covering_cpuset</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology , <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> parent)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the child covering at least CPU set <code>set</code>.  <a href="group__hwlocality__helper__find__covering.php#gab56b99460194bbcb36016d36d55132a7"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__find__covering.php#ga2a0de36ea0c3c70fb5f4cba0bb192582">hwloc_get_obj_covering_cpuset</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the lowest object covering at least CPU set <code>set</code>.  <a href="group__hwlocality__helper__find__covering.php#ga2a0de36ea0c3c70fb5f4cba0bb192582"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__find__coverings.php#ga2f9a4ec15e9cfae8c21501257a51ce5b">hwloc_get_next_obj_covering_cpuset_by_depth</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, unsigned depth, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> prev)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Iterate through same-depth objects covering at least CPU set <code>set</code>.  <a href="group__hwlocality__helper__find__coverings.php#ga2f9a4ec15e9cfae8c21501257a51ce5b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__find__coverings.php#ga5915ea30f326676b3a4cfff371ce04d1">hwloc_get_next_obj_covering_cpuset_by_type</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set, <a class="el" href="group__hwlocality__types.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> prev)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Iterate through same-type objects covering at least CPU set <code>set</code>.  <a href="group__hwlocality__helper__find__coverings.php#ga5915ea30f326676b3a4cfff371ce04d1"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__find__cache.php#gae744419648117cbd613a038074aa0627">hwloc_get_cache_covering_cpuset</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> set)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the first cache covering a cpuset <code>set</code>.  <a href="group__hwlocality__helper__find__cache.php#gae744419648117cbd613a038074aa0627"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__find__cache.php#ga75e961873d4b976ab10bc4739248c96d">hwloc_get_shared_cache_covering_obj</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology , <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> obj)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the first cache shared between an object and somebody else.  <a href="group__hwlocality__helper__find__cache.php#ga75e961873d4b976ab10bc4739248c96d"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top"> unsigned&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__traversal.php#ga26c2ac4f25b1ed293249c88e232f1bea">hwloc_get_closest_objs</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> src, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> *restrict objs, unsigned max)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Do a depth-first traversal of the topology to find and sort.  <a href="group__hwlocality__helper__traversal.php#ga26c2ac4f25b1ed293249c88e232f1bea"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__traversal.php#ga3d32c128aa36b5c9d56f6bf9e70d0e78">hwloc_get_obj_below_by_type</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__types.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type1, unsigned idx1, <a class="el" href="group__hwlocality__types.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type2, unsigned idx2)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Find an object below another object, both specified by types and indexes.  <a href="group__hwlocality__helper__traversal.php#ga3d32c128aa36b5c9d56f6bf9e70d0e78"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__traversal.php#ga340bb7021204078c30382ea77d38bde9">hwloc_get_obj_below_array_by_type</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, int nr, <a class="el" href="group__hwlocality__types.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> *typev, unsigned *idxv)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Find an object below a chain of objects specified by types and indexes.  <a href="group__hwlocality__helper__traversal.php#ga340bb7021204078c30382ea77d38bde9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__binding.php#gaf057d7c5e3cb3df897ce527258537619">hwloc_distributev</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> *root, unsigned n_roots, <a class="el" href="group__hwlocality__sets.php#ga4bbf39b68b6f568fb92739e7c0ea7801">hwloc_cpuset_t</a> *cpuset, unsigned n, unsigned until)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Distribute <code>n</code> items over the topology under <code>root</code>.  <a href="group__hwlocality__helper__binding.php#gaf057d7c5e3cb3df897ce527258537619"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__binding.php#ga6d5c88292ad5aa062c1bebc99369c042">hwloc_distribute</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> root, <a class="el" href="group__hwlocality__sets.php#ga4bbf39b68b6f568fb92739e7c0ea7801">hwloc_cpuset_t</a> *cpuset, unsigned n, unsigned until)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__binding.php#ga3e772fbc4de626ed80f13d332b7d4d03">hwloc_alloc_membind_policy_nodeset</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, size_t len, <a class="el" href="group__hwlocality__sets.php#ga2f5276235841ad66a79bedad16a5a10c">hwloc_const_nodeset_t</a> nodeset, <a class="el" href="group__hwlocality__membinding.php#gac9764f79505775d06407b40f5e4661e8">hwloc_membind_policy_t</a> policy, int flags)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate some memory on the given nodeset <code>nodeset</code>.  <a href="group__hwlocality__helper__binding.php#ga3e772fbc4de626ed80f13d332b7d4d03"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline void *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__binding.php#ga6178c6a9ec1dd88ec9f6a9fcdcc7d634">hwloc_alloc_membind_policy</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, size_t len, <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> cpuset, <a class="el" href="group__hwlocality__membinding.php#gac9764f79505775d06407b40f5e4661e8">hwloc_membind_policy_t</a> policy, int flags)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Allocate some memory on the memory nodes near given cpuset <code>cpuset</code>.  <a href="group__hwlocality__helper__binding.php#ga6178c6a9ec1dd88ec9f6a9fcdcc7d634"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__cpuset.php#ga75f0ac3ac41e9915541c3ae3153a6e26">hwloc_topology_get_complete_cpuset</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get complete CPU set.  <a href="group__hwlocality__helper__cpuset.php#ga75f0ac3ac41e9915541c3ae3153a6e26"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__cpuset.php#ga4497338d1cbae6f8a6d68cb14234d5d8">hwloc_topology_get_topology_cpuset</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get topology CPU set.  <a href="group__hwlocality__helper__cpuset.php#ga4497338d1cbae6f8a6d68cb14234d5d8"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__cpuset.php#gad00abc77f1670049a5b2139471d0c8db">hwloc_topology_get_online_cpuset</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get online CPU set.  <a href="group__hwlocality__helper__cpuset.php#gad00abc77f1670049a5b2139471d0c8db"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__cpuset.php#ga95f116c4c0b1ff2c6418c16341fc2e57">hwloc_topology_get_allowed_cpuset</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get allowed CPU set.  <a href="group__hwlocality__helper__cpuset.php#ga95f116c4c0b1ff2c6418c16341fc2e57"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="group__hwlocality__sets.php#ga2f5276235841ad66a79bedad16a5a10c">hwloc_const_nodeset_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__nodeset.php#gaf8331b6d5e60c463f7ebe21a878561d4">hwloc_topology_get_complete_nodeset</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get complete node set.  <a href="group__hwlocality__helper__nodeset.php#gaf8331b6d5e60c463f7ebe21a878561d4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="group__hwlocality__sets.php#ga2f5276235841ad66a79bedad16a5a10c">hwloc_const_nodeset_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__nodeset.php#gae6821ede7676dfac0515a4b7b04b0397">hwloc_topology_get_topology_nodeset</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get topology node set.  <a href="group__hwlocality__helper__nodeset.php#gae6821ede7676dfac0515a4b7b04b0397"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <br class="typebreak"/>
<a class="el" href="group__hwlocality__sets.php#ga2f5276235841ad66a79bedad16a5a10c">hwloc_const_nodeset_t</a> <br class="typebreak"/>
&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__nodeset.php#ga5d829323f8d283687be43ea8c894eb3b">hwloc_topology_get_allowed_nodeset</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get allowed node set.  <a href="group__hwlocality__helper__nodeset.php#ga5d829323f8d283687be43ea8c894eb3b"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__nodeset__convert.php#ga60ecc4ae480c28b5fbd34aca4fc37daa">hwloc_cpuset_to_nodeset</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> cpuset, <a class="el" href="group__hwlocality__sets.php#ga37e35730fa7e775b5bb0afe893d6d508">hwloc_nodeset_t</a> nodeset)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a CPU set into a NUMA node set and handle non-NUMA cases.  <a href="group__hwlocality__helper__nodeset__convert.php#ga60ecc4ae480c28b5fbd34aca4fc37daa"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__nodeset__convert.php#ga9162785e39d7c697f76f99524c4a2fb4">hwloc_cpuset_to_nodeset_strict</a> (struct hwloc_topology *topology, <a class="el" href="group__hwlocality__sets.php#ga1f784433e9b606261f62d1134f6a3b25">hwloc_const_cpuset_t</a> cpuset, <a class="el" href="group__hwlocality__sets.php#ga37e35730fa7e775b5bb0afe893d6d508">hwloc_nodeset_t</a> nodeset)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a CPU set into a NUMA node set without handling non-NUMA cases.  <a href="group__hwlocality__helper__nodeset__convert.php#ga9162785e39d7c697f76f99524c4a2fb4"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__nodeset__convert.php#gaa677fd588304b5615de4ea78104adfb5">hwloc_cpuset_from_nodeset</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__sets.php#ga4bbf39b68b6f568fb92739e7c0ea7801">hwloc_cpuset_t</a> cpuset, <a class="el" href="group__hwlocality__sets.php#ga2f5276235841ad66a79bedad16a5a10c">hwloc_const_nodeset_t</a> nodeset)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a NUMA node set into a CPU set and handle non-NUMA cases.  <a href="group__hwlocality__helper__nodeset__convert.php#gaa677fd588304b5615de4ea78104adfb5"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline void&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__helper__nodeset__convert.php#gaa7c3f39802b00a758c58e024a8119979">hwloc_cpuset_from_nodeset_strict</a> (struct hwloc_topology *topology, <a class="el" href="group__hwlocality__sets.php#ga4bbf39b68b6f568fb92739e7c0ea7801">hwloc_cpuset_t</a> cpuset, <a class="el" href="group__hwlocality__sets.php#ga2f5276235841ad66a79bedad16a5a10c">hwloc_const_nodeset_t</a> nodeset)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Convert a NUMA node set into a CPU set without handling non-NUMA cases.  <a href="group__hwlocality__helper__nodeset__convert.php#gaa7c3f39802b00a758c58e024a8119979"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline struct <br class="typebreak"/>
<a class="el" href="structhwloc__distances__s.php">hwloc_distances_s</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__distances.php#ga48dfec8b8ba1fb8f2073ecd0728f0ca6">hwloc_get_whole_distance_matrix_by_depth</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, unsigned depth)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the distances between all objects at the given depth.  <a href="group__hwlocality__distances.php#ga48dfec8b8ba1fb8f2073ecd0728f0ca6"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline struct <br class="typebreak"/>
<a class="el" href="structhwloc__distances__s.php">hwloc_distances_s</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__distances.php#ga9979237728f7a00a38836e15a8e8cd17">hwloc_get_whole_distance_matrix_by_type</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__types.php#gacd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the distances between all objects of a given type.  <a href="group__hwlocality__distances.php#ga9979237728f7a00a38836e15a8e8cd17"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline struct <br class="typebreak"/>
<a class="el" href="structhwloc__distances__s.php">hwloc_distances_s</a> *&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__distances.php#ga186ac2711b98a12cf46d58cd005fbb51">hwloc_get_distance_matrix_covering_obj_by_depth</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> obj, unsigned depth, unsigned *firstp)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get distances for the given depth and covering some objects.  <a href="group__hwlocality__distances.php#ga186ac2711b98a12cf46d58cd005fbb51"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__distances.php#ga9addde99e34b815df47625f1d6191839">hwloc_get_latency</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> obj1, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> obj2, float *latency, float *reverse_latency)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the latency in both directions between two objects.  <a href="group__hwlocality__distances.php#ga9addde99e34b815df47625f1d6191839"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#gad7ecce015a75d8edafb4669fba702859">hwloc_get_non_io_ancestor_obj</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology , <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> ioobj)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the first non-I/O ancestor object.  <a href="group__hwlocality__advanced__io.php#gad7ecce015a75d8edafb4669fba702859"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#gab17568d759c3a99abe12e3edd4731172">hwloc_get_next_pcidev</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> prev)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the next PCI device in the system.  <a href="group__hwlocality__advanced__io.php#gab17568d759c3a99abe12e3edd4731172"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#ga080ae4c731eb1276e8a7cdaad0b8db16">hwloc_get_pcidev_by_busid</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, unsigned domain, unsigned bus, unsigned dev, unsigned func)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Find the PCI device object matching the PCI bus id given domain, bus device and function PCI bus id.  <a href="group__hwlocality__advanced__io.php#ga080ae4c731eb1276e8a7cdaad0b8db16"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#gaafa3ac0b038c73d533dd5446e71f7d48">hwloc_get_pcidev_by_busidstring</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, const char *busid)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Find the PCI device object matching the PCI bus id given as a string xxxx:yy:zz.t or yy:zz.t.  <a href="group__hwlocality__advanced__io.php#gaafa3ac0b038c73d533dd5446e71f7d48"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#ga04b37de10aacb8a2aa48c8c27d7ba1d9">hwloc_get_next_osdev</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> prev)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the next OS device in the system.  <a href="group__hwlocality__advanced__io.php#ga04b37de10aacb8a2aa48c8c27d7ba1d9"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#gafa52d147ce3062344ca2a3f02670fd4c">hwloc_get_next_bridge</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> prev)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Get the next bridge in the system.  <a href="group__hwlocality__advanced__io.php#gafa52d147ce3062344ca2a3f02670fd4c"></a><br/></td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline int&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#gae83076026dd1a60b1db99fe8c3811697">hwloc_bridge_covers_pcibus</a> (<a class="el" href="structhwloc__obj.php">hwloc_obj_t</a> bridge, unsigned domain, unsigned bus)</td></tr>
<tr><td class="memItemLeft" align="right" valign="top">static inline <a class="el" href="structhwloc__obj.php">hwloc_obj_t</a>&#160;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__advanced__io.php#ga5004b66c2c3a0e390accec96324bd5e9">hwloc_get_hostbridge_by_pcibus</a> (<a class="el" href="group__hwlocality__topology.php#ga9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, unsigned domain, unsigned bus)</td></tr>
<tr><td class="mdescLeft">&#160;</td><td class="mdescRight">Find the hostbridge that covers the given PCI bus.  <a href="group__hwlocality__advanced__io.php#ga5004b66c2c3a0e390accec96324bd5e9"></a><br/></td></tr>
</table>
<hr/><a name="details" id="details"></a><h2>Detailed Description</h2>
<div class="textblock"><p>High-level hwloc traversal helpers. </p>
</div></div>
<?php
include_once("$topdir/includes/footer.inc");
