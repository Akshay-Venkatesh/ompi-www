%!PS-Adobe-2.0
%%Creator: dvips(k) 5.92b Copyright 2002 Radical Eye Software
%%Title: paper.dvi
%%Pages: 19
%%PageOrder: Ascend
%%BoundingBox: 0 0 596 842
%%DocumentFonts: Times-Bold CMBSY7 Times-Roman Times-Italic Helvetica
%%+ CMSY6 CMTT10 CMSY10 CMMI10 CMR10
%%DocumentPaperSizes: a4
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -t a4 -o paper.ps paper
%DVIPSParameters: dpi=600, compressed
%DVIPSSource:  TeX output 2004.09.09:0422
%%BeginProcSet: texc.pro
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
/chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
/cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
{2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
/Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
(LaserWriter 16/600)]{A length product length le{A length product exch 0
exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: texnansi.enc
% @psencodingfile{
%   author = "Y&Y, Inc.",
%   version = "1.1",
%   date = "1 December 1996",
%   filename = "texnansi.enc",
%   email = "help@YandY.com",
%   address = "45 Walden Street // Concord, MA 01742, USA",
%   codetable = "ISO/ASCII",
%   checksum = "xx",
%   docstring = "Encoding for fonts in Adobe Type 1 format for use with TeX."
% }
%
% The idea is to have all 228 characters normally included in Type 1 text
% fonts (plus a few more) available for typesetting.  This is effectively
% the character set in Adobe Standard Encoding, ISO Latin 1, plus a few more.
%
% Character code assignments were made as follows:
%
% (1) The character layout largely matches `ASCII' in the 32 -- 126 range,
% except for `circumflex' in 94 and `tilde' in 126, to match `TeX text'
% (`asciicircumflex' and `asciitilde' appear in 158 and 142 instead).
%
% (2) The character layout matches `Windows ANSI' in almost all places,
% except for `quoteright' in 39 and `quoteleft' in 96 to match ASCII
% (`quotesingle' and `grave' appear in 129 and 18 instead).
%
% (3) The character layout matches `TeX typewriter' used by CM text fonts
% in most places (except for discordant positions such as hungarumlaut
% (instead of braceright), dotaccent (instead of underscore) etc.
%
% (4) Remaining characters are assigned arbitrarily to the `control character'
% range (0 -- 31), avoiding 0, 9, 10 and 13 in case we meet dumb software
% - similarly one should really avoid 127 and 128 if possible.
% In addition, the 8 open slots in Windows ANSI between 128 and 159 are used.
%
% (5) Y&Y Lucida Bright includes some extra ligatures and such; ff, ffi, ffl,
% and `dotlessj,' these are included 11 -- 15, and 17.
%
% (6) Hyphen appears both at 45 and 173 for compatibility with both ASCII
% and Windows ANSI.
%
% (7) It doesn't really matter where ligatures appear (both real, such as ffi,
% and pseudo such as ---) since these should not be accessed directly, only
% via ligature information in the TFM file.
%
% SAMPLE USAGE (in `psfonts.map' file for DVIPS):
% 
% lbr LucidaBright "TeXnANSIEncoding ReEncodeFont" <texnansi.enc <lbr.pfb
%
% This tells DVIPS that the font called `lbr' in TeX has PostScript 
% FontName `LucidaBright.'  It also asks DVIPS to expand the file `lbr.pfb'
% into PFA form, to include the attached `texnansi.enc' encoding vector,
% and to then actually reencode the font based on that encoding vector.
%
% Revised 1996 June 1 by adding second position for `fl' to avoid Acrobat bug.
% Revised 1996 June 1 by adding second position for `fraction' for same reason.
% Revised 1997 Oct 1 by adding cwm  (used in boundary char TFM code)
% Revised 1998 Mar 1 by adding Unicode for Euro character
%
/TeXnANSIEncoding [
/.notdef % 0
/Euro % /Uni20AC 1
/.notdef % 2
/.notdef % 3
/fraction %	4
/dotaccent %	5
/hungarumlaut %	6
/ogonek	%	7
/fl	%	8
/.notdef % /fraction %	9	not used (see 4), backward compatability only
/cwm	%	10	not used, except boundary char internally maybe
/ff    %	11
/fi    %	12
/.notdef % /fl    %	13	not used (see 8), backward compatability only
/ffi   %	14
/ffl   %	15
/dotlessi %	16
/dotlessj %	17
/grave %	18
/acute %	19
/caron %	20
/breve %	21
/macron %	22
/ring  %	23
/cedilla %	24
/germandbls %	25
/ae    %	26
/oe    %	27
/oslash %	28
/AE    %	29
/OE    %	30
/Oslash %	31
/space %	32	% /suppress in TeX text
/exclam %	33
/quotedbl %	34	% /quotedblright in TeX text
/numbersign %	35
/dollar %	36
/percent %	37
/ampersand %	38
/quoteright %	39	% /quotesingle in ANSI
/parenleft %	40
/parenright %	41
/asterisk %	42
/plus  %	43
/comma %	44
/hyphen %	45
/period %	46
/slash %	47
/zero  %	48
/one   %	49
/two   %	50
/three %	51
/four  %	52
/five  %	53
/six   %	54
/seven %	55
/eight %	56
/nine  %	57
/colon %	58
/semicolon %	59
/less  %	60	% /exclamdown in Tex text
/equal %	61
/greater %	62	% /questiondown in TeX text
/question %	63
/at %	64
/A %	65
/B %	66
/C %	67
/D %	68
/E %	69
/F %	70
/G %	71
/H %	72
/I %	73
/J %	74
/K %	75
/L %	76
/M %	77
/N %	78
/O %	79
/P %	80
/Q %	81
/R %	82
/S %	83
/T %	84
/U %	85
/V %	86
/W %	87
/X %	88
/Y %	89
/Z %	90
/bracketleft %	91
/backslash %	92	% /quotedblleft in TeX text
/bracketright %	93
/circumflex %	94	% /asciicircum in ASCII
/underscore %	95	% /dotaccent in TeX text
/quoteleft %	96	% /grave accent in ANSI
/a %	97
/b %	98
/c %	99
/d %	100
/e %	101
/f %	102
/g %	103
/h %	104
/i %	105
/j %	106
/k %	107
/l %	108
/m %	109
/n %	110
/o %	111
/p %	112
/q %	113
/r %	114
/s %	115
/t %	116
/u %	117
/v %	118
/w %	119
/x %	120
/y %	121
/z %	122
/braceleft %	123	% /endash in TeX text
/bar   %	124	% /emdash in TeX test
/braceright %	125	% /hungarumlaut in TeX text
/tilde %	126	% /asciitilde in ASCII
/dieresis %	127	not used (see 168), use higher up instead
/Lslash	%	128	this position is unfortunate, but now too late to fix
/quotesingle %	129
/quotesinglbase %	130
/florin %	131
/quotedblbase %	132
/ellipsis %	133
/dagger %	134
/daggerdbl %	135
/circumflex %	136
/perthousand %	137
/Scaron %	138
/guilsinglleft %	139
/OE    %	140
/Zcaron %	141
/asciicircum %	142
/minus %	143
/lslash %	144
/quoteleft %	145
/quoteright %	146
/quotedblleft %	147
/quotedblright %	148
/bullet %	149
/endash %	150
/emdash %	151
/tilde %	152
/trademark %	153
/scaron %	154
/guilsinglright %	155
/oe    %	156
/zcaron %	157
/asciitilde %	158
/Ydieresis %	159
/nbspace %	160	% /space (no break space)
/exclamdown %	161
/cent  %	162
/sterling %	163
/currency %	164
/yen   %	165
/brokenbar %	166
/section %	167
/dieresis %	168
/copyright %	169
/ordfeminine %	170
/guillemotleft %	171
/logicalnot %	172
/sfthyphen %	173 % /hyphen (hanging hyphen)
/registered %	174
/macron %	175
/degree %	176
/plusminus %	177
/twosuperior %	178
/threesuperior %	179
/acute %	180
/mu    %	181
/paragraph %	182
/periodcentered %	183
/cedilla %	184
/onesuperior %	185
/ordmasculine %	186
/guillemotright %	187
/onequarter %	188
/onehalf %	189
/threequarters %	190
/questiondown %	191
/Agrave %	192
/Aacute %	193
/Acircumflex %	194
/Atilde %	195
/Adieresis %	196
/Aring %	197
/AE    %	198
/Ccedilla %	199
/Egrave %	200
/Eacute %	201
/Ecircumflex %	202
/Edieresis %	203
/Igrave %	204
/Iacute %	205
/Icircumflex %	206
/Idieresis %	207
/Eth   %	208
/Ntilde %	209
/Ograve %	210
/Oacute %	211
/Ocircumflex %	212
/Otilde %	213
/Odieresis %	214
/multiply %	215	% OE in T1
/Oslash %	216
/Ugrave %	217
/Uacute %	218
/Ucircumflex %	219
/Udieresis %	220
/Yacute %	221
/Thorn %	222
/germandbls %	223
/agrave %	224
/aacute %	225
/acircumflex %	226
/atilde %	227
/adieresis %	228
/aring %	229
/ae    %	230
/ccedilla %	231
/egrave %	232
/eacute %	233
/ecircumflex %	234
/edieresis %	235
/igrave %	236
/iacute %	237
/icircumflex %	238
/idieresis %	239
/eth   %	240
/ntilde %	241
/ograve %	242
/oacute %	243
/ocircumflex %	244
/otilde %	245
/odieresis %	246
/divide %	247	% oe in T1
/oslash %	248
/ugrave %	249
/uacute %	250
/ucircumflex %	251
/udieresis %	252
/yacute %	253
/thorn %	254
/ydieresis %	255	% germandbls in T1
] def

%%EndProcSet
%%BeginProcSet: bbad153f.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmsy10 cmsy5 cmsy6 cmsy7 cmsy8 cmsy9
%
/TeXbbad153fEncoding [
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /circlemultiply
/circledivide /circledot /circlecopyrt /openbullet /bullet
/equivasymptotic /equivalence /reflexsubset /reflexsuperset /lessequal
/greaterequal /precedesequal /followsequal /similar /approxequal
/propersubset /propersuperset /lessmuch /greatermuch /precedes /follows
/arrowleft /arrowright /arrowup /arrowdown /arrowboth /arrownortheast
/arrowsoutheast /similarequal /arrowdblleft /arrowdblright /arrowdblup
/arrowdbldown /arrowdblboth /arrownorthwest /arrowsouthwest /proportional
/prime /infinity /element /owner /triangle /triangleinv /negationslash
/mapsto /universal /existential /logicalnot /emptyset /Rfractur /Ifractur
/latticetop /perpendicular /aleph /A /B /C /D /E /F /G /H /I /J /K
/L /M /N /O /P /Q /R /S /T /U /V /W /X /Y /Z /union /intersection
/unionmulti /logicaland /logicalor /turnstileleft /turnstileright
/floorleft /floorright /ceilingleft /ceilingright /braceleft /braceright
/angbracketleft /angbracketright /bar /bardbl /arrowbothv /arrowdblbothv
/backslash /wreathproduct /radical /coproduct /nabla /integral
/unionsq /intersectionsq /subsetsqequal /supersetsqequal /section
/dagger /daggerdbl /paragraph /club /diamond /heart /spade /arrowleft
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/minus /periodcentered /multiply /asteriskmath /divide /diamondmath
/plusminus /minusplus /circleplus /circleminus /.notdef /.notdef
/circlemultiply /circledivide /circledot /circlecopyrt /openbullet
/bullet /equivasymptotic /equivalence /reflexsubset /reflexsuperset
/lessequal /greaterequal /precedesequal /followsequal /similar
/approxequal /propersubset /propersuperset /lessmuch /greatermuch
/precedes /follows /arrowleft /spade /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: 09fbbfac.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmsltt10 cmtt10 cmtt12 cmtt8 cmtt9
/TeX09fbbfacEncoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/Omega /arrowup /arrowdown /quotesingle /exclamdown /questiondown
/dotlessi /dotlessj /grave /acute /caron /breve /macron /ring /cedilla
/germandbls /ae /oe /oslash /AE /OE /Oslash /visiblespace /exclam
/quotedbl /numbersign /dollar /percent /ampersand /quoteright /parenleft
/parenright /asterisk /plus /comma /hyphen /period /slash /zero /one
/two /three /four /five /six /seven /eight /nine /colon /semicolon /less
/equal /greater /question /at /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /bracketleft /backslash /bracketright
/asciicircum /underscore /quoteleft /a /b /c /d /e /f /g /h /i /j /k /l
/m /n /o /p /q /r /s /t /u /v /w /x /y /z /braceleft /bar /braceright
/asciitilde /dieresis /visiblespace /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /space /Gamma /Delta /Theta /Lambda /Xi /Pi
/Sigma /Upsilon /Phi /Psi /.notdef /.notdef /Omega /arrowup /arrowdown
/quotesingle /exclamdown /questiondown /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /visiblespace /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: aae443f0.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmmi10 cmmi12 cmmi5 cmmi6 cmmi7 cmmi8 cmmi9 cmmib10
%
/TeXaae443f0Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/alpha /beta /gamma /delta /epsilon1 /zeta /eta /theta /iota /kappa
/lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon /phi /chi /psi
/omega /epsilon /theta1 /pi1 /rho1 /sigma1 /phi1 /arrowlefttophalf
/arrowleftbothalf /arrowrighttophalf /arrowrightbothalf /arrowhookleft
/arrowhookright /triangleright /triangleleft /zerooldstyle /oneoldstyle
/twooldstyle /threeoldstyle /fouroldstyle /fiveoldstyle /sixoldstyle
/sevenoldstyle /eightoldstyle /nineoldstyle /period /comma /less /slash
/greater /star /partialdiff /A /B /C /D /E /F /G /H /I /J /K /L /M /N
/O /P /Q /R /S /T /U /V /W /X /Y /Z /flat /natural /sharp /slurbelow
/slurabove /lscript /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p
/q /r /s /t /u /v /w /x /y /z /dotlessi /dotlessj /weierstrass /vector
/tie /psi /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/space /Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi
/.notdef /.notdef /Omega /alpha /beta /gamma /delta /epsilon1 /zeta /eta
/theta /iota /kappa /lambda /mu /nu /xi /pi /rho /sigma /tau /upsilon
/phi /chi /psi /tie /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: f7b6d320.enc
% Thomas Esser, Dec 2002. public domain
%
% Encoding for:
%     cmb10 cmbx10 cmbx12 cmbx5 cmbx6 cmbx7 cmbx8 cmbx9 cmbxsl10
%     cmdunh10 cmr10 cmr12 cmr17cmr6 cmr7 cmr8 cmr9 cmsl10 cmsl12 cmsl8
%     cmsl9 cmss10cmss12 cmss17 cmss8 cmss9 cmssbx10 cmssdc10 cmssi10
%     cmssi12 cmssi17 cmssi8cmssi9 cmssq8 cmssqi8 cmvtt10
%
/TeXf7b6d320Encoding [
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /Omega
/ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute /caron /breve
/macron /ring /cedilla /germandbls /ae /oe /oslash /AE /OE /Oslash
/suppress /exclam /quotedblright /numbersign /dollar /percent /ampersand
/quoteright /parenleft /parenright /asterisk /plus /comma /hyphen
/period /slash /zero /one /two /three /four /five /six /seven /eight
/nine /colon /semicolon /exclamdown /equal /questiondown /question /at
/A /B /C /D /E /F /G /H /I /J /K /L /M /N /O /P /Q /R /S /T /U /V /W /X
/Y /Z /bracketleft /quotedblleft /bracketright /circumflex /dotaccent
/quoteleft /a /b /c /d /e /f /g /h /i /j /k /l /m /n /o /p /q /r /s /t /u
/v /w /x /y /z /endash /emdash /hungarumlaut /tilde /dieresis /suppress
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /space
/Gamma /Delta /Theta /Lambda /Xi /Pi /Sigma /Upsilon /Phi /Psi /.notdef
/.notdef /Omega /ff /fi /fl /ffi /ffl /dotlessi /dotlessj /grave /acute
/caron /breve /macron /ring /cedilla /germandbls /ae /oe /oslash /AE
/OE /Oslash /suppress /dieresis /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
/.notdef /.notdef /.notdef /.notdef /.notdef /.notdef /.notdef
] def

%%EndProcSet
%%BeginProcSet: texps.pro
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/psfts{S 65781.76 div N}N/startTexFig{/psf$SavedState
save N userdict maxlength dict begin/magscale true def normalscale
currentpoint TR/psf$ury psfts/psf$urx psfts/psf$lly psfts/psf$llx psfts
/psf$y psfts/psf$x psfts currentpoint/psf$cy X/psf$cx X/psf$sx psf$x
psf$urx psf$llx sub div N/psf$sy psf$y psf$ury psf$lly sub div N psf$sx
psf$sy scale psf$cx psf$sx div psf$llx sub psf$cy psf$sy div psf$ury sub
TR/showpage{}N/erasepage{}N/setpagedevice{pop}N/copypage{}N/p 3 def
@MacSetUp}N/doclip{psf$llx psf$lly psf$urx psf$ury currentpoint 6 2 roll
newpath 4 copy 4 2 roll moveto 6 -1 roll S lineto S lineto S lineto
closepath clip newpath moveto}N/endTexFig{end psf$SavedState restore}N
/@beginspecial{SDict begin/SpecialSave save N gsave normalscale
currentpoint TR @SpecialDefaults count/ocount X/dcount countdictstack N}
N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto 0 vs rlineto hs
neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale ang rotate
rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}ifelse
scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale llx neg
lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly lineto urx
ury lineto llx ury lineto closepath clip}if/showpage{}N/erasepage{}N
/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{count ocount sub{
pop}repeat countdictstack dcount sub{end}repeat grestore SpecialSave
restore end}N/@defspecial{SDict begin}N/@fedspecial{end}B/li{lineto}B
/rl{rlineto}B/rc{rcurveto}B/np{/SaveX currentpoint/SaveY X N 1
setlinecap newpath}N/st{stroke SaveX SaveY moveto}N/fil{fill SaveX SaveY
moveto}N/ellipse{/endangle X/startangle X/yrad X/xrad X/savematrix
matrix currentmatrix N TR xrad yrad scale 0 0 1 startangle endangle arc
savematrix setmatrix}N end

%%EndProcSet
%%BeginFont: CMTT10
%!PS-AdobeFont-1.1: CMTT10 1.00B
%%CreationDate: 1992 Apr 26 10:42:42
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMTT10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch true def
end readonly def
/FontName /CMTT10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-4 -235 731 800}readonly def
/UniqueID 5000832 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F00F963068B8232429ED8B7CF6A3D879A2D19
38DD5C4467F9DD8C5D1A2000B3A6BF2F25629BAEC199AE8BD4BA6ED9BBF7DABF
D0E153BAB1C17900D4FCE209622ACD19E7C74C2807D0397357ED07AB460D5204
EB3A45B7AC4D106B7303AD8348853032A745F417943F9B4FED652B835AA49727
A8B4117AFF1D4BCE831EB510B6851796D0BE6982B76620CB3CE0C22CACDD4593
F244C14EEC0E5A7C4AC42392F81C01BC4257FE12AF33F4BFEA9108FF11CF9714
4DD6EC70A2C4C1E4F328A1EB25E43525FB1E16C07E28CC359DF61F426B7D41EA
6A0C84DD63275395A503AAE908E1C82D389FD12A21E86999799E7F24A994472E
A10EAE77096709BE0D11AAD24A30D96E15A51D720AFB3B10D2E0AC8DC1A1204B
E8725E00D7E3A96F9978BC19377034D93D080C4391E579C34FF9FC2379CB119F
1E5BBEA91AE20F343C6420BE1E2BD0636B04FCCC0BEE0DC2D56D66F06DB22438
452822CBEAF03EE9EAA8398F276EC0D92A7FB978C17805DB2F4A7DFBA56FD6AF
8670EB364F01DE8FCAFBAF657D68C3A03112915736CEABAA8BA5C0AC25288369
5D49BD891FABEFE8699A0AE3ED85B48ACB22229E15623399C93DE7D935734ADA
DA7A1462C111D44AD53EA35B57E5D0B5FC0B481820E43222DB8EFCD5D30E15F9
BA304FA879392EE0BCC0E1A61E74B3A1FC3A3D170218D7244580C7AA0DC65D19
741FA5FE6F8CBF60250ACC27454BBF0897CA4B909C83A56672958752ED4B5E79
E18660764F155E86F09EFA9F7685F2F5027EC85A775287B30E2069DE4E4D5712
E7D033481A53A2702BA7542C71062173039030CF28D8B9C63B5596A9B42B33E7
D922944A38713383D3648A4AF160A3B0C8F3379BA4372BE2E7EA49AABA75AEEE
C5DDE1D8BF68483C3D21271280ABB91D54CC819680322EAB72E1250A760BC8DC
FF798F2ABFC4F3539392985C4CB324B0007229586D1E0321559F67C057FD7902
194490A4C133DA790FF3BF23A13C2B1B69EEB75950F9106F2BA1E3CA65C90FF5
931DADF03DA48AFB8561FC2E710087251BFC42B80B297A3DB0DA138A7622A931
DA293B0C740987ACE9F2A8EC2DB98F85783C01623FD3612C7E4A84FD93446770
C3DD7431F955A5F3734F6931BD790F0A421EA6A0E8B93E9307C4C7A32D695BB6
998BD57594BF56A63F90872DBD3A4385EBFE7949B8472B63BD025D257624B3EE
5A864F6E65094FD7C70134824A3CE35E93E591AA34784E8F4E42C4900F9BB004
7EE01325199C2F208A02EE453F545DC69D66B1ED90800F42EF122482F858F1C0
66D485B31F35DF08131B99866DFB8FB772FF58B0962FA171248D2CF5C8544ADD
92775B2DF1BC96B1358B2CEECCA93338FDBE0B47A1E48DB711064DECACC7B6E8
B260A180B32ABE802679EF21F756263F3723C86BB8FAF18B8518AE3ACCD6CB61
069CFCD7095821D9B1E85677D2CD28BB24868D9032ED24B74041DE0E2A008AB0
C94A2939028BD25434BFBC86F3E9A97EFF6DE9D676D8FF902DFA75BC429B56A3
BCCCE8FA93D267AAD18E5B4BC0AAF8D486BB4451FB1F8AFD22E62C7EEA9759D3
37ABD316D717AE899B9AF5487B7FEADFE2B7D651B09FAE89B0103420EFB4D2A9
C66407A5F185554815DB850335C23371C57DAFEF88E5A1E3405215F6A4D06F17
447AF60BD85C58BEAD9B2574C5F8D10007A4FC5BD0964D5BB7E5F13AC40D3351
9DB5EF267DCF512D50FAAC60476E64B4BF14BFE5E58FACA9B49DBA8B53439C12
2600ACD04765BC79375ED1822093306F2B408786864D4754642961C3DF678FF0
72E7F8F63251495D697C3F3FF5050DEBB4F43D495966E2B64073B50449A1EC0A
66709FD56578D30F9F772DFF813066D5CF4C6A780E5053DD7BAFAAB27EEAA366
F144654682A594813DD8C6A2007C8F72A2F039EE2DA8EC510C6241670F1E5D94
9699FF5490657CA9BCC50AC8888436F7574C68EC83B30ABD7913B07653279FE2
734E93ACB7DFAEFD6598E2C750D3E52529416E39476730024105488BEC538FDC
792BFFC4B20D68F9395D99A2FDF06B446ADF863BD9501D58624E1D5F546D77A0
DEC6567EE1B04FF5C634EF8B85C2F7744980F85298D865944FBC89421A7B2BF4
BF38F6B688E45D997E412B6D53868E0BD6FDA7E3FAF86275C8897364C339D80A
8DFC315123A27D156328B803A56185B1825AEC71D636FB36950052F0A83B9EC6
B15D978E695383FDE7B76BC7707A590759B273E35265698F2EE07B7D1CDD9C53
DC1573CEB1ED92358205D5CBE4A9DFD72B93ED447E42435D0DA5D08FC9EDEB74
D27E6E6DAE9FD398DD3C3B6FF01EE0F7DD155EED348A05A769A7583BB088E6D6
7DD48714005AA6D610C7DBF5CEEBAB4F7E0321B66EBE30E9EA545B4C45C356F7
B508E8ADC620B801609B86ED841F9DE1C5725245639015EC7CDD572A5DD96D45
0190A881EAE8CF765D2E778D517B47724FCD7F59634D09A68FC42AAE6933011F
A61515747BD1E28019B27967E06A369A9E2A6CEEA8E32B6701166E94FDC0D73D
2E9FA26F507B0641B629D35A6882AE1EDC2F29ED60E7B9D0A3DED9ECCDF9670C
66B1CB5E0DA0EEB7F187B0E128E0AB7964EC10DE6BD15531A70837135B65E218
C6430073735B6AEB2B05354E47D994C4CA15511D29443280DFB9CB0C44F8C1ED
B1B53C4527BD5C98826F307017DD490B584FC94E0602808AB714B44CA3011552
7F8A4C18DE4BEEED3B77355AB944F6E77D58ECB34EBD641A2DC2947F4EA21211
CDB4A6513B3DA9F0B0D516D05679878E52D727E8CEB20992B351E5E3EB0F2575
FE4856FDDEB9EC18145AE91A37DF9826B0A446C40EB26809397E8093E3164D8E
DD1F48220F7F1CD62E7B9613823210B154EEAE32C06111FD8A5100973E3754A9
955952B766EF2509FD955031166912EA13C0EE210564877DB5CAD4504E768C89
726D13016040D1DB2F1478474751527BE6B561B7123064E1D2FDED6FDC3FC797
81E78F1B254F7245ADDAC11E33E5D3602185AF2DA03BF95C4A48270291401C46
B9600EF82185318B6BA9A63A9B1B05D3995870D4A2244D0F1C860103493AC2AA
6CB5DC560ED9346EE7EB1C96DD74D3539A6828FE88487718A3C80A1A1FA13627
EBCA2006401E514E75BEFE09F839246964E95670F580E4889B46E62E36C1AB65
7218F922239237789A04AF0B7ED08324A79DE1F605DDF1305B0BB57643059BF6
19644AF5DC368FEA9200CF35374507216B1FFAED743057A90E84F70592A1FFD1
10505D7824567B2A8BC394A1F0AD7212B4296CE72BF6C148AE10F74962873B78
FF0F4D102B7055CCB6E49A5D5EB55576A8D37FDEF4F7AF8F2282293107475A7D
9C6C0807D2727408E41E62320D3347612A4F2577744099568D32FBCF4E31AB5E
7186251E95B8FC8E90EB4F4C6DADD97A081D1EC3138B0329226C95B58A377E16
6CBC678C36D4712B2BD3B5474A7EEA4C53DB07914DEE78655337BEDE33656AAC
C1B1451EA718988591EF0D4C87D798E3CAF13C87688D9FF491EC0E4DDFF0920F
3F45412FF8AB566C4A2F51E85B5AC13647400F95AB21EED925B4642F24FCA80D
9AA15D49D350DFC4205012C9424392CF860A43ADD92660E0AB90E5C419B51191
00080ABBFEDE58C459E3D68D65AA748577AD211DAF706157123F83C68FBD0675
D984C79909866F3A8365479C1A48BBA6D2AAD1E40EB7BAAEA1C0395599B4F16F
91C55FB956304624733478647E8A379255026AA9ADCA26FA727F344873C4E093
14D886125E3DC01B3ADD8D7746EAA1E6FE674F4A6BD4692DE65AB5F120CAAF66
F56183A1ADBCA47259F81668D166909C6B7FB6C2EE9435576D0628383C327153
3CAD621B94F13C452A476A28E4A9E70FE57BFA85AB8EEEF53FA3B11196C6DE90
3FB70F40ECF9AD36B55888A87DEE9D90A89AFD00EFFE9BC9366D31147DFBF17E
43D965F177037FEC3BA771EC7D7F85F5636C7743AD7D596FC9CFBFD3D7A4167B
2960D4FB9A2B3A9929623E7B68AC48D72B8FCE71107CB6F7CCFD3A0671EA69B4
4218951562C41CBC13FCFE532E30970108888DD95840CB3EC2A9817202A72FD1
AC986594D08E02ED5E904273DFF7164C347843A1C2F1144F4814C6E09390E091
462435D82B60BF39F89A03D83CC3F61CDBEAFA01294EA6424BBA2E19D35E908F
67A6A59307B55A1CF1D1346E73CD091306F259F8821E46E896B4DE79E28D169C
79850DD0168896594A8122B3D1A4DF7484FB2CAF894EA2EE41EAAA296D114A5A
B9BDF126E7A9B23555D3E123EE908EB8D4AA9871AFE22C4C4BB9D6B950633465
6BC94F858F63206A6CD4CE2D4A9769AD0249D776E47103E49AF1D6BBE527C529
B1DBA5E674C2568580CC96535769557B8F805C361D6A793E58A9C63CB1BA5BEA
734B3DC3CBFEFC08669CC645877B5A8096676D959F65B1DC63DA46CB6AD89D28
43FCEDDAEB3FE051175DAA6C307EBCE560EC3DE44280A4EF3CD769DB784D36B3
9668F2D01FD29FEAC17EBB44ABD1E4D3DB0387D429DF3337C87FF5AE295621C8
FEF6084FD8D294E7C6070F765C6693FD5CBCC0BDE8D5B3DF9037669627619301
7EC635FE51E446722F9BBBDB5E0A65EC14A80237C0416BD7AD2C45F00D19D21F
8C019E18E78BD4F773C28F881DD9DB93596279154C25A79A041C7B72784F97A3
CCB2519106BEF1DCDE9BF1B71ABC31A3011F878374A960CA49AC7820A8104FDD
78F17DDE058F5E19DAEB83BD057A9401D8AB8B4845DFF1A4EA59E26FBB4C0656
31C9137DC2EFAD11C6EC0358C2FC7071E3F267E3BB569E6A5AD2B9132A881E91
D4AB2E629D25FEF6E08017DB3D81E02FDFF1A60B79E2351C5A79D14435D031F4
F09AF7313573AC24B65B52D94C45FCD347D95E7C1EF9D61F1B2E1E38F40564F9
7A986F0D8BDFA72DF4F6F1723BC596378B9C9040A0D86558E150E45BD7939EDC
91490E243BA20241B751EAD7541D34F6CE1CBD5BC69B44BB2760FFBE48D929E1
8AF4ECB383122407B45468543482DFF752FE74BE7CDAC928C25ADF4C47938149
F922382C03B0944022BCFE7934155F9F89F72B26C8A89F611E5F39BE8A311278
A76940D1464BF9B5D3B94182C08DDF3B5FE903471EF852F215FC81FBCE4EF480
73AA1A9AADF4770C2F0115B0B7C32A7AF1B2BCD89F45EFEE590183652C60C5F1
6F54D75680EA2240EE2FF9CC9E7EB67715BD016D416C4D94D596847545938787
41C9307FDE2CEDD98C6B5F6FD2DF9F42FEF076B654F691FD480AF7AE7361AD98
A6AE5C82D1C5E3A097F786452F1BD926DD22DFBFCB979EA30DE7210E1066727A
5D052BE8EB02076F47AED4B5DB83EDDEE8387CC1C3745DB070FE6E448FEEBFE8
29C66FE0FAA22EAAE887C8C7B9127E5405A7BD480EA1AD87BF898BFDF68C52EF
E324A981FE726DD63904626778AD0841C88B9A3E2869254C5DFDCB1F207FA993
50CCE535C5855040F3DBD3A5692665896D0D1CD95DF4B261D44715C34C56DD02
2E62C0325D336DBE575BE666A38F0EFBE21ABEB55CF7C69A2BA54AE07FC29EC5
69A1B65C8B55C3C84AA2E21B597A24B205F82CAC0143331FCA7B4370BC58A9BD
B5B326E3EEB420357E3105ADB5DDAB0BEB0407D12C7F71F1EA9BE18BDAA2FF68
09D7F6A1F7BA9D6E40B0B5C83A4BA1B7408261CA526BAE49E308F6CC21722596
74BC421E1A558A64C8DC90EC0F47431FD23833CB923D7159A54BAFD6DBB63D90
18D0732623D92C27DAC0EC3D5B2D2E098B625993C0F1D23B15BCFE88960079F1
5B5CD7D2837FD9171D62E6BD26AA51F3EF8071B995931F04B4D27A7A26E870FA
C742D584377E5790ED56AEA1F3C997DA39F904AEF781F94B491ADCC1C16BA824
FCE2A3A08FC6B41B26E248CA81439F12FB888AF440CACABED2BE5786F7EF92DE
E11BB72C25B3C2C9CC4FB6AAEDE880C30EC6D938EE43D074115B9F952DE28074
33DFF0BC28B23945145211219D1550F34C7CB5DE21A6B2D19533996A43A18022
C43F0483B06CD43E702B917A53F3B6B5D5D4DE3F9DFC74D2D862449528C2BA5A
0292D4B0F1078EA041F9820D8B8F4C07A706C0E173D00A2DF7293DDA52F51A44
0B66EB3DAF9DAF5412C182885EDF1389F3F635CCFA62FE97CACB532D95777D02
B741149A1EA6397D58C40257CC2956D52797E2ED7CC73CBD5AC64A4EBEABF260
FE79581F7117770889AA8935805A8B670D8330FF0706C80B239F064F7278DC84
3CC3A9AD23D23F83C250B37FD1DEB1257BC0CA3113044A73488426F6A21C3307
8F9A34E13098D7CABE066167865726D8C37178161F123B02763172C44AB31EEB
C958A313906BDFD64B04169EF4F0F2EAB96300123D5A25B0C2A1A5080B959169
78EB526C4ACAA33697E1252981818E55BC287F435F1AED2FB84DF27E121819AE
AADAF6A7526CDD58B4926C6348E39FA152EEE87E8987F016B4CBF087F8BE2A11
D4B59EEB3EB442D0F7BC12D62A61D8A093D86C5A5148F2FA0184BD3021782B3D
AB1082F96A474DD12ADD24EC4EFA13E177ADC34DFC3EC6837D33802A06155296
307C842EB14DA3E41F165410C4B3D1CCD44DAB8DA4E7200552904A501B17E3A7
F4A992CF888432C62036903EFFDF3CBDF57DE6B437BFAA6E691B6BFFC061AFAF
46231037BDA6DAFF1043133B1F8DD8B1CADCB625A20B7FD600CF383BC0EBE78C
BD1A9BDCCC730B978DBEC2DB469FBE3B5F1A28ADDDBE8DD1EDA47F2C2E912CB8
7D6D319087E5638A402C680F0D2C213BD7DD7EEE2089F0688872A25AA9A09562
6E6A93085AAA33B50B4E84D78DC3DF6DB527F2FC5032158D7B42F98ED8A565F9
9BDAE2A0B330DA47E60319C664A8CD8AB93F4C51558E3FF4B90343B6A8FA0CEB
CCA8233FBFE268B6686568673D91791B5C952CD0715852C2A340C877F89D6976
7D67AFE6FEBDD0F909F280E3FEF88EBB3728B64279BCBBB316B0B1B3A924839E
D399945E035C052E243A9EFF014747FD92F3FCB4B2509C958011A54B2E31C6ED
4BD3225A708B3CD7AE41ED9764F45E9021E8440764455EAB60C11E2ED7998922
03CF39238466C9F270E8C3D9E07F1B854E404AD537AD70565B0C93CB9BF6DB8C
1649A876C9A3B12AF8E3F2BD03E85E6660BC01A40F9548D3CC5638F2D6C7C1D4
EA4E42E0D0388BB54FBB1406E38058980457FB21485EC999C7D9D75CCAB25685
80A0B46388AD838DF5FEF09B3BE76F5C5D895809F9BEF832B7CA732309667C78
4865518DCE2160904282292235E15622C0B1A034A8EB50777262F53404C19556
6E76AC75779444ABCE9BEBD7F9C8C93AC6539ED9A5DF29F0869D5869AA692E29
6C513F9165E1714277FE853D62A2383EDAA26B907F94718E65A627E600FFF852
AB2722823B24C5CA6AE4EBB0AF6BBDFEF23C19871D7FA3C822EAF01CC0346FB0
C1D0D7EC6BEF3FFDFAC29E9A05913AC25A76F245640BE1ACB03BF3ADA083C211
FE20AB8ACF4406B576091FD76EEF8EFDF00330A362604DCF3BC0AB19D9177CEA
8010FAAB178FBBF4044A0B929A63A2D2EF0E33EA0B8A74F9D4D4316450C8FF7D
C13AA9CFAC56FE1B91EEAF4B5AB946F157A28C311B71FA6D8C9B09A69EE9CDC9
13AD71B6EA721A3FAC936350CA96E276939F11EE34108C2ECB9DAD926F3F946E
E294FF906595DB79F4480D9F1A8BDFEBC06180BDFFA2E01C264833F26851A694
ADE739CEB44BA32CD826ADC8E2F7771F7164D501F44C528660E1C8CA8D8839DF
B13816A9CDF20EE2874E10117BB5A044CB7D12C6991E4198EDD77FD367793CAA
D70438400E6F7A258511D897F6B17EA45090810401000998D7482D993EAD096B
BEA88405A3D99A634179F95223FA98C9DF410EAA529691A3969693582714FF2D
051DBA028E848B0E11A424CED330A56D7EA68055EEDD62A2EB8A4A5FDA62A725
84EF4AF18438D579F0F02564A5B789A0467F99132EDB3CDDE9ADE762923A3C22
75CC1A1328A68AD845C83A25474542EDF9DE9BF1AB98681E7F090846EF56A13F
ABDFA993724AA72B43CDA6529D2BFFF3606873D0F9C9AB648656F30535C91205
A9E19915F1ABC837444AA4232930494B05996939BEB513D8E6386B5EE4F0D89F
53C77C8F28DB67794CD66C2CDCD2D029EC27C0D18D63E3A22759C9D7CA8F4965
3B479D2D41F5528091EEE08417DB92153587BAE3386C06659E59985BFA3A7355
F8EC60ECF62D21C4B734DF5BBEEFB3CA
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMR10
%!PS-AdobeFont-1.1: CMR10 1.00B
%%CreationDate: 1992 Feb 19 19:54:52
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.00B) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMR10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle 0 def
/isFixedPitch false def
end readonly def
/FontName /CMR10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-251 -250 1009 969}readonly def
/UniqueID 5000793 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5CF7158F1163BC1F3352E22A1452E73FECA8A4
87100FB1FFC4C8AF409B2067537220E605DA0852CA49839E1386AF9D7A1A455F
D1F017CE45884D76EF2CB9BC5821FD25365DDEA6E45F332B5F68A44AD8A530F0
92A36FAC8D27F9087AFEEA2096F839A2BC4B937F24E080EF7C0F9374A18D565C
295A05210DB96A23175AC59A9BD0147A310EF49C551A417E0A22703F94FF7B75
409A5D417DA6730A69E310FA6A4229FC7E4F620B0FC4C63C50E99E179EB51E4C
4BC45217722F1E8E40F1E1428E792EAFE05C5A50D38C52114DFCD24D54027CBF
2512DD116F0463DE4052A7AD53B641A27E81E481947884CE35661B49153FA19E
0A2A860C7B61558671303DE6AE06A80E4E450E17067676E6BBB42A9A24ACBC3E
B0CA7B7A3BFEA84FED39CCFB6D545BB2BCC49E5E16976407AB9D94556CD4F008
24EF579B6800B6DC3AAF840B3FC6822872368E3B4274DD06CA36AF8F6346C11B
43C772CC242F3B212C4BD7018D71A1A74C9A94ED0093A5FB6557F4E0751047AF
D72098ECA301B8AE68110F983796E581F106144951DF5B750432A230FDA3B575
5A38B5E7972AABC12306A01A99FCF8189D71B8DBF49550BAEA9CF1B97CBFC7CC
96498ECC938B1A1710B670657DE923A659DB8757147B140A48067328E7E3F9C3
7D1888B284904301450CE0BC15EEEA00E48CCD6388F3FC3C8578EF9A20A0E06E
4F7ADDAF0E7D1E182D115BF1AD931977325AD391E72E2B13CC108E3726C11099
E2000623188AAAC9F3E233EB253BDD8B0A4759A66A113E066238B0086AC1B634
5ABFF90E4B5ED3FA69C22541981B2BFC9710AEF6B50A8BB53431C7B4D380D721
639E005D6B4688EE16BFF48443E7C9E5FB5BC5883E271CB034289232A0694CCE
12A5A2637485FB47BC281A2129EDC23D8091FB4F93A6B82E666703E6A2816BBA
EA4D74E605325F713552A653349310EA0929FA02D1F9ED57DE58E1928E0CA31D
070A4C7036ED071AC3F6429C76912FCB605A98A3307024A00AFE54D463628836
E6098757CD50E1D40FA54D41BC2FDC30F5CC9042E5D704D1712FC0A4B907A61A
3FBC6271BEA1021043E2C35E830D2C44E1A54ABA687535A0E1CB727BB7C902D2
5DF97D44FB85C8397F1C1E14C11DBFD563A205F1E248F250549CD4689F361C71
948EBFD988B5B8B8FB1D7051F234E4EA5C9CB798D99C17715D0799F60FEAC8A8
8589452E8932A9E7844E816B3D0F18F1D542D05600CAD430E88F8298961D8FDA
A630894C90D2505F9AD25F555F8C56518921AD52B39BEB69F9AD1ED552B3CF16
13CCADBC2933A59AF6CF80F892EFDB0D4E5CD766094AEF332323CCFFAFA32FA0
07BFEB8985C120D623C4E2323F6E4A3FE0086795C3043B988701ADD821404586
0CD3E21E107A25D661BCB329DB6A7083217B438F19710CA275E336AD37E90D10
4CF8E8410E0311297D1E1DCEB8C8A662C6735DA66E9CD443
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.1: CMMI10 1.100
%%CreationDate: 1996 Jul 23 07:53:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.100) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
end readonly def
/FontName /CMMI10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-32 -250 1048 750}readonly def
/UniqueID 5087385 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA0529731C99A784CCBE85B4993B2EEBDE
3B12D472B7CF54651EF21185116A69AB1096ED4BAD2F646635E019B6417CC77B
532F85D811C70D1429A19A5307EF63EB5C5E02C89FC6C20F6D9D89E7D91FE470
B72BEFDA23F5DF76BE05AF4CE93137A219ED8A04A9D7D6FDF37E6B7FCDE0D90B
986423E5960A5D9FBB4C956556E8DF90CBFAEC476FA36FD9A5C8175C9AF513FE
D919C2DDD26BDC0D99398B9F4D03D5993DFC0930297866E1CD0A319B6B1FD958
9E394A533A081C36D456A09920001A3D2199583EB9B84B4DEE08E3D12939E321
990CD249827D9648574955F61BAAA11263A91B6C3D47A5190165B0C25ABF6D3E
6EC187E4B05182126BB0D0323D943170B795255260F9FD25F2248D04F45DFBFB
DEF7FF8B19BFEF637B210018AE02572B389B3F76282BEB29CC301905D388C721
59616893E774413F48DE0B408BC66DCE3FE17CB9F84D205839D58014D6A88823
D9320AE93AF96D97A02C4D5A2BB2B8C7925C4578003959C46E3CE1A2F0EAC4BF
8B9B325E46435BDE60BC54D72BC8ACB5C0A34413AC87045DC7B84646A324B808
6FD8E34217213E131C3B1510415CE45420688ED9C1D27890EC68BD7C1235FAF9
1DAB3A369DD2FC3BE5CF9655C7B7EDA7361D7E05E5831B6B8E2EEC542A7B38EE
03BE4BAC6079D038ACB3C7C916279764547C2D51976BABA94BA9866D79F13909
95AA39B0F03103A07CBDF441B8C5669F729020AF284B7FF52A29C6255FCAACF1
74109050FBA2602E72593FBCBFC26E726EE4AEF97B7632BC4F5F353B5C67FED2
3EA752A4A57B8F7FEFF1D7341D895F0A3A0BE1D8E3391970457A967EFF84F6D8
47750B1145B8CC5BD96EE7AA99DDC9E06939E383BDA41175233D58AD263EBF19
AFC0E2F840512D321166547B306C592B8A01E1FA2564B9A26DAC14256414E4C8
42616728D918C74D13C349F4186EC7B9708B86467425A6FDB3A396562F7EE4D8
40B43621744CF8A23A6E532649B66C2A0002DD04F8F39618E4F572819DD34837
B5A08E643FDCA1505AF6A1FA3DDFD1FA758013CAED8ACDDBBB334D664DFF5B53
95601766730045C2D9F29DC2BFEBDE5E7720CC7D825235CD0CFD0F06A5D7D9D8
39942A20D4BCF1F4D2DCFD7EABA13D3AB49456C45718A70C3FE8D336B1B199D9
B5E3702EA9A19F01AEC17122D9F65261F8F20D9E79C0B2C6422F1C4CF87D64A2
3FE1D2E97927F55F3FAFC8C0F312FBF912CAD9AFAA69ED40E80A59C2B2192088
3F7DF7A19AEFC1D2A7D29100ADB3A34964DF7BE4AAD3040F267269BDA4774156
8500A36B9B8942F468CB45B8ACA8CB4EB6874D7645D3C83D2F17A1DDD15340B8
2043CF4F53ABB708289FC2BA3D6A354B346F8CCCF3A4D8FA5671ADB53A27AD82
B9E1F79AB9144C47DCC77147D11204A4648C08164FDE44A5DB9BC99CE62DABB0
8A9A48C9A8E6D64F3336A51EC3C110C0E07ECAF7F67C936DA7BFEBEB8D330E55
4679DA5B103DDCC988D047972EF2D9F88EE824B95428E96D7134675EA8A2F6B9
7B410136969583A97464D9064DF1A4A2D1A16760249C153187B8E2BD3BE88250
E1FB1A0A720A7317220DDD5DB3746BA789E5346D632ED2C86F7E6CE1CAF7CE33
2D84A7C4A2B2178AC4610ECD991F21FBD8504674E0864E552027B3F018EB8E70
6CDCD8FE27060753B35113FFE29B5D678EA4C46FCF470669C3F239A9BA532A51
8B423EC23654AEDE8A46F94DBC4C7773B230D4E2056A88AE1045B0E5C61B62E5
9D6D548DEE9178647DF6CE8C48752F43D6837DE499128966C5772175E0950FF6
9F77549712675E9452FA6A0CF8A9BAFB12ED1E9DF0007B9B06BB1A903383404C
5447CA312DAF3EDF9CEA9A3337416350E49788EFE58E3269A8641C1283FBE095
D0D9190E668CBD39F3B5F2B74CE0FA642DDA82B95552C55588F75A4259352E1C
566E0BE7DB9910F7E4E41AB38166307A2916777A3E6F94F9B7677A4E97B4BD12
372B5FB0C73F7DB75565A456552211629F4FDA85B5493CF32FBF40E7622392C1
B4FB4E0F13247AC72FA5146B5812D1D39CB9ADADDFA682D26328604197C55282
315C058DC3B1005C80A4B26ED42CDC97D50483079DAC1A24B27E5419A62674B4
73092BF4D24464DBFEA7CE5166FD35E7807C8917D7FCB24F2C3F7EC5819C1DE0
584B19913E92014D637F6E6ED7605CC32A89D46B0B5E8045260D084FAE8A0C20
8275BCA4804906B21E8EEC620D07DCB3551139AD60317F6A436A53107EF6869B
63121522D0A57DC5793CA60E0DB1CAF9206AA53D37D3BA67F2530FEF653B0F80
2C110AEA92AAF70E2701DBC88A3BEFD5E43F4436E7F8F9A023BE0D167A4DC353
110A36A2D09BF1EB1B54379209FACABCEE958A88D37A88CC6BD77D622C1ADE5E
01C85A1EFC8CC124C3F2B8896767925D8195B551CA13B1EDD8183BCED3975424
5A2619966D4ACA55BCB38ED1067C8D85B41BD6546A4E6F8586686F00C9AEAAD1
660C62294888F0330EC4AE53355CC238A868758F0A59C1BAB9867FE5D4ADA673
44D234A3ACD75A49DADD30234D2BA48C379B45749B9BE8E04CFC755AB2FF2A1C
D0CD4B8B5663A4432DEAE953B2ABB68B7C2FA5BA542183F73595A0BBEFA8D884
D0A715304DF1E5F645C02E3D1C24A32E3604BCFA47CBC4DF4A6E260D6E432996
258F13C967D73D23396B41B5065203DA29E08EC8347BC64E12CE5775E13614CC
90D745E2847743CADF4062E33CC89D74B427FE01F5C7C3F7CF8AE0643BFBE83F
652F74B3D0E8E1A0AF00345187FDC1EE05CE3DB20E68705F2C7322D4F9ABAB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY10
%!PS-AdobeFont-1.1: CMSY10 1.0
%%CreationDate: 1991 Aug 15 07:20:57
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY10 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-29 -960 1116 775}readonly def
/UniqueID 5000820 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D31FF2B87F97C73D63EECDDA4C49501773468A
27D1663E0B62F461F6E40A5D6676D1D12B51E641C1D4E8E2771864FC104F8CBF
5B78EC1D88228725F1C453A678F58A7E1B7BD7CA700717D288EB8DA1F57C4F09
0ABF1D42C5DDD0C384C7E22F8F8047BE1D4C1CC8E33368FB1AC82B4E96146730
DE3302B2E6B819CB6AE455B1AF3187FFE8071AA57EF8A6616B9CB7941D44EC7A
71A7BB3DF755178D7D2E4BB69859EFA4BBC30BD6BB1531133FD4D9438FF99F09
4ECC068A324D75B5F696B8688EEB2F17E5ED34CCD6D047A4E3806D000C199D7C
515DB70A8D4F6146FE068DC1E5DE8BC570317AAEA74A842CFD26F9591866F5A0
9B4EAD7C4C4D6CBC02869406866027BB86F9AE78254830409624210C2FCAD587
24CA21C681EB9BE7166A0EC7A56165148885525114AAAF78C7A340D62D6391D1
2C4AF69F8200B980E962A7BC77741F074808250C53692972139820504E857223
071084B049097C0708DDE1C7EB218F7DE11C3E0D87BF43DFBFB36B0C0DB084DF
9BA115782EA4B30B3F7C25CA34AEBDE66545E4AF59724CFA6D793806316811BA
95B344EA88B288825AA8BF80DD77255C8ADE620281725E0D82A39DB94B8EF94C
217BAA289670CE7888CAB8C0C2EE801BF0CC8B50C334B64EE52F26813BD1ABA6
7D9D59C873666169A35E5581C8025DC68CF3022DFC21A6B5D4D00F2518841263
B4832257C4B83B8316D461B3CD3D92FDFDDC83966670DABD422D28B99C286E50
749107436ECEB6430323DE3A79C2DC6AB5BFAE4C46C40DFC8D89596E574CA56B
AF10DC4D6C0F9FA0A230F37D8B49759FD3EC69B4802AB69723A106322E2FC640
F577EA4F1D5F7AF70A24CEF293158ED076AE97F65613A2743A73015ACFB8FCA4
64BF42A2803A371EE3B0450507B2814ACC8B79D13B1E6525E2F277FC921C83A0
791B7BA3DC3E6B94A2B570C5F06F35FE4BF4B8FDE9DE9A5EF549E70CEEB8D85F
4B44D88F6835523652E14F3B7B0DAEC042CEEA8EE45EAAABDDED08BBFD4C71A8
3554F8BD321F2BE2EA4BE16084824AF653569E3A5B4F97287AF0C1E7A62C14BE
78C2C42D3AFDF93D72C2FFEAE034DE2933E5DA9E94497E5093FCB900916C7D72
827FEB7910DBC8EFBCB44DD2D8EAA3B1ED47D53B4B0ED3A332CAC44B1F68B461
C86D8F9BAD2B077FDCAE12C4CCF38046AA086E7B5FD906D86D7310F817E7C7FA
AB2B5B26AD4A13C69C6059721930B4CBAEECBC64B4F318B1529AF9E69B0B8B58
4CC8E546707CE0447C8FBB1E2152208E71B51B34B7738EC31B2BBB10C5328DDF
7EA19E265A824CBBA2E72D1F8EB0AB1DED5C33F92D51293B782D0AE3E8459FA3
C0CFA71FD30241D11A9E8384E89925FB
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMSY6
%!PS-AdobeFont-1.1: CMSY6 1.0
%%CreationDate: 1991 Aug 15 07:21:34
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (1.0) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMSY6) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMSY6 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 0 /.notdef put
readonly def
/FontBBox{-4 -948 1329 786}readonly def
/UniqueID 5000816 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052F09F9C8ADE9D907C058B87E9B6964
7D53359E51216774A4EAA1E2B58EC3176BD1184A633B951372B4198D4E8C5EF4
A213ACB58AA0A658908035BF2ED8531779838A960DFE2B27EA49C37156989C85
E21B3ABF72E39A89232CD9F4237FC80C9E64E8425AA3BEF7DED60B122A52922A
221A37D9A807DD01161779DDE7D5FC1B2109839E5B52DFB7605D7BA557CC35D6
49F6EB651B83771034BA0C39DB8D426A24543EF4529E2D939125B5157482688E
9045C2242F4AFA4C489D975C029177CD6497EACD181FF151A45F521A4C4043C2
1F3E76EF5B3291A941583E27DFC68B9211105827590393ABFB8AA4D1623D1761
6AC0DF1D3154B0277BE821712BE7B33385E7A4105E8F3370F981B8FE9E3CF3E0
007B8C9F2D934F24D591C330487DDF179CECEC5258C47E4B32538F948AB00673
F9D549C971B0822056B339600FC1E3A5E51844CC8A75B857F15E7276260ED115
C5FD550F53CE5583743B50B0F9B7C4F836DEF7499F439A6EBE9BF559D2EE0571
CE54AEC463244B0F8EAB9E96CB18BD39259CC1FEC10F47FB56A38588CE634209
8F77258607212EE1DCA4F0667B152875B2CF5AC44B930B888ACD9D4B55662542
71239286D82E14CAABE7276AB199E2429C4C3BC32713106A10F5F16C8045A580
86EE21E7783B70FAE03D8D47B5AA13A881D478232DD65DBCD1EB9811C440E362
527EF73FC86FE664ACED80DCD6806CFD932BDEE102B89C22F423992249FC2273
F39C59AEF75B2088527AA973C71A6B134D26EF1ABAB75721971A0E4E52639DA9
2E1C3B2A6FB552CA834F6443E0628DD9CE69E92DA0B9B8ACAF3641FA0A7F1126
8DF8803E683ACCCCDE88C9F6C1838BCE7E8B56A0BC8C5F0300D81479A5087FFD
B8B66527B87F7977C31A54E0506C6D33EBC902841AB7B8D75BC8ADE5397905EF
BCB96AE4B57D308DCF0F74A93177F2DDF3486642A43834DB5B123CFA402E4BA1
6EB4C27AF21C96932E05B79CF951354FF66668C6503CA6FD2089A91A8D
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMBSY7
%!PS-AdobeFont-1.1: CMBSY7 001.000
%%CreationDate: 1992 Oct 22 12:18:11
% Computer Modern fonts were designed by Donald E. Knuth.
% Copyright (C) 1997 American Mathematical Society. All Rights Reserved.
11 dict begin
/FontInfo 7 dict dup begin
/version (001.000) readonly def
/Notice (Copyright (C) 1997 American Mathematical Society. All Rights Reserved) readonly def
/FullName (CMBSY7) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Bold) readonly def
/ItalicAngle -14.035 def
/isFixedPitch false def
end readonly def
/FontName /CMBSY7 def
/PaintType 0 def
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0] readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 3 /asteriskmath put
readonly def
/FontBBox{0 -927 1542 750}readonly def
/UniqueID 5032008 def
currentdict end
currentfile eexec
D9D66F633B846A97B686A97E45A3D0AA052A014267B7904EB3C0D3BD0B83D891
016CA6CA4B712ADEB258FAAB9A130EE605E61F77FC1B738ABC7C51CD46EF8171
9098D5FEE67660E69A7AB91B58F29A4D79E57022F783EB0FBBB6D4F4EC35014F
D2DECBA99459A4C59DF0C6EBA150284454E707DC2100C15B76B4C19B84363758
469A6C558785B226332152109871A9883487DD7710949204DDCF837E6A8708B8
2BDBF16FBC7512FAA308A093FE5F086C44216EBE57F4BA37B479BF1E5A5139D8
91F3E6DDA157B25D359C5E7FE4CFB264DF1707BB6497D3E074CFF95D9FD269B5
0B1566D1161680C46D1548BBF384EF8653AF29FD474EA2336C876979AC00AE18
DC87DC0DDD3164B96FC6C3ED826EBAAED383BB3EC5044BA84A0426B87ED04C9F
4B3EDFC734C241D9B3D2321619F870FE68BB4BA7C060DBE8FBD12F641E7709F2
C430491944B78B1E59580798F1B40CAC4D59DE95941217EF1A861DDB0156D5C3
349AAB13FEFF6C646F6401550F5853BC09B267A6C63639228DF55BE60A99E4A5
308C616892AA0DC96ADB7CD7AB8AEFA859F69B587B61930596A46A905661E4BA
DAB5E1CF15C94CF060B7FA600B17162AEC2DEE64A156B3F87248E7A7F88C9154
8C494273B33483BEDF0BEA4DF6A19941F52AA04717623ACBDE926B4851ED05A0
28698A1C5AE63A46EF473A4F3DCAF3E73C4FAF0C1077EE7A6504074C0D77947F
940B16425B3F5834763732F26D3385774A1CACA70C07F58887A0301D1BE530A7
D7AC00A0664617A0CBA9F6281FA4B9168DBA3C1EDCF915778351E6BD8A9CE7E5
3E56F2FFE0969E1CFFC83F07C01A3873EE1CE4E124565E8F493BE4FAA0A5D099
A116CEE4EC6C8CB2E93B42771FFF67680A56501A201E12AFDA8448ABE80BEB9B
80428F48753C4EFB174B693C69DB81CEF0A0B75C53A9D5B4C5F26FA58059A324
8D4E9D4E9C54AB8F9C21CD66B9B259F9C797559384A653DD43ED4B9C2110BB5B
C3A6370921186AEE29EB4E62793ECD96935C3D9D89DC6AAECFB745BABDB570FD
E7E6248B6ED9C09EDA896ECFCAEECE8C1E8BE20BDE6F3558EF5A32ED390ABF86
3A585DF34F2B8B9567778BF51A1BF9C1018AEEF42FF1F9AAB1F9F73627F6C7CF
2C858DF92CE5E8A8EAB1126424BA0777BB85D0498436ECB7D565A500AD4BA9FA
1BBEFB1A7B6DC9C4699E61FBFBC58C2CA12A4D9DCD8D7C6B2407CD0D2CCE800F
74C394AB27F5CDECE7237F63F0F95AFA06009AD8B44AC7BB29BB8246D684141D
7A7951CF6A1675741AF829C5139834404C5DE913CF4F572997D509030422A3AC
9F6C171106714E0DC7740989520047DA5CC6682F1FB72DFB76A070B4811A195F
10E56613B7AA14A31DB0600E4E8B48991A5B7CEB4834588811C7024C27C46E4F
375018C3689277A1F563379177AF3B2DCD5213115F40A5F023DC72D9E56D8B91
41DD44A4E9CCB7DF441B014E76D394A5251B25CB71BA29655E9C822BF66CB142
BC585892B308C800851F7802341E2957CA01F5CE297094346365B267C3548CC6
18D7F48904B32AD8394044E4216916DD8E0E03279F062F734F9572FFCF3D297D
A02F2801E5A7522AE16A7F5FC52AA4D290759C0EFFD77D63E353B8307383D35F
EEB5AC87972A12C4D4
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 39158280 55380996 1000 600 600 (paper.dvi)
@start /Fa 137[39 39 39 39 39 1[39 39 39 39 39 2[39 39
39 39 39 39 39 39 39 16[39 21[39 2[39 5[39 39 39 39 46[{
 TeX09fbbfacEncoding ReEncodeFont }26 74.7198 /CMTT10
rf /Fb 214[35 35 40[{ TeXf7b6d320Encoding ReEncodeFont }2
90.9091 /CMR10 rf /Fc 144[44 55 1[27 4[43 23[69 56[55
22[{ TeXaae443f0Encoding ReEncodeFont }6 90.9091 /CMMI10
rf /Fd 140[50 2[55 2[83 3[22 5[50 55 55 97[{
 TeXnANSIEncoding ReEncodeFont }7 99.6264 /Helvetica
rf /Fe 137[45 51 30 1[40 2[45 51 4[25 2[30 40 51 100[{
 TeXnANSIEncoding ReEncodeFont }10 90.9091 /Times-Bold
rf /Ff 133[35 40 1[61 40 45 25 35 35 1[45 45 45 66 25
40 1[25 45 45 25 40 45 40 45 45 16[56 2[76 3[30 5[61
1[56 17[25 23 30 23 4[30 26[45 12[{ TeXnANSIEncoding ReEncodeFont }34
90.9091 /Times-Italic rf /Fg 133[41 46 46 66 46 51 30
36 41 1[51 46 51 76 25 51 1[25 51 46 1[41 51 41 1[46
11[66 1[51 66 1[56 1[66 86 61 2[36 71 1[56 61 1[66 1[66
17[25 23 30 32[51 12[{ TeXnANSIEncoding ReEncodeFont }39
91.3242 /Times-Bold rf /Fh 135[40 16[45 45 102[{
 TeXbbad153fEncoding ReEncodeFont }3 90.9091 /CMSY10
rf /Fi 140[45 2[51 51 1[76 20 2[20 5[45 51 51 6[56 2[86
61 66 56 61 66 1[61 71 66 76 51 61 1[25 66 71 56 61 66
66 61 61 19[30 45[{ TeXnANSIEncoding ReEncodeFont }32
90.9091 /Helvetica rf /Fj 136[48 2[48 48 48 8[48 3[48
1[48 1[48 16[48 1[48 48 3[48 6[48 66[{
 TeX09fbbfacEncoding ReEncodeFont }13 90.9091 /CMTT10
rf /Fk 138[42 23 1[32 1[42 42 42 60 3[23 42 1[23 37 1[37
14[46 3[51 60 1[69 3[28 5[55 1[51 65[{ TeXnANSIEncoding ReEncodeFont }
19 83.022 /Times-Italic rf /Fl 134[33 1[48 1[33 18 26
22 1[33 33 33 52 18 33 1[18 33 33 22 29 33 29 33 29 12[41
37 4[48 1[41 5[37 41 14[33 33 3[33 33 1[17 46[{
 TeXnANSIEncoding ReEncodeFont }32 66.4176 /Times-Roman
rf /Fm 252[32 3[{ TeXbbad153fEncoding ReEncodeFont }1
49.8132 /CMSY6 rf /Fn 104[91 45 1[40 40 24[40 45 45 66
45 45 25 35 30 45 45 45 45 71 25 45 25 25 45 45 30 40
45 40 45 40 3[30 1[30 2[66 86 1[66 56 51 61 1[51 66 66
81 56 2[30 66 66 51 56 66 61 61 66 5[25 25 45 45 45 45
45 45 45 45 45 45 25 23 30 23 2[30 30 30 71 25[51 3[51
8[{ TeXnANSIEncoding ReEncodeFont }74 90.9091 /Times-Roman
rf /Fo 134[54 54 78 54 60 36 42 48 1[60 54 60 90 30 2[30
60 54 36 48 60 48 1[54 12[72 60 78 1[66 84 78 102 72
2[42 3[72 78 78 72 78 10[54 54 54 54 54 54 1[30 27 36
32[60 12[{ TeXnANSIEncoding ReEncodeFont }45 107.929
/Times-Bold rf /Fp 144[42 2[17 8[37 11[71 2[46 50 54
1[50 58 1[62 42 2[21 4[54 54 50 50 65[{ TeXnANSIEncoding ReEncodeFont }
16 74.7198 /Helvetica rf /Fq 105[37 1[33 33 24[33 37
37 54 37 37 21 29 25 37 37 37 37 58 21 37 21 21 37 37
25 33 37 33 37 33 3[25 1[25 46 54 54 71 54 54 46 42 50
54 42 54 54 66 46 54 29 25 54 54 42 46 54 50 50 54 6[21
37 37 37 37 37 37 37 37 37 37 21 19 25 19 2[25 25 25
26[42 12[{ TeXnANSIEncoding ReEncodeFont }76 74.7198
/Times-Roman rf /Fr 134[37 1[54 2[25 29 33 2[37 9[33
42 33 42 37 21[58 9[54 6[25 58[{ TeXnANSIEncoding ReEncodeFont }14
74.7198 /Times-Bold rf /Fs 134[33 3[37 1[33 22 37 37
37 37 55 15 1[15 15 1[37 1[37 36[67 17[18 22 45[{
 TeXnANSIEncoding ReEncodeFont }17 66.4176 /Helvetica
rf /Ft 134[33 1[50 33 37 21 29 29 1[37 37 37 54 21 1[21
21 37 37 21 33 37 33 37 37 10[46 54 42 37 46 1[46 54
50 62 42 1[33 25 1[54 46 46 54 50 46 46 6[25 37 37 37
37 37 37 37 37 37 37 21 19 25 19 2[25 25 25 39[{
 TeXnANSIEncoding ReEncodeFont }59 74.7198 /Times-Italic
rf /Fu 134[46 1[66 1[46 1[36 30 46 2[46 71 3[25 2[30
41 46 2[41 13[51 5[81 56 1[36 8[66 7[46 46 46 46 46 46
46 46 46 46 1[23 46[{ TeXnANSIEncoding ReEncodeFont }29
91.3242 /Times-Roman rf /Fv 252[41 3[{}1 66.4176 /CMBSY7
rf /Fw 166[90 2[90 90 83 69 90 1[76 97 90 118 83 2[48
97 97 76 83 90 90 83 90 6[41 12[41 45[{ TeXnANSIEncoding ReEncodeFont }
22 124.533 /Times-Bold rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
%%BeginPaperSize: a4
a4
%%EndPaperSize
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop 598 1240 a Fw(THE)31 b(COMPONENT)f(ARCHITECTURE)
598 1389 y(OF)h(OPEN)g(MPI:)598 1539 y(EN)n(ABLING)g(THIRD-P)-9
b(AR)k(TY)598 1680 y(COLLECTIVE)31 b(ALGORITHMS)2331
1628 y Fv(\003)598 1987 y Fu(Jef)n(fre)o(y)21 b(M.)i(Squyres)e(and)h
(Andre)n(w)g(Lumsdaine)598 2078 y Ft(Open)d(Systems)h(Labor)o(atory)l
(,)f(Indiana)h(Univer)o(sity)598 2170 y(Bloomington,)f(Indiana,)h(USA)
598 2278 y Fs(jsquyres@open-mpi.org)598 2386 y(lums@open-mpi.org)598
2676 y Fr(Abstract)178 b Fq(As)22 b(lar)o(ge-scale)g(clusters)g(become)
i(more)e(distrib)o(uted)g(and)h(heterogeneous,)i(signi\014cant)1054
2767 y(research)f(interest)g(has)f(emer)o(ged)h(in)g(optimizing)g(MPI)f
(collecti)n(v)o(e)g(operations)i(because)1054 2859 y(of)c(the)g
(performance)h(gains)f(that)f(can)h(be)g(realized.)33
b(Ho)n(we)n(v)o(er)m(,)21 b(researchers)h(wishing)f(to)1054
2950 y(de)n(v)o(elop)12 b(ne)n(w)g(algorithms)g(for)g(MPI)g(collecti)n
(v)o(e)g(operations)g(are)g(typically)g(f)o(aced)g(with)g(sig-)1054
3041 y(ni\014cant)19 b(design,)h(implementation,)g(and)g(logistical)e
(challenges.)29 b(T)-6 b(o)19 b(address)h(a)f(number)1054
3133 y(of)h(needs)g(in)g(the)f(MPI)g(research)i(community)-5
b(,)20 b(Open)g(MPI)g(has)f(been)i(de)n(v)o(eloped,)g(a)e(ne)n(w)1054
3224 y(MPI-2)29 b(implementation)h(centered)f(around)h(a)f(lightweight)
g(component)h(architecture)1054 3315 y(that)18 b(pro)o(vides)h(a)e(set)
h(of)g(component)h(frame)n(w)o(orks)g(for)f(realizing)g(collecti)n(v)o
(e)g(algorithms,)1054 3407 y(point-to-point)12 b(communication,)17
b(and)12 b(other)g(aspects)g(of)g(MPI)g(implementations.)30
b(In)12 b(this)1054 3498 y(paper)m(,)24 b(we)e(focus)h(on)g(the)g
(collecti)n(v)o(e)f(algorithm)h(component)h(frame)n(w)o(ork.)38
b(The)23 b(\223)p Fp(coll)p Fq(\224)1054 3589 y(frame)n(w)o(ork)17
b(pro)o(vides)f(tools)f(for)h(researchers)g(to)f(easily)g(design,)i
(implement,)f(and)g(e)o(xper)o(-)1054 3681 y(iment)h(with)f(ne)n(w)h
(collecti)n(v)o(e)f(algorithms)h(in)g(the)f(conte)o(xt)h(of)g(a)f
(production-quality)j(MPI.)1054 3772 y(Performance)k(results)f(with)g
(basic)h(collecti)n(v)o(e)f(operations)i(demonstrate)f(that)f(the)h
(com-)1054 3863 y(ponent)i(architecture)g(of)f(Open)g(MPI)g(does)g(not)
h(introduce)g(an)o(y)f(performance)h(penalty)-5 b(.)598
4155 y Fr(K)n(eyw)o(ords:)111 b Fq(MPI)28 b(implementation,)i(P)o
(arallel)d(computing,)k(Component)f(architecture,)g(Collecti)n(v)o(e)
1054 4246 y(algorithms,)19 b(High)h(performance)598 4462
y Fo(1.)180 b(Intr)n(oduction)697 4620 y Fn(Although)32
b(the)d(performance)j(of)e(the)g(MPI)e(collecti)n(v)o(e)j(operations)i
([6,)e(17])e(can)h(be)598 4727 y(a)e(lar)n(ge)h(f)o(actor)h(in)e(the)h
(o)o(v)o(erall)h(run-time)f(of)g(a)f(parallel)i(application,)i(their)e
(optimiza-)598 4835 y(tion)g(has)h(not)f(necessarily)j(been)e(a)e
(focus)i(in)f(some)g(MPI)f(implementations)k(until)e(re-)598
5113 y Fm(\003)634 5137 y Fl(This)16 b(w)o(ork)h(w)o(as)g(supported)h
(by)e(a)h(grant)g(from)g(the)g(Lilly)g(Endo)n(wment)h(and)f(by)f
(National)j(Science)g(F)o(oundation)g(grant)598 5215
y(0116050.)p eop end
%%Page: 2 2
TeXDict begin 2 1 bop 548 550 a Fu(2)548 743 y Fn(cently)29
b([22].)46 b(MPI)27 b(collecti)n(v)o(es)j(are)e(only)g(a)g(small)f
(portion)j(of)e(a)f(production-quality)-5 b(,)548 851
y(compliant)24 b(implementation)i(of)c(MPI;)g(implementors)i(tend)g(to)
e(gi)n(v)o(e)h(a)f(higher)i(priority)548 959 y(to)i(reliable)j(basic)e
(functionality)k(of)26 b(all)h(parts)h(of)e(MPI)g(before)h(spending)j
(time)c(tuning)548 1066 y(and)e(optimizing)i(the)d(performance)k(of)c
(smaller)h(sub-systems.)648 1174 y(As)j(a)i(direct)h(result,)g(the)f
(MPI)f(community)i(has)f(undertak)o(en)j(acti)n(v)o(e)d(research)i(and)
548 1282 y(de)n(v)o(elopment)24 b(of)d(optimized)j(collecti)n(v)o(e)f
(algorithms.)35 b(Although)23 b(design)g(and)g(theoret-)548
1390 y(ical)h(v)o(eri\014cation)h(is)e(the)g(fundamental)j(basis)e(of)f
(a)g(ne)n(w)g(collecti)n(v)o(e)i(algorithm,)g(it)d(must)548
1498 y(also)k(be)g(implemented)i(and)e(used)h(in)e(both)i(benchmark)h
(and)e(real-w)o(orld)i(applications)548 1606 y(\(potentially)21
b(in)c(a)g(v)n(ariety)i(of)f(dif)n(ferent)h(run-time)g(/)e(netw)o
(orking)j(en)l(vironments\))h(before)548 1714 y(its)d(performance)i
(can)e(be)g(fully)g(understood.)35 b(The)17 b(full)h(c)o(ycle)h(of)e
(design,)k(de)n(v)o(elopment,)548 1822 y(and)d(e)o(xperimental)h
(testing)g(allo)n(ws)f(the)g(re\014nement)g(of)f(algorithms)j(that)d
(is)h(not)f(possible)548 1930 y(when)24 b(an)o(y)f(of)h(the)f(indi)n
(vidual)k(steps)d(are)g(skipped.)548 2146 y Fo(1.1)180
b(Solution)27 b(Space)648 2303 y Fn(Much)i(research)j(has)e(been)g
(conducted)i(in)d(the)h(area)g(of)f(optimized)j(collecti)n(v)o(e)f(op-)
548 2411 y(erations)i(resulting)h(in)e(a)f(wide)g(v)n(ariety)i(of)e
(dif)n(ferent)j(algorithms)f(and)f(technologies.)548
2519 y(The)23 b(solution)i(space)g(is)e(v)n(ast;)h(determining)i(which)
d(collecti)n(v)o(e)j(algorithms)f(to)e(use)h(in)f(a)548
2627 y(gi)n(v)o(en)15 b(application)g(may)g(depe)q(nd)h(on)f(mul)q(tip)
q(le)g(f)o(a)q(cto)q(rs,)23 b(including)15 b(the)g(communicatio)q(n)548
2735 y(patterns)31 b(of)d(the)h(application,)k(the)c(underlying)j(netw)
o(ork)d(topology)-6 b(,)33 b(and)c(the)g(amount)548 2843
y(of)e(data)i(being)f(transferred.)49 b(Hence,)28 b(one)g(set)g(of)g
(collecti)n(v)o(e)h(algorithms)h(is)d(typically)548 2951
y(not)21 b(suf)n(\014cient)h(for)g(all)f(possible)i(application)h(/)c
(run-time)j(en)l(vironment)h(combinations.)548 3059 y(This)29
b(is)g(e)n(vident)i(in)f(the)g(range)g(of)f(literature)j(a)n(v)n
(ailable)g(on)d(dif)n(ferent)j(algorithms)f(for)548 3167
y(implementing)26 b(the)e(MPI)e(collecti)n(v)o(e)j(function)h
(semantics.)648 3275 y(It)f(is)g(therefore)j(useful)f(to)f(allo)n(w)f
(applications)30 b(to)25 b(select)i(at)f(run-time)g(which)g(algo-)548
3383 y(rithms)e(are)g(used)g(from)g(a)f(pool)h(of)g(a)n(v)n(ailable)i
(choices.)35 b(Because)25 b(each)f(communicator)548 3491
y(may)36 b(represent)k(a)c(dif)n(ferent)j(underlying)g(netw)o(ork)f
(topology)-6 b(,)43 b(algorithm)38 b(selection)548 3599
y(should)27 b(be)f(performed)i(on)d(a)h(per)n(-communicator)j(basis.)41
b(This)26 b(implies)g(that)h(the)f(MPI)548 3707 y(implementation)i
(both)d(includes)j(multiple)e(algorithms)h(for)e(the)g(MPI)f(collecti)n
(v)o(es)j(and)548 3814 y(pro)o(vides)22 b(a)d(selection)j(mechanism)f
(for)f(choosing)i(which)e(routines)h(to)f(use)g(at)f(run-time.)548
4030 y Fo(1.2)180 b(Implementation)26 b(Dif\014culties)648
4188 y Fn(There)17 b(are)h(signi\014cant)h(barriers)g(to)e(entry)h(for)
g(third-party)i(researchers)h(when)c(imple-)548 4296
y(menting)30 b(ne)n(w)e(collecti)n(v)o(e)j(algorithms.)51
b(F)o(or)28 b(e)o(xample,)j(man)o(y)d(practical)j(issues)g(arise)548
4404 y(when)21 b(testing)i(ne)n(w)e(algorithms)i(with)e(a)g(wide)g(v)n
(ariety)h(of)g(MPI)e(applications)k(in)d(a)g(lar)n(ge)548
4512 y(number)h(of)g(run-time)h(en)l(vironments.)36 b(T)-7
b(o)20 b(both)j(ease)f(testing)h(ef)n(forts)g(and)f(to)f(mak)o(e)h(the)
548 4620 y(testing)c(en)l(vironment)h(as)d(uniform)h(as)f(possible,)j
(MPI)c(test)i(applications)i(should)f(be)e(able)548 4728
y(to)i(utilize)i(the)f(ne)n(w)f(algorithms)j(with)d(no)h(source)h(code)
g(changes.)33 b(This)19 b(will)f(e)n(v)o(en)h(allo)n(w)548
4836 y(real)34 b(w)o(orld)g(MPI)e(applications)37 b(to)c(be)h(used)g
(for)f(testing)i(purposes;)41 b(the)34 b(output)h(and)548
4944 y(performance)f(from)d(pre)n(vious)i(runs)e(\(using)i(kno)n(wn)e
(correct)i(collecti)n(v)o(e)g(algorithms\))548 5051 y(can)21
b(be)g(compared)h(against)g(the)f(output)h(when)e(using)i(the)f
(collecti)n(v)o(e)i(algorithms)f(under)548 5159 y(test.)p
eop end
%%Page: 3 3
TeXDict begin 3 2 bop 598 550 a Fk(The)20 b(Component)f(Ar)m(c)o
(hitectur)m(e)g(of)h(Open)g(MPI)1382 b Fu(3)697 743 y
Fn(This)25 b(means)h(that)f(functions)j(implementing)f(ne)n(w)e
(algorithms)i(must)e(use)g(the)g(stan-)598 851 y(dard)h(MPI)f(API)f
(function)k(names)f(\(e.g.,)e Fj(MPI)p 2087 851 29 4
v 34 w(Barrier)p Fn(\).)38 b(T)-6 b(echniques)27 b(e)o(xist)g(for)f
(this)598 959 y(kind)18 b(of)g(implementation,)j(b)n(ut)e(the)o(y)f
(may)f(in)l(v)n(olv)o(e)j(signi\014cant)g(learning)f(curv)o(es)g(for)f
(the)598 1066 y(researcher)29 b(with)c(respect)j(to)e(the)h(underlying)
i(MPI)c(implementation:)42 b(ho)n(w)25 b(it)h(b)n(uilds,)598
1174 y(where)g(the)h(collecti)n(v)o(e)h(algorithms)g(are)f(located)h
(in)e(the)h(source)g(tree,)g(internal)i(restric-)598
1282 y(tions)24 b(and)g(implementation)j(models)d(for)g(the)g(collecti)
n(v)o(e)h(functions,)h(etc.)598 1498 y Fo(1.3)180 b(A)26
b(New)h(A)m(ppr)n(oach)697 1656 y Fn(T)-7 b(o)13 b(address)g(a)g
(number)g(of)g(needs)g(in)h(the)f(MPI)g(res)q(ear)q(ch)g(co)q(mmuni)q
(ty)-6 b(,)15 b(Open)f(MPI)f([5]ha)q(s)598 1764 y(been)h(de)n(v)o
(eloped;)22 b(a)14 b(ne)n(w)g(MPI-2)g(implementation)g(based)h(up)q(on)
g(th)q(e)f(co)q(lle)q(cte)q(d)g(r)q(ese)q(arc)q(h)598
1872 y(and)23 b(prior)i(implementations)h(of)d(FT)-8
b(-MPI)21 b([3\2264])k(from)e(the)g(Uni)n(v)o(ersity)i(of)e(T)-6
b(ennessee,)598 1980 y(LA-MPI)24 b([1,)j(7])f(from)g(Los)g(Alamos)h
(National)g(Laboratory)-6 b(,)29 b(and)e(LAM/MPI)d([2,)j(19])598
2088 y(from)g(Indiana)i(Uni)n(v)o(ersity)-6 b(.)46 b(Open)27
b(MPI)f(is)h(centered)i(around)g(a)e(lightweight)i(compo-)598
2196 y(nent)34 b(architecture)j(that)e(pro)o(vides)g(a)f(set)g(of)f
(component)j(frame)n(w)o(orks)f(for)f(realizing)598 2303
y(collecti)n(v)o(e)23 b(algorithms,)h(point-to-point)i(communication,)e
(and)e(other)h(aspects)g(of)e(MPI)598 2411 y(implementations.)697
2519 y(In)29 b(this)g(paper)l(,)j(we)c(focus)i(on)e(the)h(collecti)n(v)
o(e)i(algorithm)g(component)g(frame)n(w)o(ork.)598 2627
y(The)41 b(\223)p Fi(coll)p Fn(\224)h(frame)n(w)o(ork)g(pro)o(vides)i
(tools)e(for)g(researchers)j(to)c(easily)i(design,)48
b(im-)598 2735 y(plement,)38 b(and)c(e)o(xperiment)i(with)f(ne)n(w)e
(collecti)n(v)o(e)k(algorithms)f(in)e(the)h(conte)o(xt)h(of)e(a)598
2843 y(production-quality)45 b(MPI.)38 b(Collecti)n(v)o(e)j(routines)g
(are)f(implemented)h(in)e(standalone)598 2951 y(components)29
b(that)e(are)h(recognized)h(by)e(the)g(MPI)f(implementation)k(at)c
(run-time.)45 b(The)598 3059 y(learning)21 b(curv)o(e)f(required)i(to)d
(create)i(ne)n(w)e(components)i(is)f(deliberately)i(small)e(to)f(allo)n
(w)598 3167 y(researchers)j(to)d(focus)h(on)g(their)g(algorithms,)h
(not)f(the)f(details)i(of)e(the)h(MPI)e(implementa-)598
3275 y(tion.)31 b(The)15 b(frame)n(w)o(ork)g(also)g(of)n(fers)g(other)h
(ben)q(e\014ts:)35 b(source)15 b(and)g(binary)g(di)q(str)q(ib)o(uti)q
(on)g(o)q(f)598 3383 y(components,)23 b(seamless)f(inte)o(gration)i(of)
c(all)h(algorithms)i(at)d(compile)i(and/or)g(run-time,)598
3491 y(and)i(\014ne-grained)i(run-time)f(selection)g(\(on)f(a)f(per)n
(-communicator)28 b(basis\).)697 3599 y(This)j(paper)h(is)f(therefore)i
(not)f(about)g(speci\014c)g(collecti)n(v)o(e)h(algorithms,)i(b)n(ut)c
(rather)598 3707 y(about)e(pro)o(viding)h(a)e(comprehensi)n(v)o(e)j
(frame)n(w)o(ork)e(for)f(researchers)j(to)d(easily)h(design,)598
3814 y(implement,)c(and)f(e)o(xperiment)i(with)d(ne)n(w)h(collecti)n(v)
o(e)h(algorithms.)37 b(Components)26 b(con-)598 3922
y(taining)e(ne)n(w)d(algorithms)k(can)d(be)h(distrib)n(uted)i(to)e
(users)g(for)f(additional)j(testing,)f(v)o(eri\014-)598
4030 y(cation,)g(and)g(\014nally)-6 b(,)24 b(production)j(usage.)697
4138 y(Both)i(MPICH)e(and)i(MPICH2)f([8\2269])i(use)f(sets)g(of)g
(function)i(pointers)g(\(to)e(v)n(arying)598 4246 y(de)o(grees\))h(on)f
(communicators)i(to)e(ef)n(fect)g(some)g(de)o(gree)h(of)f(modularity)-6
b(,)32 b(b)n(ut)d(ha)n(v)o(e)g(no)598 4354 y(automatic)22
b(selection)h(or)e(assignment)i(mechanisms,)g(therefore)g(requiring)g
(abstraction)598 4462 y(violations)f(\(the)e(user)g(application)i(has)e
(to)f(assign)i(function)g(pointers)h(inside)e(an)g(opaque)598
4570 y(MPI)i(communicator\))k(or)e(manual)g(modi\014cation)h(of)f
(MPICH)e(itself.)697 4678 y(LAM/MPI)16 b(v7)j(deb)n(uted)h(the)e
(\014rst)g(fully-inte)o(grated)k(component-based)g(frame)n(w)o(ork)598
4786 y(that)37 b(allo)n(wed)h(source)h(and)e(binary)i(distrib)n(ution)i
(of)c(se)n(v)o(eral)h(types)g(of)f(components)598 4894
y(\(including)c(collecti)n(v)o(e)g(algorithms\))f(while)f(requiring)i
(no)e(abstraction)i(violations)g(or)598 5002 y(source)23
b(code)g(changes)h(to)e(the)g(MPI)f(implementation)k(in)d(a)f
(production-quality)-5 b(,)27 b(open-)598 5110 y(source)e(MPI)e
(implementation.)38 b(Open)25 b(MPI)e(e)n(v)n(olv)o(es)i(these)g
(abstractions)j(by)c(re\014ning)p eop end
%%Page: 4 4
TeXDict begin 4 3 bop 548 550 a Fu(4)548 743 y Fn(the)26
b(concepts)i(introduced)g(in)e(LAM/MPI)d(v7,)j(essentially)j(creating)f
(a)d(second)i(gener)n(-)548 851 y(ation)j(set)f(of)g(component)i(frame)
n(w)o(orks)g(for)e(MPI)f(implementations)k(called)e(the)g(MPI)548
959 y(Component)15 b(Architecture)g(\(MCA\))g([5,)21
b(23].)31 b(This)15 b(paper)g(presents)g(Open)g(MPI')-5
b(s)15 b(MCA)548 1066 y(collecti)n(v)o(e)25 b(component)h(frame)n(w)o
(ork)f(design.)648 1174 y(The)18 b(rest)h(of)f(this)h(paper)h(is)f(or)n
(ganized)i(as)d(follo)n(ws.)33 b Fh(x)p Fn(1.2)18 b(discusses)k(the)c
(current)j(state)548 1282 y(of)f(the)g(art)h(with)f(re)o(gards)h(to)f
(implementing)i(third-party)i(collecti)n(v)o(e)e(algorithms)g(within)
548 1390 y(an)17 b(MPI)e(frame)n(w)o(ork.)32 b Fh(x)p
Fn(1.3)17 b(describes)j(Open)d(MPI')-5 b(s)16 b(component)j(model)e
(for)g(collecti)n(v)o(e)548 1498 y(algorithms,)k(and)d(e)o(xplores)i
(dif)n(ferent)g(possibilities)h(for)e(third-party)h(implementations.)
548 1606 y Fh(x)p Fn(1.4)d(pro)o(vides)i(o)o(v)o(ervie)n(ws)g(of)e(tw)o
(o)f(collecti)n(v)o(e)k(modules)e(that)g(are)f(included)j(in)d(the)g
(Open)548 1714 y(MPI)e(softw)o(are)i(distrib)n(ution.)35
b(Finally)-6 b(,)18 b Fh(x)p Fn(1.5)e(and)h Fh(x)p Fn(1.6)f(discuss)i
(run-time)f(performance,)548 1822 y(\014nal)23 b(conclusions,)k(and)d
(future)h(w)o(ork)e(directions.)548 2038 y Fo(2.)180
b(Adding)27 b(Collecti)o(v)o(e)f(Algorithms)h(to)g(an)g(MPI)809
2154 y(Implementation)648 2312 y Fn(Third-parties)43
b(implementing)f(ne)n(w)e(collecti)n(v)o(e)i(functions)h(can)e
(encounter)i(both)548 2420 y(technical)22 b(and)e(logistical)j(dif)n
(\014culties,)f(e)n(v)o(en)e(in)f(MPI)g(implementations)k(that)d
(encapsu-)548 2528 y(late)f(collecti)n(v)o(e)h(function)g(pointers)g
(in)e(centralized)k(locations.)34 b(Not)17 b(only)i(is)f(it)g
(desirable)548 2636 y(for)d(MPI)g(applications)g(to)g(in)m(v)n(o)q(k)o
(e)h(ne)o(w)f(colle)q(cti)o(v)o(e)g(ro)q(uti)q(nes)h(thr)q(ou)q(gh)g
(the)g(sta)q(nd)q(ard)g(MPI)548 2743 y(API,)k(there)j(must)f(be)g(a)g
(relati)n(v)o(ely)i(straightforw)o(ard)h(mechanism)f(for)e(making)h
(the)f(ne)n(w)548 2851 y(routines)37 b(a)n(v)n(ailable)g(to)e(other)g
(users)h(\(do)n(wnload,)j(compile,)g(install,)g(compile)d(/)e(link)548
2959 y(against)25 b(user)f(applications,)j(etc.\).)548
3175 y Fo(2.1)180 b(Common)26 b(Interface)h(A)m(ppr)n(oaches)648
3333 y Fn(Common)h(approaches)k(to)d(de)n(v)o(eloping)i(ne)n(w)d
(collecti)n(v)o(e)j(routines)g(include:)46 b(using)548
3441 y(the)34 b(MPI)f(pro\014ling)j(layer)l(,)i(editing)e(an)e(e)o
(xisting)i(MPI)d(implementation,)40 b(creating)c(a)548
3549 y(ne)n(w)27 b(MPI)g(implementation,)32 b(and)c(using)h(alternate)i
(function)f(names.)47 b(Each)28 b(of)f(these)548 3657
y(scenarios)f(ha)n(v)o(e)f(bene\014ts)g(and)f(dra)o(wbacks,)i(b)n(ut)e
(all)g(require)i(the)e(collecti)n(v)o(e)i(algorithm)548
3765 y(author)k(to)f(implement)h(at)f(least)g(some)g(le)n(v)o(el)h(of)e
(infrastructure)33 b(to)c(be)g(able)g(to)g(in)l(v)n(ok)o(e)548
3873 y(their)24 b(functions.)548 4080 y Fg(Use)c(the)g(MPI)h(Pr)n
(o\014ling)f(Lay)o(er)-9 b(.)101 b Fn(The)21 b(MPI)f(pro\014ling)j
(layer)g(w)o(as)e(designed)j(for)e(e)o(x-)548 4188 y(actly)d(this)f
(purpose:)33 b(allo)n(wing)19 b(third-party)h(libraries)g(to)e(insert)h
(arbitrary)h(functionality)548 4296 y(in)h(an)g(MPI)f(implementation.)
36 b(This)21 b(can)g(be)h(done)g(without)g(access)g(to)g(the)f(source)i
(code)548 4404 y(for)h(either)g(the)g(MPI)f(implementation)j(or)d(the)h
(MPI)f(application.)648 4512 y(This)18 b(approach)k(has)d(the)g(ob)o
(vious)i(adv)n(antage)g(that)f(an)o(y)f(MPI)f(application)k(will)c
(auto-)548 4620 y(matically)26 b(use)f(the)g(ne)n(w)f(collecti)n(v)o(e)
j(routines)f(without)g(modi\014cations.)39 b(Although)26
b(the)548 4728 y(MPI)17 b(application)22 b(will)c(need)h(to)g(be)f
(relink)o(ed)j(against)f(the)e(ne)n(w)g(library)-6 b(,)21
b(no)e(source)h(code)548 4836 y(changes)h(should)f(be)f(necessary)-6
b(.)34 b(A)18 b(non-ob)o(vious)k(disadv)n(antage)g(is)d(that)g(since)h
(the)f(pro-)548 4944 y(\014ling)24 b(layer)g(uses)g(link)o(er)h
(semantics)g(to)e(o)o(v)o(erload)i(functions,)h(only)e(one)g(v)o
(ersion)h(of)e(an)548 5051 y(o)o(v)o(erloaded)g(function)g(is)d
(possible.)35 b(F)o(or)20 b(e)o(xample,)h Fi(MPI)p 2386
5051 23 4 v 27 w(BARRIER)d Fn(cannot)k(be)f(o)o(v)o(er)n(-)p
eop end
%%Page: 5 5
TeXDict begin 5 4 bop 598 550 a Fk(The)20 b(Component)f(Ar)m(c)o
(hitectur)m(e)g(of)h(Open)g(MPI)1382 b Fu(5)598 745 y
Fn(loaded)29 b(with)e(both)h(a)f(ne)n(w)g(collecti)n(v)o(e)j(routine)f
Ff(and)f Fn(a)f(run-time)i(deb)n(ugging/pro\014ling)598
852 y(interf)o(ace.)598 1060 y Fg(Edit)h(an)e(Existing)h(MPI)g
(Implementation.)122 b Fn(This)30 b(method)h(in)l(v)n(olv)o(es)i
(editing)e(an)598 1168 y(MPI)19 b(implementation)24 b(to)d(either)h
(include)g(ne)n(w)e(collecti)n(v)o(e)j(routines)g(in)d(addition)j(to)e
(the)598 1276 y(implementation')-5 b(s)37 b(e)o(xisting)f(routines)g
([21\22622],)i(or)c(outright)i(replacing)h(the)d(imple-)598
1384 y(mentation')-5 b(s)28 b(collecti)n(v)o(e)f(routines)g(with)f(ne)n
(w)e(v)o(ersions)k([10].)39 b(This)25 b(can)h(only)g(be)f(used)598
1492 y(with)i(MPI)e(implementations)31 b(where)c(the)g(source)i(code)f
(is)f(a)n(v)n(ailable)i(and)e(the)h(license)598 1600
y(allo)n(ws)c(such)g(modi\014cations.)697 1708 y(Similar)c(to)h(the)f
(pro\014ling)h(approach,)i(this)e(method)g(allo)n(ws)g(unmodi\014ed)g
(MPI)e(appli-)598 1816 y(cations)k(to)d(utilize)j(ne)n(w)d
(functionality)-6 b(.)37 b(This)21 b(is)f(perhaps)j(the)f(easiest)g
(method)g(for)f(MPI)598 1923 y(applications)30 b(because)e(the)e(API)f
(is)i(the)f(same)h(and)f(the)h(ne)n(w)f(routines)i(are)f(in)f(the)g
(MPI)598 2031 y(implementation)g(itself.)697 2139 y(Ho)n(we)n(v)o(er)l
(,)h(the)g(learning)i(curv)o(e)e(to)f(add)h(or)g(replace)h
(functionality)i(in)d(the)f(MPI)g(im-)598 2247 y(plementation)38
b(may)c(be)h(quite)h(lar)n(ge.)68 b(Additionally)-6 b(,)41
b(editing)36 b(the)g(underlying)h(MPI)598 2355 y(ef)n(fecti)n(v)o(ely)d
(creates)g(a)e(\223fork\224)i(in)e(the)h(implementation')-5
b(s)35 b(de)n(v)o(elopment)g(path.)60 b(This)598 2463
y(may)23 b(mak)o(e)h(the)g(code)g(dif)n(\014cult)g(to)g(maintain)h(and)
f(upgrade.)598 2671 y Fg(Cr)n(eate)k(a)g(New)h(MPI)g(Implementation.)
121 b Fn(Entirely)30 b(ne)n(w)f(MPI)g(implementations)598
2779 y(ha)n(v)o(e)i(been)g(created)h(simply)f(to)f(design,)k(test,)e
(and)f(implement)g(ne)n(w)f(MPI)f(collecti)n(v)o(e)598
2887 y(algorithms)h([11\22612].)47 b(The)27 b(adv)n(antage)j(to)e(this)
g(approach)i(is)e(complete)h(control)g(o)o(v)o(er)598
2994 y(the)34 b(entire)g(MPI)f(implementation.)66 b(This)33
b(may)h(be)f(desirable)j(for)e(situations)i(where)598
3102 y(the)f(collecti)n(v)o(e)j(routines)f(are)f(radically)h(dif)n
(ferent)g(than)f(current)h(MPI)e(implementa-)598 3210
y(tions)26 b(allo)n(w)-6 b(.)38 b(F)o(or)24 b(e)o(xample,)j(P)-8
b(A)l(C-X)23 b(MPI)h(w)o(as)h(created)h(to)f(enable)i(communications)
598 3318 y(in)i(metacomputing)i(en)l(vironments,)j(requiring)d
(alternate)g(collecti)n(v)o(e)g(algorithms)g(for)598
3426 y(ef)n(\014cienc)o(y)-6 b(.)697 3534 y(The)29 b(o)o(v)o(erhead)h
(with)e(this)h(approach)i(is)e(enormous.)50 b(Writing)30
b(enough)g(of)f(an)f(MPI)598 3642 y(implementation)h(such)e(that)g(a)f
(simple)h(MPI)e(program)j(that)f(only)g(in)l(v)n(ok)o(es)i
Fi(MPI)p 3221 3642 23 4 v 27 w(INIT)p Fn(,)598 3750 y
Fi(MPI)p 765 3750 V 27 w(COMM)p 1081 3750 V 26 w(RANK)p
Fn(,)18 b Fi(MPI)p 1564 3750 V 26 w(COMM)p 1879 3750
V 27 w(SIZE)p Fn(,)g(and)j Fi(MPI)p 2463 3750 V 27 w(FINALIZE)c
Fn(is)j(a)g(monumen-)598 3858 y(tal)i(task.)33 b(The)22
b(time)g(necessary)i(to)e(create)h(an)f(entire)h(MPI)e(frame)n(w)o(ork)
i(before)g(actually)598 3966 y(being)h(able)h(to)e(w)o(ork)h(on)f
(collecti)n(v)o(e)j(algorithms)g(can)d(be)h(prohibiti)n(v)o(ely)j(lar)n
(ge.)598 4173 y Fg(Use)i(Alter)o(nate)g(Function)h(Names.)125
b Fn(Perhaps)32 b(the)f(simplest)i(approach)g(from)e(the)598
4281 y(algorithm)i(implementor')-5 b(s)34 b(perspecti)n(v)o(e)g(is)e
(to)f(use)h(function)i(names)e(other)h(than)f(the)598
4389 y(ones)23 b(mandated)i(by)e(the)g(MPI)f(standard.)35
b(F)o(or)22 b(e)o(xample,)h(pro)o(vide)i(an)e(alternate)i(barrier)598
4497 y(implementation)h(in)e(the)f(function)j Fj(New)p
1894 4497 29 4 v 34 w(Barrier)21 b Fn(instead)k(of)e
Fj(MPI)p 2807 4497 V 34 w(Barrier)p Fn(.)697 4605 y(Dif)n(\014culties)h
(arise)f(in)f(testing)i(because)h(MPI)c(applications)26
b(need)d(to)f(be)h(modi\014ed)f(to)598 4713 y(call)j(the)f(alternate)j
(functions.)38 b(This)24 b(can)h(be)f(as)g(simple)h(as)f(preprocessor)k
(macros)e(in)e(a)598 4821 y(standardized)c(header)d(\014le,)g(or)f(may)
g(entail)i(manually)f(modifying)i(all)d(in)l(v)n(ocation)k(points)598
4929 y(in)k(the)h(application.)40 b(Requiring)26 b(source)g(code)g
(modi\014cation)g(necessarily)i(means)d(that)598 5037
y(precompiled,)k(binary-only)h(MPI)c(applications)k(will)c(not)h(be)f
(able)i(to)e(utilize)i(the)f(ne)n(w)598 5145 y(functionality)-6
b(.)p eop end
%%Page: 6 6
TeXDict begin 6 5 bop 548 550 a Fu(6)548 755 y Fo(2.2)180
b(A)27 b(Component-Based)f(A)m(ppr)n(oach)648 913 y Fn(W)-7
b(e)27 b(propose)k(an)d(open,)j(component-based)i(frame)n(w)o(ork)c
(for)g(the)g(implementation)548 1021 y(of)35 b(collecti)n(v)o(e)i
(algorithms)g(that)f(will)e(solv)o(e)i(man)o(y)f(of)g(the)g(technical)i
(and)f(logistical)548 1129 y(issues)i(f)o(aced)g(by)f(third-party)j
(collecti)n(v)o(e)f(algorithm)g(researchers.)77 b(In)37
b(this)g(frame-)548 1237 y(w)o(ork,)25 b(a)g Ff(collective)i(component)
g Fn(is)e(comprised)i(of)e(a)f(set)i(of)f(top-le)n(v)o(el)h
Ff(collective)i(r)l(ou-)548 1345 y(tines)p Fn(.)57 b(A)30
b(collecti)n(v)o(e)j(routine)g(implements)g(one)f(MPI)e(collecti)n(v)o
(e)j(function)g(\(such)g(as)548 1453 y Fi(MPI)p 715 1453
23 4 v 27 w(BARRIER)p Fn(,)f Fi(MPI)p 1365 1453 V 27
w(BCAST)p Fn(,)g(etc.\).)69 b(The)35 b(frame)n(w)o(ork)h(also)g
(includes)h(b)n(uilt-in)548 1561 y(mechanisms)22 b(for)f
(con\014guration,)j(compilation,)g(installation,)g(and)d(source)h(and)f
(binary)548 1669 y(distrib)n(utions)27 b(of)d(components.)648
1777 y(The)j(collecti)n(v)o(e)j(component)g(frame)n(w)o(ork)f(w)o(as)f
(designed)i(and)f(implemented)h(with)548 1885 y(the)24
b(follo)n(wing)h(goals:)p 663 2053 34 34 v 775 2061 a(Do)16
b(not)g(require)i(modifying)g(Open)e(MPI)f(source)j(code)f(to)f(import)
h(ne)n(w)e(collecti)n(v)o(e)775 2168 y(algorithms.)p
663 2329 V 775 2337 a(Allo)n(w)32 b(ne)n(w)g(collecti)n(v)o(es)j(to)d
(be)h(imported)h(into)f(the)g(MPI)e(implementation)36
b(at)775 2445 y(compile-)25 b(and)f(run-time.)p 663 2605
V 775 2613 a(Pro)o(vide)17 b(easy-to-understan)q(d)22
b(interf)o(ace)d(and)e(implementation)i(models)e(for)g(col-)775
2721 y(lecti)n(v)o(e)g(routines)i(that)d(do)h(not)f(require)i(detailed)
g(internal)g(kno)n(wledge)g(of)e(the)h(MPI)775 2829 y(implementation.)p
663 2989 V 775 2997 a(Pro)o(vide)29 b(minimal)g(o)o(v)o(erhead)h
(before)g(in)l(v)n(oking)i(collecti)n(v)o(e)e(routines)h(to)d(maxi-)775
3105 y(mize)c(run-time)g(performance.)p 663 3266 V 775
3274 a(Allo)n(w)19 b(\(b)n(ut)i(not)g(require\))h(collecti)n(v)o(e)g
(routines)g(to)e(be)g(layered)h(upon)g(MPI)e(point-)775
3382 y(to-point)26 b(routines.)p 663 3542 V 775 3550
a(Allo)n(w)41 b(collecti)n(v)o(e)i(routines)g(to)f(e)o(xploit)g
(back-end)i(hardw)o(are)f(and)e(netw)o(ork)775 3658 y(topologies.)p
663 3818 V 775 3826 a(Allo)n(w)20 b(collecti)n(v)o(e)j(components)g(to)
d(be)h(layered)h(upon)f(other)h(collecti)n(v)o(e)h(compo-)775
3934 y(nents.)p 663 4095 V 775 4103 a(F)o(acilitate)i(both)f(source)h
(and)f(binary)h(distrib)n(ution)i(of)d(collecti)n(v)o(e)h(components.)p
663 4263 V 775 4271 a(Enable)15 b(MPI)g(applications)g(to)g(uti)q(liz)q
(e)g(the)h(ne)n(w)f(col)q(lec)q(ti)n(v)o(e)g(c)q(ompo)q(ne)q(nts)h
(witho)q(ut)775 4379 y(recompiling)26 b(/)d(relinking.)p
663 4539 V 775 4547 a(Allo)n(w)i(multiple)i(collecti)n(v)o(e)h
(components)h(to)d(e)o(xist)g(within)g(a)g(single)h(MPI)e(pro-)775
4655 y(cess.)p 663 4816 V 775 4824 a(Pro)o(vide)37 b(a)e
(\014ne-grained,)41 b(run-time,)f(user)n(-controlled)h(component)d
(selection)775 4932 y(mechanism.)648 5108 y(There)32
b(are)h(no)g(current)h(plans)g(to)f(allo)n(w)f(e)o(xperimentation)k
(with)d(collecti)n(v)o(e)h(algo-)548 5215 y(rithms)24
b(that)g(are)g(not)g(speci\014ed)h(by)e(MPI.)p eop end
%%Page: 7 7
TeXDict begin 7 6 bop 598 550 a Fk(The)20 b(Component)f(Ar)m(c)o
(hitectur)m(e)g(of)h(Open)g(MPI)1382 b Fu(7)598 755 y
Fo(3.)180 b(Collecti)o(v)o(e)26 b(Components)697 913
y Fn(Open)32 b(MPI)e(is)i(based)g(upon)h(a)e(lightweight)j(component)f
(architecture,)k(including)598 1021 y(a)g(component)j(frame)n(w)o(ork)e
(for)g(MPI)e(collecti)n(v)o(e)k(algorithms)g(named)e(\223)p
Fi(coll)p Fn(.\224)76 b(The)598 1129 y Fi(coll)36 b Fn(component)j
(interf)o(ace)g(w)o(as)d(designed)j(to)e(satisfy)h(the)f(goals)h
(listed)g(in)e Fh(x)p Fn(1.2.2.)598 1237 y Fi(coll)26
b Fn(components)j(can)e(be)f(loaded)i(and)f(selected)i(at)d
(compile-time)i(or)f(run-time.)43 b(F)o(or)598 1345 y(e)o(xample,)d
(multiple)e Fi(coll)d Fn(components)k(are)e(included)i(in)d(the)g
(standard)j(Open)d(MPI)598 1453 y(distrib)n(ution,)27
b(b)n(ut)d(third-party)i(components)g(can)e(also)g(be)g(added)h(at)e
(an)o(y)h(time.)598 1669 y Fo(3.1)180 b(Design)26 b(Ov)o(er)o(view)697
1826 y Fn(The)c(Open)f(MPI)g(component)j(frame)n(w)o(ork)e(manages)h
(all)f Fi(coll)f Fn(components)j(that)e(are)598 1934
y(a)n(v)n(ailable)36 b(at)d(run-time.)65 b(This)34 b(management)h(code)
g(is)e(typically)j(referred)g(to)d(as)h(the)598 2042
y(Open)23 b(MPI)g Fi(coll)g Fn(frame)n(w)o(ork)h(in)g(the)f(discussion)
k(belo)n(w)-6 b(.)697 2150 y(Simply)19 b(put,)g(a)f Fi(coll)g
Fn(components)i(is)f(essentially)i(a)d(list)g(of)g(top-le)n(v)o(el)i
(function)h(point-)598 2258 y(ers)26 b(that)g(the)h(Open)f(MPI)f
(infrastructure)k(selecti)n(v)o(ely)g(in)l(v)n(ok)o(es)f(upon)f
(demand.)42 b(When)598 2366 y(paired)28 b(with)f(a)f(communicator)l(,)
31 b(a)26 b(component)j(becomes)f(a)f Ff(module)h Fn([20].)44
b(T)-7 b(op-le)n(v)o(el)598 2474 y(MPI)19 b(collecti)n(v)o(e)i
(functions)i(ha)n(v)o(e)e(been)f(reduced)i(to)e(thin)h(wrappers)g(that)
g(perform)f(error)598 2582 y(checking)15 b(before)g(in)l(v)o(ok)q(in)q
(g)g(b)q(ack)q(-en)q(d)g Fi(c)q(oll)g Fn(modu)q(le)h(imple)q(ment)q
(atio)q(n)f(f)q(un)q(ctio)q(ns)q(.)36 b(One)598 2690
y Fi(coll)27 b Fn(module)i(is)f(assigned)j(to)d(each)g(communicator;)33
b(this)c(module)g(is)f(used)h(to)f(imple-)598 2798 y(ment)23
b(all)h(MPI)f(collecti)n(v)o(es)j(that)e(are)g(in)l(v)n(ok)o(ed)i(on)e
(that)g(communicator)-5 b(.)36 b(F)o(or)23 b(e)o(xample,)598
2906 y Fi(MPI)p 765 2906 23 4 v 27 w(BCAST)d Fn(simply)j(checks)h(the)f
(passed)h(parameters)h(for)d(errors)i(and)f(then)h(in)l(v)n(ok)o(es)598
3014 y(the)g(back-end)h(broadcast)i(function)e(on)f(its)g(assigned)h
Fi(coll)e Fn(module.)598 3229 y Fo(3.2)180 b(Implementation)26
b(Models)697 3387 y Fn(Components)31 b(are)d(free)h(to)g(implement)g
(the)g(standardized)j(MPI)c(semantics)i(in)e(an)o(y)598
3495 y(w)o(ay)18 b(that)h(the)o(y)g(choose.)33 b(Most,)19
b(ho)n(we)n(v)o(er)l(,)h(use)f(one)g(or)g(more)f(of)g(the)h(follo)n
(wing)h(models:)598 3603 y(layered)j(o)o(v)o(er)e(point-to-point,)k
(alternate)f(communication)g(channels,)f(or)e(layered)i(o)o(v)o(er)598
3711 y(another)i Fi(coll)e Fn(components.)598 3919 y
Fg(Lay)o(er)n(ed)g(o)o(v)o(er)h(P)n(oint-to-P)n(oint.)111
b Fn(A)24 b(simple)j(implementation)h(model)f(is)e(to)h(utilize)598
4026 y(MPI)31 b(point-to-point)38 b(functions)d(to)e(send)g(data)h
(between)g(processes.)64 b(F)o(or)32 b(e)o(xample,)598
4134 y(using)d Fi(MPI)p 989 4134 V 27 w(SEND)c Fn(and)j
Fi(MPI)p 1615 4134 V 27 w(RECV)e Fn(to)h(e)o(xchange)j(data)f(is)e
(both)i(natural)g(and)g(easy)598 4242 y(to)22 b(understand,)j(freeing)f
(the)f Fi(coll)f Fn(component)i(author)g(to)e(concentrate)j(on)e(the)f
(compo-)598 4350 y(nents')j(algorithms)i(and)d(remain)h(independent)j
(of)c(ho)n(w)g(the)g(underlying)k(communica-)598 4458
y(tion)20 b(occurs.)34 b(This)20 b(model)g(has)h(been)f(used)h(e)o
(xtensi)n(v)o(ely)h(by)f(MPI)d(implementations)24 b([8,)598
4566 y(19])g(and)g(third-party)i(collecti)n(v)o(e)g(algorithm)f
(researchers)i([13\22614].)598 4774 y Fg(Alter)o(nate)22
b(Communication)h(Channels.)105 b Fn(Recently)-6 b(,)26
b(researchers)i(ha)n(v)o(e)d(been)g(e)o(x-)598 4882 y(ploring)d(the)f
(possibility)i(of)d(a)n(v)n(oiding)k(MPI)19 b(point-to-point)24
b(functionality)h(and)c(instead)598 4990 y(using)i(alternate)h
(communication)h(channels)f(for)e(collecti)n(v)o(e)i(communications.)36
b(Some)598 5097 y(netw)o(ork)g(interf)o(aces)h(contain)g(nati)n(v)o(e)e
(primiti)n(v)o(es)h(for)f(collecti)n(v)o(e)i(operations)h(and/or)598
5205 y(streamlined)f(one-sided)h(operations)g(which)d(can)h(lead)g(to)f
(signi\014cant)i(performance)p eop end
%%Page: 8 8
TeXDict begin 8 7 bop 548 550 a Fu(8)1212 1974 y
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 1212
1974 a @beginspecial 0 @llx 0 @lly 176 @urx 155 @ury
1760 @rwi @setspecial
%%BeginDocument: hierarchical-coll-modules.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: hierarchical-coll-modules.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Thu Sep  9 04:22:02 2004
%%For: jsquyres@queeg.home.squyres.com (Jeff Squyres)
%%BoundingBox: 0 0 176 155
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 155 moveto 0 0 lineto 176 0 lineto 176 155 lineto closepath clip newpath
-227.5 366.5 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

% crosshatch30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<033003300c0c0c0c30033003c000c000300330030c0c0c0c
	0330033000c000c0033003300c0c0c0c30033003c000c000
	300330030c0c0c0c0330033000c000c0>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P3 exch def

% vertical right-shingles
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 48 48 true [ 48 0 0 -48 0 48 ]
	{<000100010001000100010001000100010001000100010001
	000100010001000100010001000100010001000100010001
	000100010007000100010019000100010061000100010181
	000100010601000100011801000100016001000100018001
	000100010001000100010001000100010001000100010001
	000100010001000100010001000100010001000100010001
	000100070001000100190001000100610001000101810001
	000106010001000118010001000160010001000180010001
	000100010001000100010001000100010001000100010001
	000100010001000100010001000100010001000100010001
	000700010001001900010001006100010001018100010001
	060100010001180100010001600100010001800100010001>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P15 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 60
% Polyline
7.500 slw
 [60] 0 sd
n 4080 3900 m 3975 3900 3975 5820 105 arcto 4 {pop} repeat
  3975 5925 6420 5925 105 arcto 4 {pop} repeat
  6525 5925 6525 4005 105 arcto 4 {pop} repeat
  6525 3900 4080 3900 105 arcto 4 {pop} repeat
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P15 [24 0 0 -24 265.00 260.00] PATmp PATsp ef gr PATusp gs col-1 s gr  [] 0 sd
% here ends figure;
% 
% here starts figure with depth 50
% Polyline
7.500 slw
 [60] 0 sd
n 4155 4050 m 4050 4050 4050 5670 105 arcto 4 {pop} repeat
  4050 5775 4845 5775 105 arcto 4 {pop} repeat
  4950 5775 4950 4155 105 arcto 4 {pop} repeat
  4950 4050 4155 4050 105 arcto 4 {pop} repeat
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 270.00 270.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
30.000 slw
n 3825 3750 m 5100 3750 l 5100 6075 l 3825 6075 l
 cp gs col0 s gr 
% Polyline
7.500 slw
 [60] 0 sd
n 5655 4050 m 5550 4050 5550 5670 105 arcto 4 {pop} repeat
  5550 5775 6345 5775 105 arcto 4 {pop} repeat
  6450 5775 6450 4155 105 arcto 4 {pop} repeat
  6450 4050 5655 4050 105 arcto 4 {pop} repeat
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 370.00 270.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
30.000 slw
n 5400 3756 m 6681 3756 l 6681 6075 l 5400 6075 l
 cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
4275 3675 m
gs 1 -1 sc (Node 0) col0 sh gr
/Times-Roman ff 180.00 scf sf
5700 3675 m
gs 1 -1 sc (Node 1) col0 sh gr
% here ends figure;
% 
% here starts figure with depth 45
% Polyline
7.500 slw
 [60] 0 sd
n 4305 4200 m 4200 4200 4200 4695 105 arcto 4 {pop} repeat
  4200 4800 6195 4800 105 arcto 4 {pop} repeat
  6300 4800 6300 4305 105 arcto 4 {pop} repeat
  6300 4200 4305 4200 105 arcto 4 {pop} repeat
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 280.00 280.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% here ends figure;
% 
% here starts figure with depth 40
% Ellipse
7.500 slw
n 4500 4500 237 237 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 4500 5400 237 237 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 5988 4500 237 237 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 5988 5400 237 237 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% here ends figure;
% 
% here starts figure with depth 35
/Times-Roman ff 180.00 scf sf
4474 5434 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 180.00 scf sf
5972 5443 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 180.00 scf sf
5960 4533 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 180.00 scf sf
4481 4542 m
gs 1 -1 sc (0) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage

%%EndDocument
 @endspecial 2678 1974 a
 currentpoint grestore moveto
 2678 1974 a 548 2148 a Ft(F)m(igur)m(e)11
b(1.)78 b Fq(F)o(our)11 b(processes)g(in)g Fp(MPI)p 1543
2148 19 4 v 22 w(COMM)p 1801 2148 V 23 w(W)o(ORLD)f Fq(are)h(distrib)o
(uted)g(across)g(tw)o(o)g(nodes.)24 b(Three)11 b(sub-)548
2240 y(communicators)19 b(\(v)o(ertical)e(and)i(horizontal\))f(each)g
(contain)h(the)e(tw)o(o)h(processes)h(local)e(to)h(their)f(respecti)n
(v)o(e)548 2331 y(nodes.)48 b(One)26 b(\223bridge\224)h(communicator)g
(\(horizontal\))f(contains)g(a)g(representati)n(v)o(e)g(process)h(from)
e(each)548 2422 y(node.)548 2741 y Fn(gains)c(as)f(compared)i(to)e
(using)h(traditional)i(point-to-point)i(methods.)33 b(Examples)21
b(of)f(al-)548 2849 y(ternate)j(communication)g(channels)h(that)d(at)g
(least)h(partially)h(support)g(collecti)n(v)o(e)g(opera-)548
2957 y(tions)d(include)h(\(b)n(ut)g(are)e(not)h(limited)g(to\):)32
b(shared)21 b(memory)e([16],)i(UDP)c(multicast)k([11],)548
3065 y(Myrinet)k([24],)e(and)h(In\014niband)i([15].)548
3273 y Fg(Hierar)n(chical)18 b Fi(coll)h Fg(Components.)101
b Fn(The)20 b Fi(coll)f Fn(frame)n(w)o(ork)i(w)o(as)f(carefully)i
(designed)548 3381 y(such)30 b(that)f Fi(coll)g Fn(components)i(can)e
(be)g(re-used)i(at)d(run-time)j(in)d(tw)o(o)h(w)o(ays.)49
b(First,)30 b(the)548 3489 y Fi(coll)c Fn(component)k(\223)p
Fi(basic)p Fn(,)-6 b(\224)27 b(as)g(its)g(name)g(implies,)h(is)f(a)g
(basic)h(implementation)i(of)c(all)548 3597 y(of)j(the)g(MPI)f
(collecti)n(v)o(es.)53 b(It)28 b(can)i(be)f(used)h(with)f(an)o(y)g
(communicator)j(and)d(topology)-6 b(.)548 3704 y(The)24
b(purpose)j(of)d(this)h(component)i(is)e(to)f(pro)o(vide)i(a)e
(baseline)j(implementation)h(for)c(all)548 3812 y(MPI)33
b(collecti)n(v)o(e)j(operations,)k(allo)n(wing)c(other)f(components)i
(to)d(use)h(its)f(routines)j(as)548 3920 y(necessary)-6
b(.)45 b(F)o(or)26 b(e)o(xample,)h(a)f(component)j(that)e(only)h(pro)o
(vides)g(an)f(optimized)h(scatter)548 4028 y(algorithm)i
(implementation)i(can)d(complete)h(itself)g(by)f(using)h(the)f(methods)
h(from)e(the)548 4136 y Fi(basic)c Fn(component)j(\(or)d(other)i
(components\))h(for)e(all)g(other)h(collecti)n(v)o(e)g(routines.)39
b(This)548 4244 y(allo)n(ws)28 b(the)h(optimized)g(scatter)h(component)
g(to)e(be)g(used)h(in)f(an)o(y)g(MPI)f(program)i(e)n(v)o(en)548
4352 y(though)c(it)e(only)i(implements)g(a)e(small)h(number)g(of)g(ne)n
(w/optimized)h(routines.)648 4460 y(A)16 b(second,)k(more)d(comple)o(x)
i(model)f(in)l(v)n(olv)o(es)h(using)g(a)e(hierarchy)j(of)d
Fi(coll)g Fn(modules)i(to)548 4568 y(implement)g(a)f(single,)j(top-le)n
(v)o(el)f(MPI)d(collecti)n(v)o(e.)33 b(This)18 b(is)g(useful)i(when)f
(a)e(collecti)n(v)o(e)k(is)548 4676 y(in)l(v)n(ok)o(ed)15
b(on)g(a)g(communicat)q(or)g(th)q(at)g(s)q(pan)q(s)g(mult)q(ipl)q(e)g
(ty)q(pes)h(of)f(n)q(etw)o(or)q(ks.)36 b(F)o(or)15 b(e)o(xample,)548
4784 y(Figure)32 b(1)f(sho)n(ws)g(tw)o(o)g(SMPs,)h(each)g(running)h(tw)
o(o)e(MPI)g(processes.)59 b(A)30 b(single)j(MPI)548 4892
y(communicator)28 b(contains)g(all)e(four)h(processes.)42
b(The)26 b(top-le)n(v)o(el)h(communicator')-5 b(s)29
b Fi(coll)548 5000 y Fn(module)i(creates)g(three)g(sub-communicators:)
51 b(one)31 b(for)f(each)h(SMP)d(\(containing)33 b(the)548
5108 y(tw)o(o)c(processes)j(on)e(each)g(node\),)i(and)e(a)f(third)h
(\223bridge\224)i(communicator)f(connecting)548 5215
y(one)24 b(representati)n(v)o(e)j(process)e(from)f(each)g(node.)p
eop end
%%Page: 9 9
TeXDict begin 9 8 bop 598 550 a Fk(The)20 b(Component)f(Ar)m(c)o
(hitectur)m(e)g(of)h(Open)g(MPI)1382 b Fu(9)945 2091
y
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 945 2091 a @beginspecial 0 @llx 0 @lly 252 @urx 169
@ury 2520 @rwi @setspecial
%%BeginDocument: module-phases.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: module-phases.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Thu Sep  9 04:22:02 2004
%%For: jsquyres@queeg.home.squyres.com (Jeff Squyres)
%%BoundingBox: 0 0 252 169
%%Magnification: 1.0000
%%EndComments
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 169 moveto 0 0 lineto 252 0 lineto 252 169 lineto closepath clip newpath
-66.8 223.7 translate
1 -1 scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
7.500 slw
n 1230 2325 m 1125 2325 1125 2745 105 arcto 4 {pop} repeat
  1125 2850 2070 2850 105 arcto 4 {pop} repeat
  2175 2850 2175 2430 105 arcto 4 {pop} repeat
  2175 2325 1230 2325 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
1200 2550 m
gs 1 -1 sc (Checkpoint/) col0 sh gr
/Times-Roman ff 180.00 scf sf
1425 2775 m
gs 1 -1 sc (restart) col0 sh gr
% Polyline
n 2430 2325 m 2325 2325 2325 2745 105 arcto 4 {pop} repeat
  2325 2850 3270 2850 105 arcto 4 {pop} repeat
  3375 2850 3375 2430 105 arcto 4 {pop} repeat
  3375 2325 2430 2325 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
2625 2775 m
gs 1 -1 sc (usage) col0 sh gr
/Times-Roman ff 180.00 scf sf
2550 2550 m
gs 1 -1 sc (Normal) col0 sh gr
% Arc
gs  clippath
2926 2358 m 2950 2303 l 2812 2241 l 2910 2318 l 2788 2296 l cp
1624 2303 m 1648 2358 l 1786 2296 l 1665 2318 l 1762 2241 l cp
eoclip
n 2287.5 3600.0 1425.5 -116.6 -63.4 arc
gs col0 s gr
 gr

% arrowhead
n 2788 2296 m 2910 2318 l 2812 2241 l 2788 2296 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 1762 2241 m 1665 2318 l 1786 2296 l 1762 2241 l  cp gs 0.00 setgray ef gr  col0 s
% Arc
gs  clippath
2950 2871 m 2926 2816 l 2788 2878 l 2910 2857 l 2812 2933 l cp
1648 2816 m 1624 2871 l 1762 2933 l 1665 2857 l 1786 2878 l cp
eoclip
n 2287.5 1575.0 1425.5 116.6 63.4 arcn
gs col0 s gr
 gr

% arrowhead
n 2812 2933 m 2910 2857 l 2788 2878 l 2812 2933 l  cp gs 0.00 setgray ef gr  col0 s
% arrowhead
n 1786 2878 m 1665 2857 l 1762 2933 l 1786 2878 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1530 975 m 1425 975 1425 1170 105 arcto 4 {pop} repeat
  1425 1275 2970 1275 105 arcto 4 {pop} repeat
  3075 1275 3075 1080 105 arcto 4 {pop} repeat
  3075 975 1530 975 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
n 1530 1575 m 1425 1575 1425 1770 105 arcto 4 {pop} repeat
  1425 1875 2970 1875 105 arcto 4 {pop} repeat
  3075 1875 3075 1680 105 arcto 4 {pop} repeat
  3075 1575 1530 1575 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
gs  clippath
2220 1590 m 2280 1590 l 2280 1439 l 2250 1559 l 2220 1439 l cp
eoclip
n 2250 1275 m
 2250 1575 l gs col0 s gr gr

% arrowhead
n 2220 1439 m 2250 1559 l 2280 1439 l 2220 1439 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2220 2190 m 2280 2190 l 2280 2039 l 2250 2159 l 2220 2039 l cp
eoclip
n 2250 1875 m
 2250 2175 l gs col0 s gr gr

% arrowhead
n 2220 2039 m 2250 2159 l 2280 2039 l 2220 2039 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
2220 3315 m 2280 3315 l 2280 3164 l 2250 3284 l 2220 3164 l cp
eoclip
n 2250 3000 m
 2250 3300 l gs col0 s gr gr

% arrowhead
n 2220 3164 m 2250 3284 l 2280 3164 l 2220 3164 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
n 1530 3300 m 1425 3300 1425 3495 105 arcto 4 {pop} repeat
  1425 3600 2970 3600 105 arcto 4 {pop} repeat
  3075 3600 3075 3405 105 arcto 4 {pop} repeat
  3075 3300 1530 3300 105 arcto 4 {pop} repeat
 cp gs col0 s gr 
% Polyline
60.000 slw
n 3525 975 m
 3525 1950 l gs col0 s gr 
% Polyline
n 3525 2250 m
 3525 2925 l gs col0 s gr 
% Polyline
n 3525 3225 m
 3525 3675 l gs col0 s gr 
/Times-Roman ff 180.00 scf sf
1800 1800 m
gs 1 -1 sc (Initialization) col0 sh gr
/Times-Roman ff 180.00 scf sf
1950 1200 m
gs 1 -1 sc (Selection) col0 sh gr
/Times-Roman ff 180.00 scf sf
1800 3525 m
gs 1 -1 sc (Finalization) col0 sh gr
/Helvetica ff 150.00 scf sf
3675 2475 m
gs 1 -1 sc (MPI_ALLGATHER) col0 sh gr
/Helvetica ff 150.00 scf sf
3675 2625 m
gs 1 -1 sc (...) col0 sh gr
/Helvetica ff 150.00 scf sf
3675 2850 m
gs 1 -1 sc (MPI_SCATTERV) col0 sh gr
/Helvetica ff 150.00 scf sf
3675 3600 m
gs 1 -1 sc (MPI_FINALIZE) col0 sh gr
/Helvetica ff 150.00 scf sf
3675 3375 m
gs 1 -1 sc (MPI_COMM_FREE) col0 sh gr
/Helvetica ff 150.00 scf sf
3675 1200 m
gs 1 -1 sc (MPI_INIT) col0 sh gr
/Helvetica ff 150.00 scf sf
3675 1875 m
gs 1 -1 sc (MPI_COMM_SPLIT) col0 sh gr
/Helvetica ff 150.00 scf sf
3675 1425 m
gs 1 -1 sc (MPI_COMM_CREATE) col0 sh gr
/Helvetica ff 150.00 scf sf
3675 1650 m
gs 1 -1 sc (MPI_COMM_DUP) col0 sh gr
% here ends figure;
$F2psEnd
rs
showpage

%%EndDocument
 @endspecial 3045 2091 a
 currentpoint grestore moveto
 3045 2091 a 598 2265 a Ft(F)m(igur)m(e)14
b(2.)80 b Fq(Fi)n(v)o(e)14 b(phases)h(in)g(the)f(life)g(of)g(a)h
Fp(coll)e Fq(component.)27 b(The)15 b(component)h(is)e(selected)h(and)g
(initialized)598 2356 y(when)23 b(a)g(communicator)i(is)d(created.)40
b(It)23 b(is)f(used)i(and/or)g(checkpointed)h(during)f(the)f(run,)h
(and)g(\014nalized)598 2448 y(when)19 b(the)g(communicator)i(is)d
(destro)o(yed.)697 2800 y Fn(Note)24 b(that)h(each)f(sub-communicator)k
(will)c(ha)n(v)o(e)g(its)g(o)n(wn)g Fi(coll)f Fn(module.)36
b(This)23 b(hier)n(-)598 2907 y(archical)i(arrangement)h(of)d
(communicators)j(allo)n(ws)d(each)h(netw)o(ork)h(to)e(utilize)i(its)e
(o)n(wn)598 3015 y(optimized)33 b Fi(coll)e Fn(component,)k(resulting)f
(in)d(an)g(ef)n(\014cient)h(mo)o(v)o(ement)g(of)f(data)h(across)598
3123 y(each)27 b(medium.)40 b(This)26 b(model)h(will)f(be)g(e)o
(xplained)i(in)e(more)g(detail)h(in)f Fh(x)p Fn(1.4,)h(where)f(the)598
3231 y Fi(smp)c(coll)h Fn(component)j(is)d(discussed)k(as)c(an)h(e)o
(xample)g(implementation.)598 3447 y Fo(3.3)180 b(Component)26
b(/)h(Module)g(Life)g(Cycle)697 3605 y Fn(There)13 b(are)g(\014v)o(e)g
(phases)g(in)h(a)f Fi(c)q(oll)g Fn(co)q(mpon)q(ent)q(')-5
b(s)14 b(life)g(c)o(yc)q(le:)35 b(selection,)15 b(initializatio)q(n,)
598 3713 y(checkpoint)30 b(/)d(restart,)i(normal)f(operation,)j(and)c
(\014nalization.)47 b(Figure)28 b(2)f(sho)n(ws)g(these)598
3821 y(phases)35 b(and)g(the)f(corresponding)39 b(MPI)33
b(functions)k(that)d(trigger)i(them.)65 b(Note)34 b(that)h(a)598
3929 y(component)22 b(may)e(be)g(in)l(v)n(olv)o(ed)i(in)e(multiple)h
(life)g(c)o(ycles)g(simultaneously)i(\(i.e.,)d(se)n(v)o(eral)598
4037 y(modules)e(of)f(the)g(same)g(component)i(may)d(e)o(xist)i(in)e(a)
h(single)h(process\);)j Fi(coll)c Fn(components)598 4144
y(ha)n(v)o(e)24 b(a)f(one-to-man)o(y)j(relationship)h(with)c
(communicators.)598 4352 y Fg(Selection.)104 b Fn(As)23
b(each)i(communicator)i(is)d(created)i(\(including)h
Fi(MPI)p 2873 4352 23 4 v 27 w(COMM)p 3189 4352 V 26
w(SELF)598 4460 y Fn(and)d Fi(MPI)p 919 4460 V 27 w(COMM)p
1235 4460 V 26 w(W)n(ORLD)p Fn(\),)e(a)h Fi(coll)g Fn(component)j(is)e
Ff(selected)i Fn(for)e(it)g(from)f(all)h(a)n(v)n(ail-)598
4568 y(able)36 b(components.)72 b(Speci\014cally)-6 b(,)39
b(the)d(Open)g(MPI)e Fi(coll)h Fn(frame)n(w)o(ork)h(queries)i(each)598
4676 y(a)n(v)n(ailable)g Fi(coll)d Fn(component)j(to)e(determine)h(if)f
(it)f(is)h(a)n(v)n(ailable)i(to)d(be)h(used)g(with)g(the)598
4784 y(ne)n(wly-created)22 b(communicator)-5 b(.)35 b(The)19
b(queried)j(component)f(analyzes)h(f)o(actors)g(such)e(as)598
4892 y(the)i(current)h(run-time)f(en)l(vironment)j(and)d(topology)i(of)
d(the)h(processes)i(in)d(the)h(commu-)598 5000 y(nicator)-5
b(.)43 b(If)26 b(the)h(component)h(determines)h(that)e(its)f
(algorithms)j(are)d(a)g(good)h(match)g(for)598 5108 y(the)c(tar)n(get)i
(communicator)l(,)g(it)e(returns)i(priority)g(v)n(alue)f(\(from)f(0)g
(to)g(100\))g(intended)j(as)d(a)598 5215 y(relati)n(v)o(e)e(indicator)h
(of)e(the)g(component')-5 b(s)22 b(e)o(xpected)g(performance.)34
b(The)20 b(priority)h(v)n(alue)p eop end
%%Page: 10 10
TeXDict begin 10 9 bop 548 550 a Fu(10)548 743 y Fn(is)20
b(relati)n(v)o(e)h(and)f(changable)i(at)e(run-time.)33
b(Hence,)21 b(components)h(typically)h(pro)o(vide)e(de-)548
851 y(f)o(ault)e(priority)i(v)n(alues)f(that)f(is)f(a)g(guesstimate)k
(\(e.g.,)d(MagPIe-based)h(algorithms)h(across)548 959
y(W)-11 b(ANs)24 b(should)k(return)f(a)e(high)i(priority)g(\226)f(it)f
(doesn')n(t)j(matter)e(what)g(the)g(priority)i(is,)e(as)548
1066 y(long)h(as)g(it)g(is)f(higher)i(than)g(the)f(rest\).)43
b(Users)27 b(can)g(change)h(def)o(ault)h(priorities)g(to)e(force)548
1174 y(selection)h(of)d(speci\014c)h(components)i(based)f(on)e(their)h
(en)l(vironment.)42 b(The)25 b(component)548 1282 y(returning)j(the)f
(highest)h(priority)g(is)d Ff(selected)p Fn(;)30 b(all)c(MPI)f
(collecti)n(v)o(e)j(functions)h(in)l(v)n(ok)o(ed)548
1390 y(on)24 b(that)g(communicator)i(will)d(use)h(the)f(selected)j
(module.)548 1598 y Fg(Initialization.)115 b Fn(Once)27
b(a)g Fi(coll)g Fn(module)h(is)f(selected)i(for)f(a)e(gi)n(v)o(en)i
(communicator)l(,)j(it)548 1706 y(is)d Ff(initialized)p
Fn(.)49 b(Speci\014cally)-6 b(,)31 b(the)d(component')-5
b(s)31 b(initialization)h(function)e(is)e(in)l(v)n(ok)o(ed,)548
1814 y(passing)33 b(the)e(tar)n(get)h(communicator)h(as)e(an)g(ar)n
(gument.)57 b(The)31 b(initialization)j(function)548
1922 y(performs)h(an)o(y)g(one-time)g(setup)g(required)i(by)d(the)g
(module,)k(and)c(returns)i(a)e(module)548 2029 y(that)25
b(contains)h(an)o(y)e(local)i(state)f(required)h(to)e(perform)h
(collecti)n(v)o(es)i(on)d(the)h(tar)n(get)g(com-)548
2137 y(municator)-5 b(.)56 b(By)30 b(de\014nition,)k(a)c(communicator')
-5 b(s)33 b(member)e(processes)i(and)e(ordering)548 2245
y(are)f(static,)j(allo)n(wing)e(a)f(module')-5 b(s)32
b(initialization)i(routine)e(to)e(pre-compute)j(an)o(y)d(data)548
2353 y(structures)j(that)e(will)f(later)i(be)e(used)i(during)g
(collecti)n(v)o(e)g(routines.)56 b(This)31 b(design)h(em-)548
2461 y(phasizes)d(the)f(potential)h(run-time)g(optimizations)h(that)e
(can)g(be)f(obtained)i(by)e(shifting)548 2569 y(as)g(much)h(o)o(v)o
(erhead)i(calculations)h(and)d(coordination)j(to)d(the)g(one-time)h
(initialization)548 2677 y(function)23 b(as)d(possible.)35
b(This)20 b(can)h(reduce)h(the)f(amount)g(of)g(computational)i(o)o(v)o
(erhead)g(in)548 2785 y(the)h(run-time)h(of)e(collecti)n(v)o(e)j
(routines.)648 2893 y(The)d(module)h(is)g(associated)j(with)c(the)h
(tar)n(get)h(communicator)h(by)e(caching)i(its)e(local)548
3001 y(state)c(\(such)g(as)g(the)f(pre-computation)24
b(results\))d(on)e(the)h(communicator)h(itself.)33 b(All)19
b(sub-)548 3109 y(sequent)f(phases)h(in)d(the)h(module')-5
b(s)18 b(life)f(c)o(ycle)g(are)g(in)l(v)n(ok)o(ed)j(relati)n(v)o(e)d
(to)g(a)f(communicator)548 3217 y(for)f(which)g(it)g(w)o(as)g
(selected;)23 b(the)15 b(communicator)g(is)g(pass)q(ed)g(a)q(s)g(an)h
(ar)o(gu)q(ment)f(t)q(o)g(al)q(l)g(in)m(v)o(o-)548 3325
y(cation)25 b(functions.)36 b(This)23 b(allo)n(ws)g(the)h(module)g(to)g
(retrie)n(v)o(e)g(its)g(communicator)n(-speci\014c)548
3433 y(pre-computation)k(data)c(when)f(a)g(collecti)n(v)o(e)j(function)
g(is)d(in)l(v)n(ok)o(ed.)648 3540 y(Once)32 b(a)g(component)i(has)f
(been)g(initialized,)k(it)32 b(returns)i(the)f(module)g(\226)f
(including)548 3648 y(a)h(list)h(of)f(function)i(pointers)h(for)d(its)h
(algorithms)h(\226)e(which)h(is)f(then)h(assigned)i(to)d(the)548
3756 y(communicator)-5 b(.)35 b(These)21 b(functions)i(are)e(later)g
(in)l(v)n(ok)o(ed)i(by)e(the)g Fi(coll)f Fn(frame)n(w)o(ork)i(during)
548 3864 y(the)i(\223normal)h(usage\224)h(phase)f(in)f(the)g(module')-5
b(s)26 b(life)e(c)o(ycle)h(whene)n(v)o(er)f(a)g(top-le)n(v)o(el)i(MPI)
548 3972 y(collecti)n(v)o(e)e(function)g(is)e(in)l(v)n(ok)o(ed.)36
b(The)21 b(module)i(is)f(then)h(ready)g(to)f(be)h(checkpointed)j(or)548
4080 y(used)e(for)g(collecti)n(v)o(e)i(operations.)548
4288 y Fg(Checkpoint)15 b(/)h(Restart.)101 b Fn(Open)17
b(MPI)e(includes)20 b(the)d(capability)j(for)d(parallel)h(MPI)e(ap-)548
4396 y(plications)22 b(to)d(be)h(transparently)j(checkpointed)g(and)d
(restarted.)34 b(In)19 b(order)h(for)g(a)f(parallel)548
4504 y(MPI)28 b(application)k(to)c(be)h(checkpointed,)34
b(all)29 b(its)g(modules)h(must)f(include)h(checkpoint)548
4611 y(/)g(restart)i(functionality)-6 b(.)59 b(Much)31
b(of)g(this)g(w)o(ork)g(is)g(usually)h(the)g(responsibility)j(of)30
b(the)548 4719 y(point-to-point)e(modules:)36 b(the)o(y)24
b(must)g(ensure)i(that)e(\223in)h(\010ight\224)f(messages)i(will)d(not)
h(be)548 4827 y(lost)30 b(upon)g(restart.)51 b(This)29
b(is)g(typically)i(ef)n(fected)g(either)f(by)g(draining)h(the)e(netw)o
(ork)i(or)548 4935 y(utilizing)26 b(ackno)n(wledgment)g(/)d
(retransmission)k(schemes.)648 5043 y Fi(coll)14 b Fn(modules)g(that)g
(are)g(layere)q(d)g(on)h(to)q(p)f(o)q(f)g(MPI)g(poi)q(nt-)q(to-)q(po)q
(int)h(fun)q(cti)q(on)q(ali)q(ty)f(t)q(her)q(e-)548 5151
y(fore)19 b(require)i(no)e(additional)j(w)o(ork)d(to)g(support)i
(checkpoint)h(/)c(restart;)23 b(all)c(the)g(necessary)p
eop end
%%Page: 11 11
TeXDict begin 11 10 bop 598 550 a Fk(The)20 b(Component)f(Ar)m(c)o
(hitectur)m(e)g(of)h(Open)g(MPI)1337 b Fu(11)598 748
y Fn(w)o(ork)31 b(is)g(already)i(performed)g(by)e(the)g(point-to-point)
36 b(modules.)57 b Fi(coll)30 b Fn(modules)j(that)598
856 y(use)20 b(their)h(o)n(wn)f(communication)j(channels,)g(ho)n(we)n
(v)o(er)l(,)e(will)f(typically)i(need)f(to)f(include)598
964 y(additional)37 b(code)f(to)f(support)h(checkpoint)i(/)c(restart)i
(functionality)-6 b(.)71 b(Such)35 b(modules)598 1072
y(can)28 b(pro)o(vide)h(hook)g(functions)h(that)e(the)g(Open)g(MPI)e
(frame)n(w)o(ork)j(will)e(in)l(v)n(ok)o(e)j(during)598
1179 y(checkpoints)e(and)e(restarts)g(to)f(perform)h(an)o(y)f(required)
i(cleanup)g(and)f(re-initialization,)598 1287 y(respecti)n(v)o(ely)-6
b(.)697 1395 y(It)35 b(is)g(not)h(an)f(error)h(if)f(a)g(module)h(does)g
(not)g(include)h(the)e(functionality)k(required)598 1503
y(for)27 b(checkpointing)j(and)d(restarting)i(itself;)h(support)e(for)f
(checkpoint/restart)32 b(in)27 b(a)f Fi(coll)598 1611
y Fn(module)35 b(is)f(optional.)69 b(Currently)-6 b(,)38
b(the)d(determiniation)j(of)c(whether)i(a)e(process)i(can)598
1719 y(checkpoint)25 b(occurs)f(during)g Fi(MPI)p 1703
1719 23 4 v 27 w(INIT)p Fn(:)d(a)h(process)i(is)e(checkpointable)27
b(only)d(if)e(all)g(the)598 1827 y(components)j(that)e(may)f(be)g(used)
h(in)f(the)h(process)h(support)g(checkpointing)j(\(re)o(gardless)598
1935 y(of)c(whether)i(the)o(y)f(are)f(selected\).)598
2143 y Fg(Normal)33 b(Usage.)137 b Fn(After)35 b(a)g
Fi(coll)f Fn(module)i(has)g(been)g(initialized)i(with)c(a)h(commu-)598
2250 y(nicator)l(,)k(that)d(module')-5 b(s)36 b(collecti)n(v)o(e)h
(routines)g(will)e(be)g(in)l(v)n(ok)o(ed)j(whene)n(v)o(er)e(an)e(MPI)
598 2358 y(collecti)n(v)o(e)23 b(function)f(is)f(in)l(v)n(ok)o(ed)j(on)
c(the)h(communicator)-5 b(.)35 b(Note)21 b(that)g(since)h(the)f(type)g
(of)598 2466 y(communicator)j(is)e(kno)n(wn)h(at)f(selection)i(and)f
(initialization)j(time)c(\(i.e.,)g(intra-)h(or)f(inter)n(-)598
2574 y(communicator\),)i(it)e(is)g(the)g(module')-5 b(s)24
b(responsibility)i(to)c(set)g(itself)h(up)g(so)f(that)g(intra-)h(or)598
2682 y(intercommunicator)k(algorithms)f(are)e(in)l(v)n(ok)o(ed)i(as)d
(appropriate.)697 2790 y(F)o(or)g(e)o(xample,)h(when)f(the)h
Fj(MPI)p 1700 2790 29 4 v 33 w(Bcast)d Fn(C)i(function)i(is)e(in)l(v)n
(ok)o(ed)j(on)e Fi(MPI)p 3070 2790 23 4 v 27 w(COMM)p
3386 2790 V 26 w(-)598 2898 y(W)n(ORLD)p Fn(,)c(it)i(checks)i(all)e(of)
g(the)h(parameters)h(that)f(are)g(passed)h(into)f(it.)32
b(It)23 b(then)g(in)l(v)n(ok)o(es)598 3006 y(the)i(the)g(module')-5
b(s)27 b(broadcast)h(function)f(pointer)-5 b(.)39 b(The)25
b(module')-5 b(s)27 b(broadcast)g(function)598 3114 y(pointer)h(can)e
(either)i(be)e(speci\014cally)i(for)f(intracommunicators)j(or)c
(dispatch)j(to)d(an)g(in-)598 3222 y(tracommunicator)e(algorithm)e
(when)f(it)f(detects)i(the)f(type)g(of)g Fi(MPI)p 2741
3222 V 27 w(COMM)p 3057 3222 V 26 w(W)n(ORLD)p Fn(.)598
3330 y(This)32 b(model)h(allo)n(ws)f(for)h(a)e(natural)j(separation)h
(of)e(algorithms)h(and)f(code)g(since)g(the)598 3438
y(algorithms)g(used)f(for)f(intracommunicators)36 b(are,)d(by)e
(de\014nition,)j(dif)n(ferent)f(than)f(the)598 3546 y(algorithms)25
b(used)g(for)e(intercommunicators.)598 3753 y Fg(Finalization.)101
b Fn(The)18 b(\014nal)g(phase)h(in)f(a)f Fi(coll)h Fn(module')-5
b(s)19 b(life)g(c)o(ycle)f(on)g(a)g(communicator)598
3861 y(occurs)i(when)f(the)g(communicator)j(is)d(destro)o(yed.)34
b(The)19 b(module')-5 b(s)20 b(\014nalization)h(method)598
3969 y(is)26 b(responsible)j(for)e(cleaning)h(up)e(all)h(resources)h
(associated)h(with)d(the)h(communicator)598 4077 y(that)d(is)f(being)i
(destro)o(yed.)598 4293 y Fo(3.4)180 b(Component)26 b(and)h(Module)g
(Interfaces)697 4451 y Fn(The)k Fi(coll)g Fn(component)j(interf)o(ace)g
(is)d(relati)n(v)o(ely)i(small;)j(it)31 b(contains)j(data)e(required)
598 4558 y(for)37 b(all)h(Open)f(MPI)g(MCA)e(modules)k(such)f(as)f
(references)k(to)c(the)h(frame)n(w)o(ork)g(that)598 4666
y(the)33 b(component)h(belongs)h(to,)f(the)f(name)g(and)g(v)o(ersion)h
(number)f(of)g(the)f(component,)598 4774 y(and)24 b(once-per)n
(-process)30 b(initialization)d(\(\223open\224\))g(and)d
(\014nalization)j(\(\223close\224\))f(actions.)598 4882
y(Finally)-6 b(,)24 b(tw)o(o)f(actions)i(are)f(de\014ned)g
(speci\014cally)i(for)e Fi(coll)f Fn(components:)p 713
5100 34 34 v 825 5108 a(One-time)h(initialization.)37
b(This)24 b(method)g(is)g(in)l(v)n(ok)o(ed)i(during)f
Fi(MPI)p 3006 5108 23 4 v 27 w(INIT)d Fn(to)i(ask)825
5215 y(certain)19 b(threading)h(characteristics)h(about)e(the)f
(component,)i(and)e(is)f(mainly)h(used)p eop end
%%Page: 12 12
TeXDict begin 12 11 bop 548 550 a Fu(12)p 520 689 4 29
v 520 664 29 4 v 548 664 2840 4 v 3388 664 29 4 v 3414
689 4 29 v 520 797 4 108 v 3412 797 V 548 765 a Fn(coll)p
687 765 22 4 v 27 w(component)p 1115 765 V 28 w(interf)o(ace)26
b Fh(f)p 520 905 4 108 v 3412 905 V 612 873 a Ff(//)d(Metadata)i
(identifying)i(what)c(ver)o(sion)j(of)d(the)h(MCA)e(this)i(component)p
520 1013 V 3412 1013 V 612 981 a(//)f(adher)m(es)i(to)q(,)d(what)i(fr)o
(ame)o(work)g(and)g(ver)o(sion)h(this)f(component)i(belongs)g(to,)p
520 1121 V 3412 1121 V 612 1088 a(//)d(and)h(this)g(component)s('s)f
(name)h(and)g(ver)o(sion)s(.)p 520 1229 V 3412 1229 V
520 1337 V 3412 1337 V 612 1304 a Fn(v)o(ersion)h(mca)p
1056 1304 22 4 v 26 w(v)o(ersion)p 1346 1304 V 27 w(number)r(;)p
520 1445 4 108 v 3412 1445 V 612 1412 a(string)f(mca)p
996 1412 22 4 v 26 w(frame)n(w)o(ork)p 1416 1412 V 28
w(name;)p 520 1553 4 108 v 3412 1553 V 612 1520 a(v)o(ersion)h(mca)p
1056 1520 22 4 v 26 w(frame)n(w)o(ork)p 1476 1520 V 27
w(v)o(ersion)p 1767 1520 V 27 w(number)r(;)p 520 1660
4 108 v 3412 1660 V 612 1628 a(string)f(component)p 1246
1628 22 4 v 29 w(name)q(;)p 520 1768 4 108 v 3412 1768
V 612 1736 a(v)o(ersion)h(component)p 1306 1736 22 4
v 28 w(v)o(ersion)p 1598 1736 V 28 w(number)r(;)p 520
1876 4 108 v 3412 1876 V 520 1984 V 3412 1984 V 612 1952
a Ff(//)e(Actions)h(de\014ned)i(for)d(all)h(MCA)e(components)p
520 2092 V 3412 2092 V 520 2200 V 3412 2200 V 612 2168
a Fe(int)g Fn(component)p 1145 2168 22 4 v 29 w(open)p
1349 2168 V 27 w(function)s(\()p Fe(v)o(oid)q Fn(\);)p
520 2308 4 108 v 3412 2308 V 612 2276 a Fe(int)g Fn(component)p
1145 2276 22 4 v 29 w(close)p 1359 2276 V 27 w(function)s(\()q
Fe(v)o(oid)p Fn(\);)p 520 2416 4 108 v 3412 2416 V 520
2524 V 3412 2524 V 612 2492 a Ff(//)h(Actions)h(de\014ned)i(on)d(coll)h
(components)t(.)p 520 2632 V 3412 2632 V 520 2740 V 3412
2740 V 612 2707 a Fe(int)e Fn(component)p 1145 2707 22
4 v 29 w(init)p 1294 2707 V 27 w(query)r(\(bool)i(&allo)n(w)p
2012 2707 V 26 w(user)p 2188 2707 V 27 w(threads)s(,)p
520 2848 4 108 v 3412 2848 V 1567 2815 a(bool)g(&ha)n(v)o(e)p
1993 2815 22 4 v 27 w(hidden)p 2265 2815 V 28 w(threads)s(\);)p
520 2956 4 108 v 3412 2956 V 612 2923 a(coll)p 751 2923
22 4 v 26 w(module)h(component)p 1474 2923 V 28 w(comm)p
1729 2923 V 26 w(query)r(\(MPI)p 2154 2923 V 26 w(Comm)d(comm,)h
Fe(int)f Fn(&priority)s(\);)p 520 3064 4 108 v 3412 3064
V 548 3031 a Fh(g)p 520 3092 4 29 v 521 3092 29 4 v 548
3092 2840 4 v 3388 3092 29 4 v 3414 3092 4 29 v 1115
3304 a Ft(F)m(igur)m(e)d(3.)81 b Fq(Pseudocode)21 b(for)d(the)h
Fp(coll)f Fq(component)j(interf)o(ace.)775 3552 y Fn(to)g(determine)h
(the)f(\014nal)f(threading)j(le)n(v)o(el)e(that)g(will)g(be)f(used)i
(during)g(the)f(process)775 3660 y(\()p Fi(MPI)p 972
3660 23 4 v 27 w(THREAD)p 1375 3660 V 25 w(SINGLE)h Fn(through)j
Fi(MPI)p 2224 3660 V 27 w(THREAD)p 2627 3660 V 25 w(MUL)-10
b(TIPLE)p Fn(\).)p 663 3838 34 34 v 775 3846 a(Per)n(-communicator)34
b(query)-6 b(.)58 b(The)31 b Fi(coll)g Fn(frame)n(w)o(ork)h(in)l(v)n
(ok)o(es)h(this)f(method)g(on)775 3954 y(each)24 b(component,)i(ef)n
(fecti)n(v)o(ely)f(asking)g(the)f(component)h(if)e(it)g(w)o(ants)h(to)f
(be)h(con-)775 4061 y(sidered)h(for)f(selection.)36 b(If)23
b(it)g(does,)h(the)g(component)i(will)d(return)i(a)e(module.)648
4261 y(Pseudocode)j(for)d(the)h(component)i(interf)o(ace)g(is)d(sho)n
(wn)h(in)f(Figure)h(3.)648 4369 y(The)e(module)i(interf)o(ace)i(is)d
(di)n(vided)h(into)g(se)n(v)o(eral)g(cate)o(gories)i(of)d(actions)i
(\(sho)n(wn)f(in)548 4477 y(Figure)g(4\):)p 663 4668
V 775 4676 a(Initialization)34 b(and)d(\014nalization.)55
b(If)30 b(a)g(module)h(is)f(selected,)j(its)e(initialization)775
4784 y(method)g(is)f(in)l(v)n(ok)o(ed,)k(allo)n(wing)d(the)f(module)h
(to)f(complete)h(an)o(y)f(setup)h(or)f(pre-)775 4892
y(compute)37 b(results)h(that)e(are)g(utilized)h(during)h(the)e
(module')-5 b(s)37 b(\223normal)g(usage\224)775 5000
y(life)28 b(c)o(ycle)h(phase.)47 b(All)27 b(modules)i(ha)n(v)o(e)f
(their)h(\014nalize)f(method)h(in)l(v)n(ok)o(ed)h(when)775
5108 y(the)o(y)f(are)g(no)g(longer)h(used)f(\(which)g(may)g(be)f
(immediately)j(if)d(a)g(module)i(is)e(not)775 5215 y(selected\).)p
eop end
%%Page: 13 13
TeXDict begin 13 12 bop 598 550 a Fk(The)20 b(Component)f(Ar)m(c)o
(hitectur)m(e)g(of)h(Open)g(MPI)1337 b Fu(13)p 570 689
4 29 v 570 664 29 4 v 598 664 2840 4 v 3438 664 29 4
v 3464 689 4 29 v 570 797 4 108 v 3462 797 V 598 765
a Fn(coll)p 737 765 22 4 v 27 w(module)p 1035 765 V 27
w(interf)o(ace)26 b Fh(f)p 570 905 4 108 v 3462 905 V
661 873 a Ff(//)e(Initialization)j(and)d(\014nalization)j(of)d(a)f
(module)p 570 1013 V 3462 1013 V 570 1121 V 3462 1121
V 661 1088 a Fe(int)g Fn(init)r(\(MPI)p 1108 1088 22
4 v 25 w(Comm)f(comm\))p 570 1229 4 108 v 3462 1229 V
661 1196 a Fe(int)h Fn(\014nalize)r(\(MPI)p 1254 1196
22 4 v 25 w(Comm)g(comm\))p 570 1337 4 108 v 3462 1337
V 570 1445 V 3462 1445 V 661 1412 a Ff(//)h(Chec)n(kpoint)s(/r)m
(estart)h(functionality)p 570 1553 V 3462 1553 V 570
1660 V 3462 1660 V 661 1628 a Fe(int)e Fn(cr)p 864 1628
22 4 v 26 w(interrupt)s(\()q Fe(v)o(oid)q Fn(\))p 570
1768 4 108 v 3462 1768 V 661 1736 a Fe(int)g Fn(cr)p
864 1736 22 4 v 26 w(checkpoint)t(\()q(MPI)p 1482 1736
V 25 w(Comm)f(comm\))p 570 1876 4 108 v 3462 1876 V 661
1844 a Fe(int)h Fn(cr)p 864 1844 22 4 v 26 w(continue)s(\()q(MPI)p
1396 1844 V 25 w(Comm)f(comm\))p 570 1984 4 108 v 3462
1984 V 661 1952 a Fe(int)h Fn(cr)p 864 1952 22 4 v 26
w(restart)s(\(MPI)p 1310 1952 V 25 w(Comm)f(comm\))p
570 2092 4 108 v 3462 2092 V 570 2200 V 3462 2200 V 661
2168 a Ff(//)i(Collective)h(algorithm)g(methods)p 570
2308 V 3462 2308 V 570 2416 V 3462 2416 V 661 2384 a
Fe(int)e Fn(allgather)s(\(b)n(uf)n(fer)i(sb)n(uf)r(,)d
Fe(int)h Fn(scount)r(,)g(MPI)p 2157 2384 22 4 v 25 w(Datatype)i(sdtype)
r(,)p 570 2524 4 108 v 3462 2524 V 1107 2492 a(b)n(uf)n(fer)g(rb)n(uf)r
(,)d Fe(int)h Fn(rcount)r(,)g(MPI)p 2116 2492 22 4 v
25 w(Datatype)i(rdtype)r(,)p 570 2632 4 108 v 3462 2632
V 1107 2599 a(MPI)p 1273 2599 22 4 v 25 w(Comm)e(comm\))p
570 2740 4 108 v 3462 2740 V 661 2707 a Fe(int)g Fn(allgatherv)s(\()q
(b)n(uf)n(fer)h(sb)n(uf)r(,)f Fe(int)f Fn(scount)s(,)g(MPI)p
2202 2707 22 4 v 25 w(Datatype)j(sdtype)s(,)p 570 2848
4 108 v 3462 2848 V 1139 2815 a(b)n(uf)n(fer)g(rb)n(uf)r(,)d
Fe(int)h Fn(rcounts)r([],)g Fe(int)g Fn(disps)r([],)g(MPI)p
2665 2815 22 4 v 25 w(Datatype)i(rdtype)r(,)p 570 2956
4 108 v 3462 2956 V 1139 2923 a(MPI)p 1305 2923 22 4
v 25 w(Comm)e(comm\);)p 570 3064 4 108 v 3462 3064 V
661 3031 a Ff(//)h(...)o(and)g(the)g(r)m(est)g(of)f(the)h(MPI)e
(collective)k(oper)o(ations)p 570 3171 V 3462 3171 V
598 3139 a Fh(g)p 570 3200 4 29 v 571 3200 29 4 v 598
3200 2840 4 v 3438 3200 29 4 v 3464 3200 4 29 v 598 3396
a Ft(F)m(igur)m(e)d(4.)95 b Fq(Pseudocode)25 b(for)e(the)g
Fp(coll)g Fq(module)h(interf)o(ace.)40 b(Module-speci\014c)25
b(state)e(is)g(cached)i(on)f(the)598 3487 y(communicator)c(and)g(is)e
(therefore)i(passed)f(in)g(to)g(e)n(v)o(ery)h(module)g(method.)p
713 3779 34 34 v 825 3787 a Fn(Checkpoint)43 b(/)e(restart)h
(functionality)-6 b(.)90 b(As)40 b(described)k(in)d([18],)46
b(the)41 b(check-)825 3895 y(point/restart)e(functionality)h(in)c
(LAM/MPI)e(\(and)i(carried)i(forw)o(ard)e(to)g(Open)825
4002 y(MPI\))21 b(consists)j(of)e(three)g(distinct)i(phases:)35
b(checkpoint,)25 b(continue,)f(and)e(restart.)825 4110
y(Methods)e(are)g(included)h(to)e(support)i(each)e(of)g(these)h
(actions;)j(their)c(functionality)825 4218 y(is)k(described)j(further)g
(in)d([18].)p 713 4499 V 825 4507 a(MPI)14 b(collecti)n(v)o(e)g
(functions)q(.)35 b(Modules)14 b(contain)g(a)g(me)q(tho)q(d)h(for)g(ea)
q(ch)g(MPI)f(co)q(llec)q(-)825 4615 y(ti)n(v)o(e)25 b(function)i
(\(e.g.,)d Fi(MPI)p 1684 4615 23 4 v 27 w(BCAST)p Fn(,)e
Fi(MPI)p 2223 4615 V 27 w(BARRIER)p Fn(,)f(etc.\).)37
b(Their)25 b(function)825 4723 y(signatures)34 b(are)d(quite)h(similar)
g(to)f(their)h(MPI)d(counterparts,)36 b(b)n(ut)c(some)f(of)g(the)825
4831 y(functions)g(and)d(ar)n(guments)i(ha)n(v)o(e)f(been)g
(streamlined)h(by)e(the)g Fi(coll)g Fn(frame)n(w)o(ork.)825
4939 y(F)o(or)14 b(e)o(xample,)j(some)d(components)g(can)g(trea)q(t)g
(a)h(zer)q(o-b)q(yte)g(br)q(oad)q(ca)q(st)f(a)q(s)g(a)g(n)q(o-o)q(p,)
825 5047 y(and)24 b(the)g Fi(coll)f Fn(frame)n(w)o(ork)h(will)f(not)h
(in)l(v)n(ok)o(e)i(the)e(module)g(in)g(such)g(situations.)p
eop end
%%Page: 14 14
TeXDict begin 14 13 bop 548 550 a Fu(14)548 755 y Fo(4.)180
b(Example)27 b(Components)648 913 y Fi(basic)18 b Fn(and)h
Fi(smp)f Fn(are)h(tw)o(o)f(of)h(the)g Fi(coll)f Fn(components)j
(included)g(in)e(Open)g(MPI.)e(These)548 1021 y(components)38
b(serv)o(e)f(both)f(as)g(reference)i(algorithms)g(as)d(well)h(as)f(e)o
(xamples)i(of)f(tw)o(o)548 1129 y(dif)n(ferent)25 b(implementation)i
(models.)548 1345 y Fo(4.1)180 b(The)27 b Fd(basic)g
Fo(Component)648 1503 y Fn(The)32 b Fi(basic)f Fn(component)k(contains)
f(a)e(full)h(set)g(of)f(intra-)i(and)e(intercommunicator)548
1611 y(collecti)n(v)o(es.)h(The)14 b(intracommunicator)g(algori)q(thms)
g(a)q(re)g(q)q(uit)q(e)g(matu)q(re;)23 b(the)o(y)14 b(ha)n(v)o(e)g
(been)548 1718 y(in)j(LAM/MPI)e(production)20 b(code)e(for)f(years.)32
b(The)17 b(intercommunicator)k(algorithms)e(are)548 1826
y(ne)n(w)-6 b(,)23 b(b)n(ut)h(are)f(essentially)k(v)n(ariations)f(of)d
(their)i(intracommunicator)i(counterparts.)648 1934 y(Prior)18
b(generations)k(of)d(LAM/MPI\227including)h(the)f(collecti)n(v)o(e)h
(algorithms)h(that)e(the)548 2042 y Fi(basic)14 b Fn(component)g(is)g
(foun)q(de)q(d)h(on)q(\227were)g(bas)q(ed)g(o)q(n)g(a)f(mo)q(nol)q(ith)
q(ic)h(arc)q(hi)q(tec)q(tur)q(e.)36 b(This)548 2150 y(made)14
b(it)g(a)g(natural)g(choice)g(for)h(not)f(o)q(nly)h(in\010ue)q(nc)q
(ing)g(the)g(des)q(ign)g(of)f(t)q(he)g Fi(c)q(oll)g Fn(compo)q(ne)q(nt)
548 2258 y(interf)o(ace,)20 b(b)n(ut)c(also)h(as)f(a)g(\014rst)g
Fi(coll)g Fn(component)i(implementation.)34 b(The)16
b(successful)j(port)548 2366 y(of)g(the)g(le)o(gac)o(y)g(LAM/MPI)e
(collecti)n(v)o(e)k(algorithms)g(to)d(the)i(ne)n(w)e(frame)n(w)o(ork)h
(\(originally)548 2474 y(in)25 b(LAM/MPI)e(7.x,)i(and)h(later)g(to)f
(Open)g(MPI\))f(serv)o(ed)j(as)e(a)f(v)n(alidation)k(of)d(the)h(o)o(v)o
(erall)548 2582 y Fi(coll)d Fn(design.)648 2690 y(Although)17
b(relati)n(v)o(ely)h(nai)n(v)o(e,)g(the)f Fi(basic)e
Fn(routines)k(can)d(be)g(used)h(on)g(an)o(y)f(communica-)548
2798 y(tor)d(\(re)o(gardless)g(of)g(u)q(nde)q(rly)q(in)q(g)g(t)q(op)q
(olo)q(gy)q(\),)21 b(switching)13 b(between)g Fc(O)s
Fb(\()p Fc(n)p Fb(\))g Fn(an)q(d)h Fc(O)s Fb(\()p Fc(l)r(og)t
Fb(\()p Fc(n)p Fb(\)\))548 2906 y Fn(algorithms)25 b(depending)g(on)e
(the)g(number)h(of)e(processes)k(in)c(the)h(communicator)-5
b(.)36 b(All)22 b(of)548 3014 y(the)27 b Fi(basic)f Fn(algorithms)j
(essentially)h(use)d(MPI)f(point-to-point)31 b(functions)f(for)d(mo)o
(ving)548 3122 y(data)e(between)h(MPI)e(processes.)40
b(F)o(or)24 b(e)o(xample,)i(in)f Fi(MPI)p 2409 3122 23
4 v 26 w(BCAST)p Fn(')-5 b(s)23 b(logarithmic)k(im-)548
3229 y(plementation,)36 b(a)30 b(traditional)k(binomial)f(tree)e(is)g
(used:)50 b(parent)32 b(processes)i(send)e(data)548 3337
y(with)23 b Fi(MPI)p 899 3337 V 27 w(SEND)e Fn(while)j(child)h
(processes)h(block)f(in)e Fi(MPI)p 2482 3337 V 27 w(RECV)p
Fn(.)548 3553 y Fo(4.2)180 b(The)27 b Fd(smp)g Fo(Component)648
3711 y Fn(The)21 b Fi(smp)g Fn(component)k(w)o(as)c(also)i
(instrumental)i(in)d(shaping)i(the)f(design)g(of)g(the)f
Fi(coll)548 3819 y Fn(frame)n(w)o(ork.)32 b(Based)16
b(on)h(the)f(algorithms)j(from)d(the)g(MagPIe)h(project)h([13\22614],)h
(the)e Fi(smp)548 3927 y Fn(algorithms)23 b(attempt)f(to)g(maximize)g
(bandwidth)h(conserv)n(ation)i(across)d(multiple)h(le)n(v)o(els)548
4035 y(of)28 b(netw)o(ork)h(latenc)o(y)-6 b(.)47 b(MagPIe)28
b(focused)i(on)e(uniprocessors)j(communicating)g(across)548
4143 y(a)d(W)-11 b(AN;)26 b(the)j Fi(smp)e Fn(component)j(is)e
(oriented)i(to)e(SMPs)f(communicating)k(on)d(a)g(LAN.)548
4251 y(The)22 b(end)h(ef)n(fect)g(is)g(the)g(same:)33
b(tw)o(o)22 b(le)n(v)o(els)h(of)g(netw)o(ork)h(latenc)o(y)g(that)f(can)
g(be)f(e)o(xploited)548 4359 y(at)j(run-time.)41 b(Se)o(gmenting)27
b(the)f(communicator)i(into)f(groups)g(of)e(local)i(process)g(peers)548
4467 y(and)18 b(electing)h(representati)n(v)o(es)j(from)17
b(each)h(group)h(to)f(communicate)h(with)e(other)i(groups)548
4574 y(pro)o(vides)25 b(a)e(natural)j(se)o(gre)o(gation)f(of)f(local)g
(and)g(global)h(communications.)648 4682 y(Similar)34
b(to)g(the)g Fi(basic)g Fn(component,)k(the)d Fi(smp)e
Fn(component)j(uses)f(point-to-point)548 4790 y(communication)c(to)d
(pass)h(messages.)48 b(Standard)30 b(MPI)c(functions)31
b(are)d(used)h(to)f(create)548 4898 y(sub-communicators)j(and)d
(translate)h(rank)f(identi\014cations)i(between)e(them.)44
b(A)25 b(direct)548 5006 y(implication)36 b(of)d(this)h(model)g(is)f
(that)h(the)g Fi(coll)f Fn(frame)n(w)o(ork)h(must)f(be)h(able)g(to)f
(handle)548 5114 y(recursi)n(v)o(e)d(communicator)h(creation)f(and)f
(destruction.)51 b(During)29 b(the)g(construction)j(of)p
eop end
%%Page: 15 15
TeXDict begin 15 14 bop 598 550 a Fk(The)20 b(Component)f(Ar)m(c)o
(hitectur)m(e)g(of)h(Open)g(MPI)1337 b Fu(15)1261 1974
y
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 1261 1974 a @beginspecial 0 @llx 0 @lly 176 @urx 155
@ury 1760 @rwi @setspecial
%%BeginDocument: smp-bcast.eps
%!PS-Adobe-2.0 EPSF-2.0
%%Title: smp-bcast.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Thu Sep  9 04:22:02 2004
%%For: jsquyres@queeg.home.squyres.com (Jeff Squyres)
%%BoundingBox: 0 0 176 155
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 155 moveto 0 0 lineto 176 0 lineto 176 155 lineto closepath clip newpath
-227.5 366.5 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% this is the pattern fill program from the Second edition Reference Manual
% with changes to call the above pattern fill
% left30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<c000c000300030000c000c000300030000c000c000300030
	000c000c00030003c000c000300030000c000c0003000300
	00c000c000300030000c000c00030003>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P1 exch def

% crosshatch30
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 16 true [ 32 0 0 -16 0 16 ]
	{<033003300c0c0c0c30033003c000c000300330030c0c0c0c
	0330033000c000c0033003300c0c0c0c30033003c000c000
	300330030c0c0c0c0330033000c000c0>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P3 exch def

% vertical right-shingles
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 48 48 true [ 48 0 0 -48 0 48 ]
	{<000100010001000100010001000100010001000100010001
	000100010001000100010001000100010001000100010001
	000100010007000100010019000100010061000100010181
	000100010601000100011801000100016001000100018001
	000100010001000100010001000100010001000100010001
	000100010001000100010001000100010001000100010001
	000100070001000100190001000100610001000101810001
	000106010001000118010001000160010001000180010001
	000100010001000100010001000100010001000100010001
	000100010001000100010001000100010001000100010001
	000700010001001900010001006100010001018100010001
	060100010001180100010001600100010001800100010001>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P15 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06000 0.06000 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 60
% Polyline
7.500 slw
 [60] 0 sd
n 4080 3900 m 3975 3900 3975 5820 105 arcto 4 {pop} repeat
  3975 5925 6420 5925 105 arcto 4 {pop} repeat
  6525 5925 6525 4005 105 arcto 4 {pop} repeat
  6525 3900 4080 3900 105 arcto 4 {pop} repeat
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P15 [24 0 0 -24 265.00 260.00] PATmp PATsp ef gr PATusp gs col-1 s gr  [] 0 sd
% here ends figure;
% 
% here starts figure with depth 50
% Polyline
7.500 slw
 [60] 0 sd
n 4155 4050 m 4050 4050 4050 5670 105 arcto 4 {pop} repeat
  4050 5775 4845 5775 105 arcto 4 {pop} repeat
  4950 5775 4950 4155 105 arcto 4 {pop} repeat
  4950 4050 4155 4050 105 arcto 4 {pop} repeat
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 270.00 270.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
30.000 slw
n 3825 3750 m 5100 3750 l 5100 6075 l 3825 6075 l
 cp gs col0 s gr 
% Polyline
7.500 slw
 [60] 0 sd
n 5655 4050 m 5550 4050 5550 5670 105 arcto 4 {pop} repeat
  5550 5775 6345 5775 105 arcto 4 {pop} repeat
  6450 5775 6450 4155 105 arcto 4 {pop} repeat
  6450 4050 5655 4050 105 arcto 4 {pop} repeat
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P1 [16 0 0 -8 370.00 270.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% Polyline
30.000 slw
n 5400 3756 m 6681 3756 l 6681 6075 l 5400 6075 l
 cp gs col0 s gr 
/Times-Roman ff 180.00 scf sf
4275 3675 m
gs 1 -1 sc (Node 0) col0 sh gr
/Times-Roman ff 180.00 scf sf
5700 3675 m
gs 1 -1 sc (Node 1) col0 sh gr
% here ends figure;
% 
% here starts figure with depth 45
% Polyline
7.500 slw
 [60] 0 sd
n 4305 4200 m 4200 4200 4200 4695 105 arcto 4 {pop} repeat
  4200 4800 6195 4800 105 arcto 4 {pop} repeat
  6300 4800 6300 4305 105 arcto 4 {pop} repeat
  6300 4200 4305 4200 105 arcto 4 {pop} repeat
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P3 [16 0 0 -8 280.00 280.00] PATmp PATsp ef gr PATusp gs col0 s gr  [] 0 sd
% here ends figure;
% 
% here starts figure with depth 40
% Ellipse
7.500 slw
n 5763 5388 162 162 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 6213 5388 162 162 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 4500 4500 150 150 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 4275 5400 150 150 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 5988 4500 162 162 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 4725 5400 150 150 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% here ends figure;
% 
% here starts figure with depth 35
% Polyline
30.000 slw
gs  clippath
4213 5242 m 4325 5285 l 4385 5125 l 4287 5217 l 4272 5083 l cp
eoclip
n 4500 4650 m
 4275 5250 l gs col0 s gr gr

% arrowhead
n 4272 5083 m 4287 5217 l 4385 5125 l 4272 5083 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
5790 4560 m 5790 4440 l 5545 4440 l 5725 4500 l 5545 4560 l cp
eoclip
n 4725 4500 m
 5775 4500 l gs col0 s gr gr

% arrowhead
n 5545 4560 m 5725 4500 l 5545 4440 l 5545 4560 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
5713 5242 m 5825 5285 l 5885 5125 l 5787 5217 l 5772 5083 l cp
eoclip
n 6000 4650 m
 5775 5250 l gs col0 s gr gr

% arrowhead
n 5772 5083 m 5787 5217 l 5885 5125 l 5772 5083 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
4674 5285 m 4786 5242 l 4727 5083 l 4713 5217 l 4614 5125 l cp
eoclip
n 4500 4650 m
 4725 5250 l gs col0 s gr gr

% arrowhead
n 4614 5125 m 4713 5217 l 4727 5083 l 4614 5125 l  cp gs 0.00 setgray ef gr  col0 s
% Polyline
gs  clippath
6166 5288 m 6278 5245 l 6219 5086 l 6205 5220 l 6106 5128 l cp
eoclip
n 5992 4653 m
 6217 5253 l gs col0 s gr gr

% arrowhead
n 6106 5128 m 6205 5220 l 6219 5086 l 6106 5128 l  cp gs 0.00 setgray ef gr  col0 s
/Times-Roman ff 180.00 scf sf
5968 4533 m
gs 1 -1 sc (3) col0 sh gr
/Times-Roman ff 180.00 scf sf
4477 4542 m
gs 1 -1 sc (0) col0 sh gr
/Times-Roman ff 180.00 scf sf
4245 5446 m
gs 1 -1 sc (1) col0 sh gr
/Times-Roman ff 180.00 scf sf
4695 5446 m
gs 1 -1 sc (2) col0 sh gr
/Times-Roman ff 180.00 scf sf
5733 5424 m
gs 1 -1 sc (4) col0 sh gr
/Times-Roman ff 180.00 scf sf
6193 5420 m
gs 1 -1 sc (5) col0 sh gr
% here ends figure;
$F2psEnd
rs
end
showpage

%%EndDocument
 @endspecial 2728 1974 a
 currentpoint grestore moveto
 2728 1974 a 598 2148 a Ft(F)m(igur)m(e)20
b(5.)87 b Fq(MagPIe)21 b(algorithm)g(for)f(broadcast)i(from)f(process)h
(0.)32 b(Process)21 b(0)f(sends)i(to)e(its)h(peer)g(on)g(the)598
2240 y(remote)k(node)h(\(process)f(3\).)45 b(Each)25
b(then)g(do)g(a)g(local)g(broadcast)h(to)e(the)h(remaining)h(processes)
g(on)f(their)598 2331 y(nodes)20 b(\(processes)g(1)f(and)g(2,)g(and)h
(processes)g(4)f(and)g(5,)g(respecti)n(v)o(ely\).)p 570
2528 4 29 v 570 2503 29 4 v 598 2503 2840 4 v 3438 2503
29 4 v 3464 2528 4 29 v 570 2636 4 108 v 3462 2636 V
598 2603 a Fe(int)k Fn(ssi)p 826 2603 22 4 v 26 w(coll)p
987 2603 V 27 w(smp)p 1165 2603 V 26 w(bcast)r(\(b)n(uf)n(fer)r(,)f
(...,)g(MPI)p 1947 2603 V 25 w(Comm)g(comm)q(\))h Fh(f)p
570 2744 4 108 v 3462 2744 V 661 2711 a Fe(if)h Fn(\(i)p
799 2711 22 4 v 26 w(am)p 936 2711 V 25 w(a)p 1001 2711
V 26 w(representati)n(v)o(e)t(\))f Fh(f)p 570 2851 4
108 v 3462 2851 V 725 2819 a Fn(MPI)p 891 2819 22 4 v
25 w(Bcast)q(\()q(b)n(uf)n(fer)r(,)f(...,)g(rep)p 1641
2819 V 26 w(root)r(,)g(rep)p 1974 2819 V 27 w(comm\);)p
570 2959 4 108 v 3462 2959 V 661 2927 a Fh(g)p 570 3067
V 3462 3067 V 661 3035 a Fn(MPI)p 827 3035 22 4 v 26
w(Bcast)q(\(b)n(uf)n(fer)r(,)g(...,)g(local)p 1637 3035
V 27 w(root)r(,)g(local)p 2031 3035 V 27 w(comm)q(\);)p
570 3175 4 108 v 3462 3175 V 661 3143 a Fe(r)n(etur)o(n)i
Fn(MPI)p 1100 3143 22 4 v 25 w(SUCCESS)m(;)p 570 3283
4 108 v 3462 3283 V 598 3251 a Fh(g)p 570 3311 4 29 v
571 3311 29 4 v 598 3311 2840 4 v 3438 3311 29 4 v 3464
3311 4 29 v 598 3507 a Ft(F)m(igur)m(e)j(6.)104 b Fq(Pseudocode)29
b(broadcast)f(implementation)f(using)h(sub-communicators)h(\(error)e
(handling)598 3599 y(ignored)20 b(for)f(this)f(e)o(xample\).)598
3920 y Fn(a)27 b(communicator)l(,)k(the)c(initialization)32
b(of)27 b(a)g Fi(coll)g Fn(module)h(may)g(cause)g(the)g(creation)h(of)
598 4028 y(another)i(communicator)-5 b(.)54 b(This)30
b(may)-6 b(,)31 b(in)e(turn,)j(trigger)f(the)f(creation)i(of)d(yet)h
(another)598 4136 y(communicator)c(\(and)e(so)f(on\).)697
4244 y(F)o(or)34 b(e)o(xample,)j(in)d(the)h(MagPIe)f(broadcast)i
(algorithm,)j(the)34 b(root)h(broadcasts)i(the)598 4352
y(data)30 b(to)g(the)g(set)g(of)g(representati)n(v)o(es)k(from)c(the)g
(other)h(process)g(groups.)54 b(Each)30 b(repre-)598
4460 y(sentati)n(v)o(e)23 b(\(including)i(the)d(root\))h(then)g
(broadcasts)h(to)e(the)g(members)h(of)e(its)h(local)h(group)598
4568 y(\(see)30 b(Figure)h(5\).)53 b(During)30 b(the)h(initialization)i
(phase)f(of)e(the)g Fi(smp)f Fn(module,)j(the)e(three)598
4676 y(sub-communicators)h(sho)n(wn)c(in)g(Figure)g(5)f(are)h(created:)
42 b(tw)o(o)27 b(containing)i(local-only)598 4784 y(processes,)k(and)d
(one)g(\223bridge\224)h(communicator)h(between)f(processes)h(0)d(and)h
(3.)50 b(This)598 4892 y(allo)n(ws)37 b(the)f(reducing)j(the)e(MagPIe)g
(broadcast)i(algorithm)f(implementation)i(to)c(the)598
5000 y(pseudocode)27 b(sho)n(wn)c(in)h(Figure)g(6.)697
5108 y(Note)14 b(that)g(there)g(are)g(tw)o(o)g(calls)g(to)g
Fi(MPI)p 1933 5108 23 4 v 32 w(BCAST)p Fn(.)g(These)g(broadcasts)g(use)
g(whiche)n(v)o(er)598 5215 y(module)30 b(w)o(as)f(selected)i(when)e
(the)g(sub-communicators)34 b(were)29 b(created.)51 b(Depending)p
eop end
%%Page: 16 16
TeXDict begin 16 15 bop 548 550 a Fu(16)548 743 y Fn(on)38
b(the)g(number)g(of)g(processes)i(and)f(topology)h(in)l(v)n(olv)o(ed,)j
(the)38 b(broadcasts)j(may)c(be)548 851 y(optimized)25
b(according)h(to)e(ho)n(we)n(v)o(er)g(the)g(selected)h
Fi(coll)e Fn(component)j(is)d(implemented.)548 1066 y
Fo(5.)180 b(P)n(erf)m(ormance)648 1224 y Fn(It)15 b(is)g(critical)g
(that)g(the)g Fi(coll)g Fn(frame)n(w)o(ork)g(do)q(es)h(not)g(con)q
(trib)o(u)q(te)f(ad)q(dit)q(ion)q(al)h(o)o(v)o(erh)q(ead)g(to)548
1332 y(collecti)n(v)o(e)25 b(algorithm)f(performance.)36
b(Measuring)25 b(this)e(is)g(straightforw)o(ard:)37 b(compare)548
1440 y(the)17 b(performance)i(of)d(Open)h(MPI')-5 b(s)16
b(collecti)n(v)o(e)i(functions)i(against)d(the)g(prior)h(generation)548
1548 y(of)30 b(LAM/MPI)f(\(speci\014cally)-6 b(,)35 b(v6.5.9\))c(that)g
(both)g(pro)o(vided)i(the)e(algorithms)h(used)g(in)548
1656 y(the)24 b Fi(basic)f Fn(component)i(and)f(w)o(as)g(based)g(on)g
(an)f(inte)o(grated,)j(monolithic)g(model.)648 1764 y(The)g(collecti)n
(v)o(e)j(algorithm)f(implementations)i(used)e(in)e(LAM/MPI)f(6.5,)i
(although)548 1872 y(some)n(what)33 b(nai)n(v)o(e,)i(had)d
(well-understood)37 b(beha)n(vior)d(characteristics.)64
b(Its)33 b(main)f(op-)548 1980 y(timization)d(technique)h(is)d(to)h
(switch)f(between)i Fc(O)s Fb(\()p Fc(n)p Fb(\))d Fn(and)i
Fc(O)s Fb(\()p Fc(l)r(og)s Fb(\()p Fc(n)p Fb(\)\))g Fn(when)g(enough)
548 2088 y(processes)13 b(are)g(in)l(v)o(olved)h(in)g(the)g(co)q(lle)q
(cti)o(v)o(e.)35 b(These)13 b(collecti)n(v)o(e)g(algor)q(ith)q(ms)g
(were)h(po)q(rte)q(d)548 2196 y(to)k(the)g(component)j(architecture)g
(in)d(Open)g(MPI)f(\(the)h Fi(basic)g Fn(component,)j(as)d(described)
548 2303 y(in)23 b Fh(x)p Fn(1.4.1\).)34 b(Measuring)25
b(the)e(performance)j(of)d(the)g(same)g(algorithms)i(in)e(tw)o(o)g(dif)
n(ferent)548 2411 y(architectures)k(allo)n(ws)d(the)g(comparison)i(of)d
(o)o(v)o(erhead)i(between)g(the)f(tw)o(o.)648 2519 y(A)j(pair)i(of)g
(dual-processor)k(2.0Ghz)c(Intel)g(Xeon)g(nodes)h(connected)i(with)c
(Gigabit)548 2627 y(Ethernet)f(and)f(a)f(dedicated)k(switch)d(w)o(as)g
(used)g(for)g(testing.)42 b(Each)25 b(node)i(w)o(as)e(running)548
2735 y(Red)31 b(Hat)g(9)g(with)g(Linux)h(k)o(ernel)h(2.4.20)f(SMP)e
(and)i(contained)i(2GB)c(of)h(RAM.)f(The)548 2843 y(P)o(allas)23
b(Benchmarks)h(v2.2.1)f(were)g(used)g(to)g(measure)g(the)g(w)o
(all-clock)i(e)o(x)o(ecution)g(time)548 2951 y(of)e(se)n(v)o(eral)i
(MPI)d(collecti)n(v)o(es)k(in)e(LAM/MPI)d(and)j(Open)g(MPI.)648
3059 y(The)31 b(performance)j(of)d Fi(MPI)p 1583 3059
23 4 v 27 w(BCAST)p Fn(,)d(and)k Fi(MPI)p 2290 3059 V
27 w(ALL)-10 b(T)l(O)n(ALL)28 b Fn(is)k(sho)n(wn)f(in)h(Fig-)548
3167 y(ures)24 b(7)f(and)i(8,)d(respecti)n(v)o(ely)-6
b(.)37 b(These)24 b(graphs)h(sho)n(w)e(that)h(the)g(performance)j(of)c
(the)h(col-)548 3275 y(lecti)n(v)o(e)c(algorithms)i(in)e(the)f(Open)h
(MPI)e(are)i(on)g(par)g(with)f(their)h(peers)h(in)f(the)f(LAM/MPI)548
3383 y(6.5)31 b(series.)57 b(Similarly)-6 b(,)34 b(the)d(performance)j
(of)d Fi(MPI)p 2269 3383 V 27 w(BARRIER)e Fn(is)i(nearly)h(identical)
548 3491 y(between)c(the)e(tw)o(o;)i(w)o(all-clock)h(e)o(x)o(ecution)f
(time)e(for)h(tw)o(o)f(processes)j(w)o(as)d(73.5)p Fc(\026)p
Fn(s)h(for)548 3599 y(LAM/MPI,)21 b(and)j(80.2)p Fc(\026)p
Fn(s)g(for)g(Open)g(MPI.)548 3814 y Fo(6.)180 b(Conclusions)648
3972 y Fn(Ef)n(fecti)n(v)o(e,)23 b(easy-to-use)j(tools)e(for)f
(enabling)i(research)g(in)d(high)i(performance)h(com-)548
4080 y(puting)f(are)e(critical)i(to)e(meet)g(the)h(e)n(v)o(er)n(-gro)n
(wing)h(demands)f(of)g(scienti\014c)g(applications.)548
4188 y(The)i(component)i(frame)n(w)o(ork)f(of)f(Open)h(MPI)e(allo)n(ws)
h(third-party)k(researchers)f(to)d(de-)548 4296 y(v)o(elop)d(and)f
(test)h(ne)n(w)f(algorithms)i(within)f(an)f(MPI)f(implementation)k
(without)e(the)f(lar)n(ge)548 4404 y(time)33 b(in)l(v)o(estment)j
(required)g(to)e(\014rst)f(become)i(an)f(MPI)e(implementor)-5
b(.)66 b(This)33 b(allo)n(ws)548 4512 y(quick)o(er)e(de)n(v)o(elopment)
h(of)e(algorithms)h(as)f(well)f(as)g(a)g(rob)n(ust)j(v)o(ehicle)f(to)e
(allo)n(w)g(users)548 4620 y(access)c(to)e(cutting-edge)k(research.)648
4728 y(Future)16 b(w)o(ork)h(includes)h(completing)h(and)e(releasing)h
(Open)f(MPI)e(\(e)o(xpected)j(No)o(v)o(em-)548 4836 y(ber)29
b(2004\),)h(writing)f Fi(coll)f Fn(components)j(to)d(e)o(xploit)i(high)
f(performance)i(in)d(a)g(ne)n(w)f(en-)548 4944 y(vironments,)42
b(tighter)d(inte)o(gration)h(of)d(MPI)f(topology-based)42
b(communicators)e(with)548 5051 y(collecti)n(v)o(e)19
b(algorithms,)h(and)e(continued)i(de)n(v)o(elopment)g(and)d(inte)o
(gration)j(of)d(other)h(com-)p eop end
%%Page: 17 17
TeXDict begin 17 16 bop 598 550 a Fk(The)20 b(Component)f(Ar)m(c)o
(hitectur)m(e)g(of)h(Open)g(MPI)1337 b Fu(17)615 682
y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 615 682 a @beginspecial 50 @llx 50 @lly 554 @urx 770
@ury 3312 @rhi @setspecial
%%BeginDocument: bcast-perf.eps
%!PS-Adobe-2.0
%%Title: ../bcast-perf.eps
%%Creator: gnuplot 3.8j patchlevel 0
%%CreationDate: Wed Jul 14 13:25:00 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
966 420 M
63 0 V
5933 0 R
-63 0 V
882 420 M
gsave 0 setgray
( 10) Rshow
grestore
1.000 UL
LTb
966 755 M
31 0 V
5965 0 R
-31 0 V
966 951 M
31 0 V
5965 0 R
-31 0 V
966 1090 M
31 0 V
5965 0 R
-31 0 V
966 1198 M
31 0 V
5965 0 R
-31 0 V
966 1286 M
31 0 V
5965 0 R
-31 0 V
966 1361 M
31 0 V
5965 0 R
-31 0 V
966 1425 M
31 0 V
5965 0 R
-31 0 V
966 1482 M
31 0 V
5965 0 R
-31 0 V
966 1533 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
gsave 0 setgray
( 100) Rshow
grestore
1.000 UL
LTb
966 1868 M
31 0 V
5965 0 R
-31 0 V
966 2064 M
31 0 V
5965 0 R
-31 0 V
966 2203 M
31 0 V
5965 0 R
-31 0 V
966 2311 M
31 0 V
5965 0 R
-31 0 V
966 2399 M
31 0 V
5965 0 R
-31 0 V
966 2474 M
31 0 V
5965 0 R
-31 0 V
966 2538 M
31 0 V
5965 0 R
-31 0 V
966 2595 M
31 0 V
5965 0 R
-31 0 V
966 2646 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
gsave 0 setgray
( 1000) Rshow
grestore
1.000 UL
LTb
966 2981 M
31 0 V
5965 0 R
-31 0 V
966 3177 M
31 0 V
5965 0 R
-31 0 V
966 3316 M
31 0 V
5965 0 R
-31 0 V
966 3424 M
31 0 V
5965 0 R
-31 0 V
966 3512 M
31 0 V
5965 0 R
-31 0 V
966 3587 M
31 0 V
5965 0 R
-31 0 V
966 3651 M
31 0 V
5965 0 R
-31 0 V
966 3708 M
31 0 V
5965 0 R
-31 0 V
966 3759 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
gsave 0 setgray
( 10000) Rshow
grestore
1.000 UL
LTb
966 4094 M
31 0 V
5965 0 R
-31 0 V
966 4290 M
31 0 V
5965 0 R
-31 0 V
966 4429 M
31 0 V
5965 0 R
-31 0 V
966 4537 M
31 0 V
5965 0 R
-31 0 V
966 4625 M
31 0 V
5965 0 R
-31 0 V
966 4700 M
31 0 V
5965 0 R
-31 0 V
966 4764 M
31 0 V
5965 0 R
-31 0 V
966 4821 M
31 0 V
5965 0 R
-31 0 V
966 4872 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
gsave 0 setgray
( 100000) Rshow
grestore
1.000 UL
LTb
966 420 M
0 63 V
0 4389 R
0 -63 V
966 280 M
gsave 0 setgray
( 1) Cshow
grestore
1.000 UL
LTb
1224 420 M
0 31 V
0 4421 R
0 -31 V
1565 420 M
0 31 V
0 4421 R
0 -31 V
1740 420 M
0 31 V
0 4421 R
0 -31 V
1823 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
2080 420 M
0 31 V
0 4421 R
0 -31 V
2421 420 M
0 31 V
0 4421 R
0 -31 V
2596 420 M
0 31 V
0 4421 R
0 -31 V
2679 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
gsave 0 setgray
( 100) Cshow
grestore
1.000 UL
LTb
2937 420 M
0 31 V
0 4421 R
0 -31 V
3278 420 M
0 31 V
0 4421 R
0 -31 V
3453 420 M
0 31 V
0 4421 R
0 -31 V
3536 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
gsave 0 setgray
( 1000) Cshow
grestore
1.000 UL
LTb
3794 420 M
0 31 V
0 4421 R
0 -31 V
4134 420 M
0 31 V
0 4421 R
0 -31 V
4309 420 M
0 31 V
0 4421 R
0 -31 V
4392 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
gsave 0 setgray
( 10000) Cshow
grestore
1.000 UL
LTb
4650 420 M
0 31 V
0 4421 R
0 -31 V
4991 420 M
0 31 V
0 4421 R
0 -31 V
5166 420 M
0 31 V
0 4421 R
0 -31 V
5249 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
gsave 0 setgray
( 100000) Cshow
grestore
1.000 UL
LTb
5507 420 M
0 31 V
0 4421 R
0 -31 V
5848 420 M
0 31 V
0 4421 R
0 -31 V
6022 420 M
0 31 V
0 4421 R
0 -31 V
6105 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
gsave 0 setgray
( 1e+06) Cshow
grestore
1.000 UL
LTb
6363 420 M
0 31 V
0 4421 R
0 -31 V
6704 420 M
0 31 V
0 4421 R
0 -31 V
6879 420 M
0 31 V
0 4421 R
0 -31 V
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
gsave 0 setgray
( 1e+07) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
966 420 M
5996 0 V
0 4452 V
-5996 0 V
966 420 L
LTb
140 2646 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(Time \(microsecondss\)) Cshow
grestore
grestore
LTb
3964 70 M
gsave 0 setgray
(Bytes) Cshow
grestore
1.000 UP
1.000 UL
LT0
LTb
2898 4739 M
gsave 0 setgray
(LAM/MPI 6.5.9) Rshow
grestore
LT0
2982 4739 M
399 0 V
966 1140 M
258 -33 V
258 -4 V
258 -3 V
257 2 V
258 -1 V
258 1 V
258 18 V
258 78 V
258 54 V
258 39 V
257 134 V
258 101 V
258 147 V
258 218 V
258 263 V
258 316 V
258 443 V
257 350 V
258 333 V
258 327 V
258 330 V
258 331 V
1.000 UL
LT1
LTb
2898 4599 M
gsave 0 setgray
(Open MPI \(pre-release\)) Rshow
grestore
LT1
2982 4599 M
399 0 V
966 1100 M
258 -2 V
258 -2 V
258 0 V
257 0 V
258 1 V
258 0 V
258 25 V
258 60 V
258 64 V
258 44 V
257 137 V
258 66 V
258 160 V
258 207 V
258 257 V
258 299 V
258 310 V
257 325 V
258 328 V
258 329 V
258 333 V
258 333 V
1.000 UL
LTb
966 420 M
5996 0 V
0 4452 V
-5996 0 V
966 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 2547 682 a
 currentpoint grestore moveto
 2547 682 a 1160 2759 a Ft(F)m(igur)m(e)19
b(7.)81 b Fq(W)-6 b(all-clock)19 b(e)o(x)o(ecution)h(times)f(for)f
Fp(MPI)p 2588 2759 19 4 v 23 w(BCAST)p Fq(.)615 2916
y
 gsave currentpoint currentpoint translate -90 neg rotate neg exch
neg exch translate
 615 2916 a @beginspecial 50 @llx 50 @lly 554 @urx 770
@ury 3312 @rhi @setspecial
%%BeginDocument: alltoall-perf.eps
%!PS-Adobe-2.0
%%Title: ../alltoall-perf.eps
%%Creator: gnuplot 3.8j patchlevel 0
%%CreationDate: Wed Jul 14 13:25:00 2004
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
/gnudict 256 dict def
gnudict begin
/Color false def
/Solid false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
/vshift -46 def
/dl {10.0 mul} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
/Rounded false def
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow { currentpoint stroke M
  0 vshift R show } def
/Rshow { currentpoint stroke M
  dup stringwidth pop neg vshift R show } def
/Cshow { currentpoint stroke M
  dup stringwidth pop -2 div vshift R show } def
/UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
/DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse } def
/BL { stroke userlinewidth 2 mul setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/AL { stroke userlinewidth 2 div setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/UL { dup gnulinewidth mul /userlinewidth exch def
      dup 1 lt {pop 1} if 10 mul /udl exch def } def
/PL { stroke userlinewidth setlinewidth
      Rounded { 1 setlinejoin 1 setlinecap } if } def
/LTb { BL [] 0 0 0 DL } def
/LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
/LT0 { PL [] 1 0 0 DL } def
/LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
/LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
/LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
/LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
/LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
/LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
/LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
/LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
/Pnt { stroke [] 0 setdash
   gsave 1 setlinecap M 0 0 V stroke grestore } def
/Dia { stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt } def
/Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
  } def
/Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt } def
/Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke } def
/TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt  } def
/Star { 2 copy Pls Crs } def
/BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V  hpt2 0 V  0 vpt2 V
  hpt2 neg 0 V  closepath fill } def
/TriUF { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill } def
/TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt  } def
/TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill } def
/Pent { stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt } def
/PentF { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore } def
/Circle { stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt } def
/CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
/C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
/C1 { BL [] 0 setdash 2 copy        moveto
       2 copy  vpt 0 90 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C2 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C3 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C4 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C5 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 90 arc
       2 copy moveto
       2 copy  vpt 180 270 arc closepath fill
               vpt 0 360 arc } bind def
/C6 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 90 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C7 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 0 270 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C8 { BL [] 0 setdash 2 copy moveto
      2 copy vpt 270 360 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C9 { BL [] 0 setdash 2 copy moveto
      2 copy  vpt 270 450 arc closepath fill
              vpt 0 360 arc closepath } bind def
/C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
       2 copy moveto
       2 copy vpt 90 180 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C11 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 180 arc closepath fill
       2 copy moveto
       2 copy  vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C12 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C13 { BL [] 0 setdash  2 copy moveto
       2 copy  vpt 0 90 arc closepath fill
       2 copy moveto
       2 copy  vpt 180 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/C14 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 360 arc closepath fill
               vpt 0 360 arc } bind def
/C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
/Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
       neg 0 rlineto closepath } bind def
/Square { dup Rec } bind def
/Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
/S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
/S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
/S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
/S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
       exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
/S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
       2 copy vpt Square fill
       Bsquare } bind def
/S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
/S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
/S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
       Bsquare } bind def
/S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
       Bsquare } bind def
/S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
/S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy vpt Square fill Bsquare } bind def
/S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
       2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
/S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
/D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
/D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
/D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
/D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
/D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
/D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
/D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
/D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
/D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
/D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
/D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
/D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
/D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
/D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
/D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
/D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
/DiaE { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke } def
/BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke } def
/TriUE { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke } def
/TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke } def
/PentE { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore } def
/CircE { stroke [] 0 setdash 
  hpt 0 360 arc stroke } def
/Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
/DiaW { stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke } def
/BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke } def
/TriUW { stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke } def
/TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke } def
/PentW { stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore } def
/CircW { stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke } def
/BoxFill { gsave Rec 1 setgray fill grestore } def
/BoxColFill {
  gsave Rec
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor
  fill grestore } def
%
% PostScript Level 1 Pattern Fill routine
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill { gsave /PFa [ 9 2 roll ] def
    PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
    PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
    gsave 1 setgray fill grestore clip
    currentlinewidth 0.5 mul setlinewidth
    /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
    0 0 M PFa 5 get rotate PFs -2 div dup translate
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 M 0 PFs V } for
    0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{ PFa 4 get mul 0 2 1 roll M PFs 0 V } for
    } if
    stroke grestore } def
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
966 420 M
63 0 V
5933 0 R
-63 0 V
882 420 M
gsave 0 setgray
( 10) Rshow
grestore
1.000 UL
LTb
966 688 M
31 0 V
5965 0 R
-31 0 V
966 1042 M
31 0 V
5965 0 R
-31 0 V
966 1224 M
31 0 V
5965 0 R
-31 0 V
966 1310 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
gsave 0 setgray
( 100) Rshow
grestore
1.000 UL
LTb
966 1578 M
31 0 V
5965 0 R
-31 0 V
966 1933 M
31 0 V
5965 0 R
-31 0 V
966 2115 M
31 0 V
5965 0 R
-31 0 V
966 2201 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
gsave 0 setgray
( 1000) Rshow
grestore
1.000 UL
LTb
966 2469 M
31 0 V
5965 0 R
-31 0 V
966 2823 M
31 0 V
5965 0 R
-31 0 V
966 3005 M
31 0 V
5965 0 R
-31 0 V
966 3091 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
gsave 0 setgray
( 10000) Rshow
grestore
1.000 UL
LTb
966 3359 M
31 0 V
5965 0 R
-31 0 V
966 3714 M
31 0 V
5965 0 R
-31 0 V
966 3895 M
31 0 V
5965 0 R
-31 0 V
966 3982 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
gsave 0 setgray
( 100000) Rshow
grestore
1.000 UL
LTb
966 4250 M
31 0 V
5965 0 R
-31 0 V
966 4604 M
31 0 V
5965 0 R
-31 0 V
966 4786 M
31 0 V
5965 0 R
-31 0 V
966 4872 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
gsave 0 setgray
( 1e+06) Rshow
grestore
1.000 UL
LTb
966 420 M
0 63 V
0 4389 R
0 -63 V
966 280 M
gsave 0 setgray
( 1) Cshow
grestore
1.000 UL
LTb
1224 420 M
0 31 V
0 4421 R
0 -31 V
1565 420 M
0 31 V
0 4421 R
0 -31 V
1740 420 M
0 31 V
0 4421 R
0 -31 V
1823 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
gsave 0 setgray
( 10) Cshow
grestore
1.000 UL
LTb
2080 420 M
0 31 V
0 4421 R
0 -31 V
2421 420 M
0 31 V
0 4421 R
0 -31 V
2596 420 M
0 31 V
0 4421 R
0 -31 V
2679 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
gsave 0 setgray
( 100) Cshow
grestore
1.000 UL
LTb
2937 420 M
0 31 V
0 4421 R
0 -31 V
3278 420 M
0 31 V
0 4421 R
0 -31 V
3453 420 M
0 31 V
0 4421 R
0 -31 V
3536 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
gsave 0 setgray
( 1000) Cshow
grestore
1.000 UL
LTb
3794 420 M
0 31 V
0 4421 R
0 -31 V
4134 420 M
0 31 V
0 4421 R
0 -31 V
4309 420 M
0 31 V
0 4421 R
0 -31 V
4392 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
gsave 0 setgray
( 10000) Cshow
grestore
1.000 UL
LTb
4650 420 M
0 31 V
0 4421 R
0 -31 V
4991 420 M
0 31 V
0 4421 R
0 -31 V
5166 420 M
0 31 V
0 4421 R
0 -31 V
5249 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
gsave 0 setgray
( 100000) Cshow
grestore
1.000 UL
LTb
5507 420 M
0 31 V
0 4421 R
0 -31 V
5848 420 M
0 31 V
0 4421 R
0 -31 V
6022 420 M
0 31 V
0 4421 R
0 -31 V
6105 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
gsave 0 setgray
( 1e+06) Cshow
grestore
1.000 UL
LTb
6363 420 M
0 31 V
0 4421 R
0 -31 V
6704 420 M
0 31 V
0 4421 R
0 -31 V
6879 420 M
0 31 V
0 4421 R
0 -31 V
6962 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
gsave 0 setgray
( 1e+07) Cshow
grestore
1.000 UL
LTb
1.000 UL
LTb
966 420 M
5996 0 V
0 4452 V
-5996 0 V
966 420 L
LTb
140 2646 M
gsave 0 setgray
currentpoint gsave translate 90 rotate 0 0 M
(Time \(microsecondss\)) Cshow
grestore
grestore
LTb
3964 70 M
gsave 0 setgray
(Bytes) Cshow
grestore
1.000 UP
1.000 UL
LT0
LTb
2898 4739 M
gsave 0 setgray
(LAM/MPI 6.5.9) Rshow
grestore
LT0
2982 4739 M
399 0 V
966 1096 M
258 -7 V
258 -1 V
258 -8 V
257 32 V
258 0 V
258 -16 V
258 10 V
258 8 V
258 47 V
258 63 V
257 55 V
258 49 V
258 204 V
258 129 V
258 301 V
258 399 V
258 262 V
257 290 V
258 274 V
258 273 V
258 275 V
258 267 V
1.000 UL
LT1
LTb
2898 4599 M
gsave 0 setgray
(Open MPI \(pre-release\)) Rshow
grestore
LT1
2982 4599 M
399 0 V
966 1047 M
258 1 V
258 7 V
258 -1 V
257 -7 V
258 -3 V
258 10 V
258 37 V
258 21 V
258 3 V
258 55 V
257 77 V
258 72 V
258 140 V
258 178 V
258 232 V
258 346 V
258 304 V
257 269 V
258 252 V
258 259 V
258 267 V
258 270 V
1.000 UL
LTb
966 420 M
5996 0 V
0 4452 V
-5996 0 V
966 420 L
1.000 UP
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1

%%EndDocument
 @endspecial 2547 2916 a
 currentpoint grestore moveto
 2547 2916 a 1107 4993 a Ft(F)m(igur)m(e)g(8.)
81 b Fq(W)-6 b(all-clock)19 b(e)o(x)o(ecution)h(times)f(for)f
Fp(MPI)p 2534 4993 19 4 v 23 w(ALL)-8 b(T)m(O)o(ALL)p
Fq(.)p eop end
%%Page: 18 18
TeXDict begin 18 17 bop 548 550 a Fu(18)548 743 y Fn(ponent)27
b(types)f(within)g(the)g(Open)f(MPI)f(implementation)29
b(\(particularly)f(as)e(the)o(y)f(relate)548 851 y(to)e(collecti)n(v)o
(e)j(algorithms\).)548 1066 y Fo(Refer)n(ences)612 1222
y Fq([1])46 b(Rob)20 b(T)-6 b(.)20 b(Aul)o(wes,)f(Da)o(vid)h(J.)g
(Daniel,)f(Nehal)h(N.)f(Desai,)h(Richard)g(L.)f(Graham,)h(L.)f(Dean)h
(Risinger)m(,)745 1313 y(Mitchel)28 b(W)-7 b(.)27 b(Sukalski,)h(Mark)h
(A.)e(T)-6 b(aylor)m(,)28 b(and)h(T)m(imothy)f(S.)f(W)-6
b(oodall.)49 b(Architecture)29 b(of)f(LA-)745 1405 y(MPI,)22
b(a)g(netw)o(ork-f)o(ault-tolerant)h(mpi.)35 b(In)22
b Ft(Los)g(Alamos)g(r)m(eport)i(LA-UR-03-0939,)e(Pr)m(oceedings)745
1496 y(of)d(IPDPS)p Fq(,)f(2004.)612 1610 y([2])46 b(Gre)o(g)15
b(Burns,)f(Raja)h(Daoud,)g(and)h(James)f(V)-8 b(aigl.)18
b(LAM:)d(An)g(Open)g(Cluster)f(En)m(vironment)i(for)f(MPI.)745
1701 y(In)k Ft(Pr)m(oceedings)h(of)e(Super)m(computing)k(Symposium)p
Fq(,)e(pages)g(379\226386,)h(1994.)612 1815 y([3])46
b(G.)16 b(E.)g(F)o(agg,)h(A.)g(Buk)o(o)o(vsk)o(y)-5 b(,)18
b(and)g(J.)e(J.)h(Dongarra.)23 b(HARNESS)15 b(and)j(f)o(ault)f
(tolerant)g(MPI.)k Ft(P)-6 b(ar)o(allel)745 1907 y(Computing)p
Fq(,)19 b(27:1479\2261496,)j(2001.)612 2020 y([4])46
b(Graham)15 b(E.)e(F)o(agg,)h(Edgar)g(Gabriel,)g(Zizhong)h(Chen,)g
(Thara)f(Angskun,)i(Geor)o(ge)e(Bosilca,)g(Antonin)745
2112 y(Buk)o(o)o(vski,)24 b(and)f(Jack)g(J.)f(Dongarra.)35
b(F)o(ault)22 b(tolerant)h(communication)h(library)f(and)g
(applications)745 2203 y(for)18 b(high)i(perofrmance.)25
b(In)19 b Ft(Los)f(Alamos)h(Computer)g(Science)h(Institute)e(Symposium)
p Fq(,)h(Santa)g(Fee,)745 2294 y(NM,)g(October)g(27-29)h(2003.)612
2408 y([5])46 b(Edgar)19 b(Gabriel,)g(Graham)h(E.)f(F)o(agg,)h(Geor)o
(ge)f(Bosilca,)h(Thara)f(Angskun,)i(Jack)f(J.)f(Dongarra,)h(Jef-)745
2500 y(fre)o(y)14 b(M.)h(Squyres,)f(V)l(ishal)g(Sahay)-5
b(,)15 b(Prabhanjan)g(Kambadur)m(,)h(Brian)e(Barrett,)f(Andre)n(w)j
(Lumsdaine,)745 2591 y(Ralph)22 b(H.)f(Castain,)g(Da)o(vid)g(J.)g
(Daniel,)g(Richard)h(L.)f(Graham,)g(and)h(T)m(imothy)g(S.)f(W)-6
b(oodall.)31 b(Open)745 2682 y(MPI:)20 b(Goals,)g(concept,)h(and)g
(design)g(of)f(a)h(ne)o(xt)f(generation)i(MPI)e(implementation.)29
b(In)21 b Ft(Pr)m(oceed-)745 2774 y(ings,)e(Eur)m(o)g(PVM/MPI)p
Fq(,)e(Budapest,)i(Hungary)-5 b(,)20 b(September)f(2004.)26
b(T)-6 b(o)19 b(appear)l(.)612 2888 y([6])46 b(Al)36
b(Geist,)g(W)m(illiam)f(Gropp,)i(Ste)n(v)o(e)g(Huss-Lederman,)g(Andre)n
(w)g(Lumsdaine,)h(Ewing)e(Lusk,)745 2979 y(W)m(illiam)20
b(Saphir)m(,)g(T)-6 b(on)o(y)21 b(Skjellum,)g(and)g(Marc)h(Snir)l(.)29
b(MPI-2:)21 b(Extending)h(the)f(Message-Passing)745 3070
y(Interf)o(ace.)41 b(In)25 b(Luc)g(Bouge,)g(Pierre)f(Fraigniaud,)h
(Anne)h(Mignotte,)f(and)g(Yv)o(es)h(Robert,)e(editors,)745
3162 y Ft(Eur)m(o-P)-6 b(ar)21 b('96)h(P)-6 b(ar)o(allel)21
b(Pr)m(ocessing)p Fq(,)h(number)g(1123)h(in)f(Lecture)f(Notes)h(in)f
(Computer)h(Science,)745 3253 y(pages)e(128\226135.)h(Springer)e(V)-8
b(erlag,)18 b(1996.)612 3367 y([7])46 b(R.)22 b(L.)g(Graham,)h(S.-E.)e
(Choi,)i(D.)g(J.)f(Daniel,)h(N.)f(N.)g(Desai,)h(R.)f(G.)g(Minnich,)i
(C.)e(E.)g(Rasmussen,)745 3458 y(L.)d(D.)g(Risinger)m(,)h(and)g(M.)g(W)
-7 b(.)19 b(Sukalksi.)28 b(A)20 b(netw)o(ork-f)o(ailure-tolerant)h
(message-passing)h(system)745 3550 y(for)k(terascale)g(clusters.)43
b Ft(Intnl.)26 b(J)n(ournal)h(of)f(P)-6 b(ar)o(allel)25
b(Pr)m(o)o(gr)o(amming)p Fq(,)i(31\(4\):285\226303,)h(August)745
3641 y(2003.)612 3755 y([8])46 b(W)-7 b(.)14 b(Gropp,)h(E.)e(Lusk,)i
(N.)f(Doss,)h(and)g(A.)f(Skjellum.)k(A)d(high-performance,)h(portable)g
(implementa-)745 3846 y(tion)h(of)h(the)g(MPI)f(message)h(passing)h
(interf)o(ace)e(standard.)24 b Ft(P)-6 b(ar)o(allel)17
b(Computing)p Fq(,)h(22\(6\):789\226828,)745 3938 y(September)h(1996.)
612 4052 y([9])46 b(W)m(illiam)17 b(D.)h(Gropp)h(and)g(Ewing)f(Lusk.)24
b Ft(User')m(s)18 b(Guide)h(for)f Fa(mpich)p Ft(,)h(a)g(P)-6
b(ortable)18 b(Implementation)745 4143 y(of)28 b(MPI)p
Fq(.)48 b(Mathematics)28 b(and)h(Computer)g(Science)f(Di)n(vision,)g
(Ar)o(gonne)g(National)g(Laboratory)-5 b(,)745 4234 y(1996.)26
b(ANL-96/6.)575 4348 y([10])46 b(N.)22 b(Karonis,)g(B.)f(de)i
(Supinski,)f(I.)g(F)o(oster)m(,)f(W)-7 b(.)22 b(Gropp,)g(E.)g(Lusk,)g
(and)h(J.)f(Bresnahan.)35 b(Exploiting)745 4440 y(hierarchy)18
b(in)f(parallel)g(computer)h(netw)o(orks)g(to)f(optimize)h(collecti)n
(v)o(e)f(operation)h(performance.)24 b(In)745 4531 y
Ft(14th)19 b(Intnl.)g(P)-6 b(ar)o(allel)18 b(Distrib)o(uted)h(Pr)m
(ocessing)g(Symposium)h(\(IPDPS\))p Fq(,)e(pages)i(377\22684,)g
(Cancun,)745 4622 y(MX,)f(May)g(2000.)575 4736 y([11])46
b(Amit)19 b(Karw)o(ande,)i(Xin)e(Y)-8 b(uan,)20 b(and)h(Da)o(vid)e(Lo)n
(wenthal.)28 b(CCMPI:)19 b(A)h(compiled)g(communication)745
4828 y(capable)h(MPI)e(prototype)i(for)f(ethernet)g(switched)g
(clusters.)27 b(In)20 b Ft(A)n(CM)f(SIGPLAN)g(Symposium)i(on)745
4919 y(Principles)e(and)g(Pr)o(actice)g(of)g(P)-6 b(ar)o(allel)19
b(Pr)m(o)o(gr)o(amming)p Fq(,)g(San)g(Die)o(go,)f(CA,)h(USA,)e(June)j
(2003.)575 5033 y([12])46 b(Rainer)27 b(K)n(eller)m(,)f(Edgar)g
(Gabriel,)h(Bettina)f(Krammer)m(,)h(Matthias)g(S.)f(Mueller)m(,)g(and)i
(Michael)f(M.)745 5124 y(Resch.)20 b(T)-6 b(o)n(w)o(ards)15
b(ef)n(\014cient)g(e)o(x)o(ecution)h(of)g(MPI)e(applications)i(on)g
(the)f(grid:)g(porting)h(and)g(optimiza-)745 5215 y(tion)j(issues.)25
b Ft(J)n(ournal)20 b(of)f(Grid)g(Computing)p Fq(,)g(1:133\226149,)i
(2003.)p eop end
%%Page: 19 19
TeXDict begin 19 18 bop 598 550 a Fk(The)20 b(Component)f(Ar)m(c)o
(hitectur)m(e)g(of)h(Open)g(MPI)1337 b Fu(19)625 732
y Fq([13])46 b(Thilo)15 b(Kielmann,)h(Henri)g(E.)f(Bal,)h(and)g(Ser)o
(gei)g(Gorlatch.)k(Bandwidth-ef)n(\014cient)d(Collecti)n(v)o(e)f(Com-)
795 823 y(munication)21 b(for)g(Clustered)g(W)m(ide)g(Area)f(Systems.)
30 b(In)21 b Ft(International)h(P)-6 b(ar)o(allel)21
b(and)g(Distrib)o(uted)795 915 y(Pr)m(ocessing)12 b(Symposium)g
(\(IPDPS)g(2000\))p Fq(,)g(pages)g(492\226499,)g(Cancun,)g(Me)o(x)q
(ico,)g(May)h(200)q(0.)f(IEEE.)625 1031 y([14])46 b(Thilo)17
b(Kielmann,)h(Rutger)g(F)-6 b(.)17 b(H.)g(Hofman,)h(Henri)f(E.)g(Bal,)g
(Ask)o(e)h(Plaat,)f(and)h(Raoul)g(A.)f(F)-6 b(.)17 b(Bhoed-)795
1122 y(jang.)37 b(MagPIe:)23 b(MPI')l(s)g(collecti)n(v)o(e)g
(communication)i(operations)g(for)e(clustered)h(wide)f(area)h(sys-)795
1213 y(tems.)33 b Ft(A)n(CM)22 b(SIGPLAN)f(Symposium)i(on)g(Principles)
f(and)h(Pr)o(actice)f(of)g(P)-6 b(ar)o(allel)22 b(Pr)m(o)o(gr)o(amming)
795 1305 y(\(PP)-6 b(oPP'99\))p Fq(,)17 b(34\(8\):131\226140,)22
b(May)e(1999.)625 1421 y([15])46 b(S.)21 b(P)-8 b(.)20
b(Kini,)i(J.)f(Liu,)h(J.)f(W)l(u,)h(P)-8 b(.)20 b(W)-5
b(yck)o(of)n(f,)22 b(and)h(D.)f(K.)f(P)o(anda.)33 b(F)o(ast)22
b(and)g(Scalable)g(Barrier)g(Using)795 1512 y(RDMA)h(and)g(Multicast)g
(Mechanisms)i(for)e(In\014niBand-Based)g(Cluster.)36
b(In)23 b Ft(Pr)m(oceedings,)g(10th)795 1604 y(Eur)m(opean)c(PVM/MPI)e
(User)o(s')h(Gr)m(oup)g(Meeting)p Fq(,)g(number)h(2840)h(in)d(Lecture)h
(Notes)g(in)g(Computer)795 1695 y(Science,)g(V)-8 b(enice,)19
b(Italy)-5 b(,)19 b(September)g(/)f(October)i(2003.)f(Springer)o(-V)-8
b(erlag.)625 1811 y([16])46 b(John)16 b(M.)f(Mellor)o(-Crumme)o(y)h
(and)g(Michael)g(L.)f(Scott.)k(Algorithms)d(for)f(scalable)h
(synchronization)795 1903 y(on)22 b(shared-memory)h(multiprocessors.)32
b Ft(A)n(CM)21 b(T)l(r)o(ansactions)h(on)g(Computer)g(Systems)p
Fq(,)g(9\(1\):21\226)795 1994 y(65,)d(1991.)625 2110
y([17])46 b(Message)18 b(P)o(assing)f(Interf)o(ace)h(F)o(orum.)k(MPI:)
17 b(A)f(Message)j(P)o(assing)e(Interf)o(ace.)23 b(In)17
b Ft(Pr)m(oc.)f(of)h(Super)o(-)795 2201 y(computing)j('93)p
Fq(,)f(pages)h(878\226883.)g(IEEE)e(Computer)i(Society)e(Press,)g(No)o
(v)o(ember)i(1993.)625 2318 y([18])46 b(Sriram)25 b(Sankaran,)i(Jef)n
(fre)o(y)f(M.)h(Squyres,)f(Brian)g(Barrett,)g(Andre)n(w)g(Lumsdaine,)h
(Jason)g(Duell,)795 2409 y(P)o(aul)19 b(Har)o(gro)o(v)o(e,)h(and)g
(Eric)f(Roman.)29 b(The)19 b(LAM/MPI)h(checkpoint/restart)h(frame)n(w)o
(ork:)f(System-)795 2500 y(initiated)13 b(checkpointing.)19
b(In)13 b Ft(Pr)m(oceedings,)h(LA)n(CSI)e(Symposium)p
Fq(,)j(Sante)e(Fe,)g(Ne)n(w)g(Me)o(xico,)h(USA,)795 2592
y(October)19 b(2003.)625 2708 y([19])46 b(Jef)n(fre)o(y)13
b(M.)g(Squyres)h(and)g(Andre)n(w)g(Lumsdaine.)j(A)c(Component)i
(Architecture)f(for)f(LAM/MPI.)j(In)795 2799 y Ft(Pr)m(oceedings,)21
b(10th)g(Eur)m(opean)h(PVM/MPI)e(User)o(s')h(Gr)m(oup)g(Meeting)p
Fq(,)g(number)g(2840)h(in)f(Lecture)795 2890 y(Notes)e(in)f(Computer)i
(Science,)f(V)-8 b(enice,)18 b(Italy)-5 b(,)19 b(September)g(/)g
(October)g(2003.)h(Springer)o(-V)-8 b(erlag.)625 3007
y([20])46 b(Clemens)21 b(Szyperski,)f(Domink)i(Druntz,)e(and)h(Stephan)
g(Murer)l(.)30 b Ft(Component)22 b(Softwar)m(e:)f(Be)n(yond)795
3098 y(Object-Oriented)e(Pr)m(o)o(gr)o(amming)p Fq(.)26
b(Addison)20 b(W)-6 b(esle)o(y)h(,)18 b(second)i(edition,)f(2002.)625
3214 y([21])46 b(Rajee)n(v)18 b(Thakur)h(and)g(W)m(illiam)e(Gropp.)25
b(Impro)o(ving)19 b(the)g(Performance)f(of)h(MPI)f(Collecti)n(v)o(e)g
(Com-)795 3306 y(munication)29 b(on)g(Switched)g(Netw)o(orks.)50
b(T)-5 b(echnical)29 b(report)g(ANL/MCS-P1007-1102,)g(Mathe-)795
3397 y(matics)21 b(and)h(Computer)g(Science)f(Di)n(vision,)g(Ar)o
(gonne)i(National)e(Laboratory)-5 b(,)22 b(No)o(v)o(ember)g(2002.)795
3488 y Fa(ftp://info.mcs.anl.gov/pub/tech)p 2010 3488
24 4 v 35 w(reports/reports/P1007.pdf)p Fq(.)625 3604
y([22])46 b(Rajee)n(v)18 b(Thakur)g(and)g(W)m(illiam)f(Gropp.)23
b(Impro)o(ving)c(the)f(Performance)g(of)g(Collecti)n(v)o(e)f
(Operations)795 3696 y(in)25 b(MPICH.)40 b(In)25 b Ft(Pr)m(oceedings,)h
(10th)g(Eur)m(opean)g(PVM/MPI)e(User)o(s')h(Gr)m(oup)h(Meeting)p
Fq(,)f(Lecture)795 3787 y(Notes)19 b(in)f(Computer)i(Science,)f(V)-8
b(enice,)18 b(Italy)-5 b(,)19 b(September)g(/)g(October)g(2003.)h
(Springer)o(-V)-8 b(erlag.)625 3903 y([23])46 b(T)-6
b(.S.)34 b(W)-6 b(oodall,)36 b(R.L.)e(Graham,)i(R.H.)f(Castain,)g(D.J.)
g(Daniel,)h(M.W)-7 b(.)35 b(Sukalski,)h(G.E.)e(F)o(agg,)795
3995 y(E.)c(Gabriel,)h(G.)f(Bosilca,)h(T)-6 b(.)31 b(Angskun,)h(J.J.)f
(Dongarra,)g(J.M.)g(Squyres,)h(V)-10 b(.)31 b(Sahay)-5
b(,)31 b(P)-8 b(.)30 b(Kam-)795 4086 y(badur)m(,)17 b(B.)f(Barrett,)g
(and)h(A.)f(Lumsdaine.)23 b(TEG:)15 b(A)i(high-performance,)h
(scalable,)f(multi-netw)o(ork)795 4177 y(point-to-point)e
(communications)i(methodology)-5 b(.)21 b(In)14 b Ft(Pr)m(oceedings,)i
(Eur)m(o)e(PVM/MPI)p Fq(,)f(Budapest,)795 4269 y(Hungary)-5
b(,)19 b(September)g(2004.)27 b(T)-6 b(o)18 b(appear)l(.)625
4385 y([24])46 b(Qianfeng)16 b(Zhang.)k(MPI)14 b(collecti)n(v)o(e)i
(operations)g(o)o(v)o(er)g(Myrinet.)j(Master')l(s)d(thesis,)f(The)g
(Uni)n(v)o(ersity)795 4476 y(of)k(British)f(Columbia,)h(Department)g
(of)g(Computer)h(Science,)f(June)g(2002.)p eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
